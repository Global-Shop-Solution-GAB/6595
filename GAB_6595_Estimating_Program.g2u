Program.Sub.ScreenSU.Start
Gui.FormMain..Create(DashForm)
Gui.FormMain..Caption("Estimating Tool")
Gui.FormMain..Size(24705,15195)
Gui.FormMain..MinX(0)
Gui.FormMain..MinY(0)
Gui.FormMain..Position(0,0)
Gui.FormMain..WindowState(2)
Gui.FormMain..AlwaysOnTop(False)
Gui.FormMain..FontName("Tahoma")
Gui.FormMain..FontSize(8.25)
Gui.FormMain..ControlBox(True)
Gui.FormMain..MaxButton(True)
Gui.FormMain..MinButton(True)
Gui.FormMain..MousePointer(0)
Gui.FormMain..Moveable(True)
Gui.FormMain..Sizeable(True)
Gui.FormMain..ShowInTaskBar(True)
Gui.FormMain..TitleBar(True)
Gui.FormMain..BarSaveButton(True,False)
Gui.FormMain..Event(SaveButtonClick,FormMain_SaveButtonClick)
Gui.FormMain..Event(UnLoad,FormMain_UnLoad)
Gui.FormMain..Event(UserButtonClicked,FormMain_UserButtonClicked)
Gui.FormMain.SplitContainerMaster.Create(SplitContainer)
Gui.FormMain.SplitContainerMaster.Enabled(True)
Gui.FormMain.SplitContainerMaster.Visible(True)
Gui.FormMain.SplitContainerMaster.Zorder(0)
Gui.FormMain.SplitContainerMaster.Size(24180,14205)
Gui.FormMain.SplitContainerMaster.Position(0,0)
Gui.FormMain.SplitContainerMaster.Orientation(1)
Gui.FormMain.SplitContainerMaster.SplitterPosition(11415)
Gui.FormMain.SplitContainerMaster.Collapsed(False)
Gui.FormMain.SplitContainerMaster.Dock(5)
Gui.FormMain.SplitContainerMain.Create(SplitContainer)
Gui.FormMain.SplitContainerMain.Enabled(True)
Gui.FormMain.SplitContainerMain.Visible(True)
Gui.FormMain.SplitContainerMain.Zorder(0)
Gui.FormMain.SplitContainerMain.Size(24180,11325)
Gui.FormMain.SplitContainerMain.Position(0,0)
Gui.FormMain.SplitContainerMain.Orientation(0)
Gui.FormMain.SplitContainerMain.SplitterPosition(17415)
Gui.FormMain.SplitContainerMain.Collapsed(False)
Gui.FormMain.SplitContainerMain.Dock(5)
Gui.FormMain.SplitContainerMain.Parent("SplitContainerMaster",0)
Gui.FormMain.SplitContainerLabour.Create(SplitContainer)
Gui.FormMain.SplitContainerLabour.Enabled(True)
Gui.FormMain.SplitContainerLabour.Visible(True)
Gui.FormMain.SplitContainerLabour.Zorder(0)
Gui.FormMain.SplitContainerLabour.Size(17415,11415)
Gui.FormMain.SplitContainerLabour.Position(0,0)
Gui.FormMain.SplitContainerLabour.Orientation(1)
Gui.FormMain.SplitContainerLabour.SplitterPosition(7350)
Gui.FormMain.SplitContainerLabour.Collapsed(False)
Gui.FormMain.SplitContainerLabour.Dock(5)
Gui.FormMain.SplitContainerLabour.Parent("SplitContainerMain",0)
Gui.FormMain.splitContainerSubLabourTop.Create(SplitContainer)
Gui.FormMain.splitContainerSubLabourTop.Enabled(True)
Gui.FormMain.splitContainerSubLabourTop.Visible(True)
Gui.FormMain.splitContainerSubLabourTop.Zorder(0)
Gui.FormMain.splitContainerSubLabourTop.Size(17805,7350)
Gui.FormMain.splitContainerSubLabourTop.Position(0,0)
Gui.FormMain.splitContainerSubLabourTop.Orientation(1)
Gui.FormMain.splitContainerSubLabourTop.SplitterPosition(3870)
Gui.FormMain.splitContainerSubLabourTop.Collapsed(False)
Gui.FormMain.splitContainerSubLabourTop.Parent("SplitContainerLabour",0)
Gui.FormMain.splitContainerSubLabourTop.Dock(5)
Gui.FormMain.txtClientName.Create(TextBox,"",True,3450,300,0,2235,210,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtClientName.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtPartCode.Create(TextBox,"",True,1755,300,0,90,750,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartCode.MaxLength(17)
Gui.FormMain.txtPartCode.Event(LostFocus,txtPartCode_LostFocus)
Gui.FormMain.txtPartCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblQuantityBrake.Create(Label,"Quantity Buildup",True,1050,165,0,90,1110,True,0,"Tahoma",7,,0,0)
Gui.FormMain.lblQuantityBrake.BorderStyle(0)
Gui.FormMain.lblQuantityBrake.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblPartPL.Create(Label,"PL",True,165,195,0,7050,555,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblPartPL.BorderStyle(0)
Gui.FormMain.lblPartPL.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblClientPartNo.Create(Label,"Client Part No",True,885,165,0,90,1725,True,0,"Tahoma",7,,0,0)
Gui.FormMain.lblClientPartNo.BorderStyle(0)
Gui.FormMain.lblClientPartNo.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtPartDescription.Create(TextBox,"",True,3195,300,0,2940,750,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartDescription.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtPartDescription.MaxLength(30)
Gui.FormMain.txtPartDescription2.Create(TextBox,"",False,3195,300,0,2940,1080,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartDescription2.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtPartDescription2.MaxLength(30)
Gui.FormMain.txtPartDescription3.Create(TextBox,"",False,3195,300,0,2940,1410,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartDescription3.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtPartDescription3.MaxLength(30)
Gui.FormMain.txtPartUM.Create(TextBox,"",True,405,300,0,6165,750,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartUM.MaxLength(2)
Gui.FormMain.txtPartUM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdPartUMBrowse.Create(Button)
Gui.FormMain.cmdPartUMBrowse.Enabled(True)
Gui.FormMain.cmdPartUMBrowse.Visible(True)
Gui.FormMain.cmdPartUMBrowse.Zorder(0)
Gui.FormMain.cmdPartUMBrowse.Size(405,300)
Gui.FormMain.cmdPartUMBrowse.Position(6585,750)
Gui.FormMain.cmdPartUMBrowse.Caption("^")
Gui.FormMain.cmdPartUMBrowse.FontName("Tahoma")
Gui.FormMain.cmdPartUMBrowse.FontSize(8.25)
Gui.FormMain.cmdPartUMBrowse.Event(Click,cmdPartUMBrowse_Click)
Gui.FormMain.cmdPartUMBrowse.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtPartPL.Create(TextBox,"",True,405,300,0,7020,765,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartPL.MaxLength(2)
Gui.FormMain.txtPartPL.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdPartPLBrowse.Create(Button)
Gui.FormMain.cmdPartPLBrowse.Enabled(True)
Gui.FormMain.cmdPartPLBrowse.Visible(True)
Gui.FormMain.cmdPartPLBrowse.Zorder(0)
Gui.FormMain.cmdPartPLBrowse.Size(495,300)
Gui.FormMain.cmdPartPLBrowse.Position(7470,750)
Gui.FormMain.cmdPartPLBrowse.Caption("^")
Gui.FormMain.cmdPartPLBrowse.FontName("Tahoma")
Gui.FormMain.cmdPartPLBrowse.FontSize(8.25)
Gui.FormMain.cmdPartPLBrowse.Event(Click,cmdPartPLBrowse_Click)
Gui.FormMain.cmdPartPLBrowse.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtQuantityBrake.Create(TextBox,"",True,1695,300,0,90,1350,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtQuantityBrake.Event(LostFocus,txtQuantityBrake_LostFocus)
Gui.FormMain.txtQuantityBrake.Parent("splitContainerSubLabourTop",0)

Gui.FormMain.lblComponentDesc.Create(Label,"Description",True,795,195,0,10335,3375,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentDesc.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentDesc.BorderStyle(0)
Gui.FormMain.cmdPartLookupCoreSystem.Create(Button)
Gui.FormMain.cmdPartLookupCoreSystem.Enabled(True)
Gui.FormMain.cmdPartLookupCoreSystem.Visible(False)
Gui.FormMain.cmdPartLookupCoreSystem.Zorder(0)
Gui.FormMain.cmdPartLookupCoreSystem.Size(495,300)
Gui.FormMain.cmdPartLookupCoreSystem.Position(15525,420)
Gui.FormMain.cmdPartLookupCoreSystem.Caption("Edit")
Gui.FormMain.cmdPartLookupCoreSystem.FontName("Tahoma")
Gui.FormMain.cmdPartLookupCoreSystem.FontSize(8.25)
Gui.FormMain.cmdPartLookupCoreSystem.Event(Click,OPENPartInfomationCORESYSTEM)
Gui.FormMain.cmdPartLookupCoreSystem.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdPartLengthWidthSwap.Create(Button)
Gui.FormMain.cmdPartLengthWidthSwap.Enabled(True)
Gui.FormMain.cmdPartLengthWidthSwap.Visible(True)
Gui.FormMain.cmdPartLengthWidthSwap.Zorder(0)
Gui.FormMain.cmdPartLengthWidthSwap.Size(900,225)
Gui.FormMain.cmdPartLengthWidthSwap.Position(10125,2700)
Gui.FormMain.cmdPartLengthWidthSwap.Caption("Swap LW")
Gui.FormMain.cmdPartLengthWidthSwap.FontName("Tahoma")
Gui.FormMain.cmdPartLengthWidthSwap.FontSize(8.25)
Gui.FormMain.cmdPartLengthWidthSwap.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdPartLengthWidthSwap.Event(Click,cmdPartLengthWidthSwap_Click)
Gui.FormMain.txtClientCode.Create(TextBox,"",True,1500,300,0,105,210,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtClientCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdBrowseCust.Create(Button)
Gui.FormMain.cmdBrowseCust.Enabled(True)
Gui.FormMain.cmdBrowseCust.Visible(True)
Gui.FormMain.cmdBrowseCust.Zorder(0)
Gui.FormMain.cmdBrowseCust.Size(495,300)
Gui.FormMain.cmdBrowseCust.Position(1665,195)
Gui.FormMain.cmdBrowseCust.Caption("^")
Gui.FormMain.cmdBrowseCust.FontName("Tahoma")
Gui.FormMain.cmdBrowseCust.FontSize(8.25)
Gui.FormMain.cmdBrowseCust.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdBrowseCust.Event(Click,cmdBrowseCust_Click)
Gui.FormMain.txtPartRevCode.Create(TextBox,"",True,495,300,0,1875,750,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartRevCode.MaxLength(3)
Gui.FormMain.txtPartRevCode.Event(LostFocus,txtPartRevCode_LostFocus)
Gui.FormMain.txtPartRevCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtFeatureQty.Create(TextBox,"",True,510,300,0,5760,3570,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFeatureQty.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdBrowsePart.Create(Button)
Gui.FormMain.cmdBrowsePart.Enabled(True)
Gui.FormMain.cmdBrowsePart.Visible(True)
Gui.FormMain.cmdBrowsePart.Zorder(0)
Gui.FormMain.cmdBrowsePart.Size(495,300)
Gui.FormMain.cmdBrowsePart.Position(2400,735)
Gui.FormMain.cmdBrowsePart.Caption("^")
Gui.FormMain.cmdBrowsePart.FontName("Tahoma")
Gui.FormMain.cmdBrowsePart.FontSize(8.25)
Gui.FormMain.cmdBrowsePart.Event(Click,cmdBrowsePart_Click)
Gui.FormMain.cmdBrowsePart.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblRTRSeqComment.Create(Label,"WO Instructions:",True,165,195,0,6180,1400,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblRTRSeqComment.BorderStyle(0)
Gui.FormMain.lblRTRSeqComment.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.TXTRTRSEQCOMMENT.Create(TextboxM)
Gui.FormMain.TXTRTRSEQCOMMENT.Enabled(True)
Gui.FormMain.TXTRTRSEQCOMMENT.Visible(True)
Gui.FormMain.TXTRTRSEQCOMMENT.Zorder(0)
Gui.FormMain.TXTRTRSEQCOMMENT.Size(4365,870)
Gui.FormMain.TXTRTRSEQCOMMENT.Position(6180,1680)
Gui.FormMain.TXTRTRSEQCOMMENT.FontName("Tahoma")
Gui.FormMain.TXTRTRSEQCOMMENT.FontSize(8.25)
Gui.FormMain.TXTRTRSEQCOMMENT.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentQTY.Create(Label,"Qty",True,270,195,0,13515,3360,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentQTY.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentQTY.BorderStyle(0)
Gui.FormMain.ddlFeature.Create(DropDownList)
Gui.FormMain.ddlFeature.Enabled(True)
Gui.FormMain.ddlFeature.Visible(True)
Gui.FormMain.ddlFeature.Zorder(0)
Gui.FormMain.ddlFeature.Size(1290,300)
Gui.FormMain.ddlFeature.Position(3600,3570)
Gui.FormMain.ddlFeature.FontName("Tahoma")
Gui.FormMain.ddlFeature.FontSize(8.25)
Gui.FormMain.ddlFeature.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.ddlFeature.AddItem("Cut Time",0)
Gui.FormMain.ddlFeature.AddItem("Total Cut Length",1)
Gui.FormMain.ddlFeature.AddItem("Rectangle",2)
Gui.FormMain.ddlFeature.AddItem("Square",3)
Gui.FormMain.ddlFeature.AddItem("Circle",4)
Gui.FormMain.ddlFeature.AddItem("Pierce",5)
Gui.FormMain.ddlFeature.Parent("Seaction1")
Gui.FormMain.ddlFeature.Event(Change,ddlFeature_Change)
Gui.FormMain.txtClientPartNumber.Create(TextBox,"",True,2130,300,0,90,1965,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtClientPartNumber.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtClientPartNumber.MaxLength(20)
Gui.FormMain.lblMainSheetFactor.Create(Label,"Sheet Factor",False,930,195,0,15270,540,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMainSheetFactor.BorderStyle(0)
Gui.FormMain.lblMainSheetFactor.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdQuickAddInventory.Create(Button)
Gui.FormMain.cmdQuickAddInventory.Size(2200,325)
Gui.FormMain.cmdQuickAddInventory.Position(2500,1830)
Gui.FormMain.cmdQuickAddInventory.Caption("Add Material / Components")
Gui.FormMain.cmdQuickAddInventory.Event(Click,cmdQuickAddInventory_Click)
Gui.FormMain.cmdQuickAddInventory.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdQuickAddInventory.Enabled(True)
Gui.FormMain.cmdQuickAddInventory.Visible(True)
Gui.FormMain.cmdQuickAddInventory.Zorder(0)
Gui.FormMain.cmdQuickAddInventory.FontName("Tahoma")
Gui.FormMain.cmdQuickAddInventory.FontSize(8.25)
Gui.FormMain.chkNoMaterial.Create(Checkbox)
Gui.FormMain.chkNoMaterial.Enabled(True)
Gui.FormMain.chkNoMaterial.Visible(True)
Gui.FormMain.chkNoMaterial.Zorder(0)
Gui.FormMain.chkNoMaterial.Size(750,300)
Gui.FormMain.chkNoMaterial.Position(795,2085)
Gui.FormMain.chkNoMaterial.Caption("None")
Gui.FormMain.chkNoMaterial.FontName("Tahoma")
Gui.FormMain.chkNoMaterial.FontSize(8.25)
Gui.FormMain.chkNoMaterial.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.chkNoMaterial.Event(Click,chkNoMaterial_Click)
Gui.FormMain.chkCustomerSupply.Create(Checkbox)
Gui.FormMain.chkCustomerSupply.Enabled(True)
Gui.FormMain.chkCustomerSupply.Visible(True)
Gui.FormMain.chkCustomerSupply.Zorder(0)
Gui.FormMain.chkCustomerSupply.Size(1095,300)
Gui.FormMain.chkCustomerSupply.Position(1635,2085)
Gui.FormMain.chkCustomerSupply.Caption("Customer")
Gui.FormMain.chkCustomerSupply.FontName("Tahoma")
Gui.FormMain.chkCustomerSupply.FontSize(8.25)
Gui.FormMain.chkCustomerSupply.Event(Change,chkCustomerSupply_Change)
Gui.FormMain.chkCustomerSupply.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.ddlVendQuote.create(DropDownList)
Gui.FormMain.ddlVendQuote.Size(7545,300)
Gui.FormMain.ddlVendQuote.position(2820,2055)
Gui.FormMain.ddlVendQuote.FontName("Consolas")
Gui.FormMain.ddlVendQuote.visible(True)
Gui.FormMain.ddlVendQuote.Event(Click,ddlVendQuote_click)
Gui.FormMain.ddlVendQuote.Event(Change,ddlVendQuote_click)
Gui.FormMain.ddlVendQuote.Enabled(True)
Gui.FormMain.ddlVendQuote.Zorder(0)
Gui.FormMain.ddlVendQuote.FontSize(8.25)
Gui.FormMain.ddlVendQuote.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtCutPieceLength.Create(TextBox,"",True,705,300,0,8610,3030,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCutPieceLength.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.optRectangleCalc.Create(Option)
Gui.FormMain.optRectangleCalc.Enabled(True)
Gui.FormMain.optRectangleCalc.Visible(True)
Gui.FormMain.optRectangleCalc.Zorder(0)
Gui.FormMain.optRectangleCalc.Size(1095,255)
Gui.FormMain.optRectangleCalc.Position(7440,2985)
Gui.FormMain.optRectangleCalc.Caption("Rectangle")
Gui.FormMain.optRectangleCalc.FontName("Tahoma")
Gui.FormMain.optRectangleCalc.FontSize(8.25)
Gui.FormMain.optRectangleCalc.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.optRectangleCalc.Event(Click,optRectangleCalc_Click)
Gui.FormMain.optRectangleCalc.ControlGroup(2)
Gui.FormMain.optMaterial.Create(Option)
Gui.FormMain.optMaterial.Enabled(True)
Gui.FormMain.optMaterial.Visible(False)
Gui.FormMain.optMaterial.Zorder(0)
Gui.FormMain.optMaterial.Size(1005,225)
Gui.FormMain.optMaterial.Position(60,2985)
Gui.FormMain.optMaterial.Caption("Material")
Gui.FormMain.optMaterial.FontName("Tahoma")
Gui.FormMain.optMaterial.FontSize(8.25)
Gui.FormMain.optMaterial.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.optMaterial.ControlGroup(1)
Gui.FormMain.txtFeatureRectWid.Create(TextBox,"",False,765,300,0,15180,525,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFeatureRectWid.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtFullSheetLength.Create(TextBox,"",True,615,300,0,11100,3030,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFullSheetLength.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtFullSheetWidth.Create(TextBox,"",True,690,300,0,11760,3030,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFullSheetWidth.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtComponentDesc.Create(TextBox,"",True,1995,300,0,10305,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentDesc.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lbl3.Create(Label,"Cut Width:",False,780,195,0,15150,660,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl3.BorderStyle(0)
Gui.FormMain.lbl3.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtCutBillRate.Create(TextBox,"",True,600,300,0,1635,3555,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCutBillRate.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtCutBillRate.Event(LostFocus,txtCutBillRate_LostFocus)
Gui.FormMain.ddlWorkCenterLaser.Create(DropDownList)
Gui.FormMain.ddlWorkCenterLaser.Enabled(True)
Gui.FormMain.ddlWorkCenterLaser.Visible(True)
Gui.FormMain.ddlWorkCenterLaser.Zorder(0)
Gui.FormMain.ddlWorkCenterLaser.Size(900,300)
Gui.FormMain.ddlWorkCenterLaser.Position(45,3555)
Gui.FormMain.ddlWorkCenterLaser.FontName("Tahoma")
Gui.FormMain.ddlWorkCenterLaser.FontSize(8.25)
Gui.FormMain.ddlWorkCenterLaser.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.ddlWorkCenterLaser.Event(Change,ddlWorkCenterLaser_change)
Gui.FormMain.txtMainBord.Create(TextBox,"",True,600,300,0,2310,2970,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainBord.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtMaterialDesc.Create(TextBox,"",True,3000,300,0,3840,2370,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMaterialDesc.MaxLength(30)
Gui.FormMain.txtMaterialDesc.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtDiamiterMM.Create(TextBox,"",True,765,300,0,4965,3570,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtDiamiterMM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtSpeed.Create(TextBox,"",True,600,300,0,2940,3570,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtSpeed.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtSheetUM.Create(TextBox,"",True,450,300,0,5055,2970,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtSheetUM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblCutSetRate.Create(Label,"Set$",True,330,195,0,2310,3330,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblCutSetRate.BorderStyle(0)
Gui.FormMain.lblCutSetRate.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdAddFeature.Create(Button)
Gui.FormMain.cmdAddFeature.Enabled(True)
Gui.FormMain.cmdAddFeature.Visible(True)
Gui.FormMain.cmdAddFeature.Zorder(0)
Gui.FormMain.cmdAddFeature.Size(495,300)
Gui.FormMain.cmdAddFeature.Position(6300,3570)
Gui.FormMain.cmdAddFeature.Caption("Add")
Gui.FormMain.cmdAddFeature.FontName("Tahoma")
Gui.FormMain.cmdAddFeature.FontSize(8.25)
Gui.FormMain.cmdAddFeature.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdAddFeature.Event(Click,cmdAddFeature_Click)
Gui.FormMain.txtMainPerSheet.Create(TextBox,"",True,645,300,0,6735,2970,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainPerSheet.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtMainPerSheet.event(LostFocus,txtMainPerSheet_LostFocus)
Gui.FormMain.optCircleCalc.Create(Option)
Gui.FormMain.optCircleCalc.Enabled(True)
Gui.FormMain.optCircleCalc.Visible(True)
Gui.FormMain.optCircleCalc.Zorder(0)
Gui.FormMain.optCircleCalc.Size(855,225)
Gui.FormMain.optCircleCalc.Position(7440,2715)
Gui.FormMain.optCircleCalc.Caption("Circle")
Gui.FormMain.optCircleCalc.FontName("Tahoma")
Gui.FormMain.optCircleCalc.FontSize(8.25)
Gui.FormMain.optCircleCalc.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.optCircleCalc.Event(Click,optCircleCalc_Click)
Gui.FormMain.optCircleCalc.ControlGroup(2)
Gui.FormMain.lblClientname.Create(Label,"Customer Name",True,855,195,0,2235,15,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblClientname.BorderStyle(0)
Gui.FormMain.lblClientname.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtComponentCode.Create(TextBox,"",True,1995,300,0,7740,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtCutPieceWidth.Create(TextBox,"",True,705,300,0,9390,3030,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCutPieceWidth.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdEstimationCalculate.Create(Button)
Gui.FormMain.cmdEstimationCalculate.Enabled(True)
Gui.FormMain.cmdEstimationCalculate.Visible(True)
Gui.FormMain.cmdEstimationCalculate.Zorder(0)
Gui.FormMain.cmdEstimationCalculate.Size(900,315)
Gui.FormMain.cmdEstimationCalculate.Position(10140,3015)
Gui.FormMain.cmdEstimationCalculate.Caption("Calculate")
Gui.FormMain.cmdEstimationCalculate.FontName("Tahoma")
Gui.FormMain.cmdEstimationCalculate.FontSize(8.25)
Gui.FormMain.cmdEstimationCalculate.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdEstimationCalculate.Event(Click,cmdEstimationCalculateOptimized_Click)
Gui.FormMain.txtMainWidth.Create(TextBox,"",True,705,300,0,1560,2970,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainWidth.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtMainSpace.Create(TextBox,"",True,600,300,0,2955,2970,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainSpace.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtCutPieceSpacing.Create(TextBox,"",True,570,300,0,12480,3030,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCutPieceSpacing.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtMainPierce.Create(TextBox,"",True,600,300,0,3600,2970,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainPierce.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtSheetCost.Create(TextBox,"",True,750,300,0,4245,2970,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtSheetCost.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtSheetCost.Event(LostFocus,txtSheetCost_LostFocus)
Gui.FormMain.txtSheetMarkup.Create(TextBox,"",True,450,300,0,5565,2970,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtSheetMarkup.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtSheetMarkup.Event(LostFocus,txtSheetMarkup_LostFocus)
Gui.FormMain.txtCutSetRate.Create(TextBox,"",True,600,300,0,2280,3555,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCutSetRate.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtCutSetRate.Event(LostFocus,txtCutSetRate_LostFocus)
Gui.FormMain.txtSheetMinCharge.Create(TextBox,"",True,600,300,0,6075,2970,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtSheetMinCharge.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtSheetMinCharge.Event(LostFocus,txtSheetMinCharge_LostFocus)
Gui.FormMain.txtMaterialName.Create(TextBox,"",True,2100,300,0,75,2385,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMaterialName.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtMaterialName.MaxLength(20)
Gui.FormMain.cmdBrowseMaterial.Create(Button)
Gui.FormMain.cmdBrowseMaterial.Enabled(True)
Gui.FormMain.cmdBrowseMaterial.Visible(True)
Gui.FormMain.cmdBrowseMaterial.Zorder(0)
Gui.FormMain.cmdBrowseMaterial.Size(495,300)
Gui.FormMain.cmdBrowseMaterial.Position(2220,2355)
Gui.FormMain.cmdBrowseMaterial.Caption("^")
Gui.FormMain.cmdBrowseMaterial.FontName("Tahoma")
Gui.FormMain.cmdBrowseMaterial.FontSize(8.25)
Gui.FormMain.cmdBrowseMaterial.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdBrowseMaterial.Event(Click,cmdBrowseMaterial_Click)
Gui.FormMain.cmdQuickAddDescription.Create(Button)
Gui.FormMain.cmdQuickAddDescription.Enabled(True)
Gui.FormMain.cmdQuickAddDescription.Visible(True)
Gui.FormMain.cmdQuickAddDescription.Zorder(0)
Gui.FormMain.cmdQuickAddDescription.Size(495,300)
Gui.FormMain.cmdQuickAddDescription.Position(2745,2370)
Gui.FormMain.cmdQuickAddDescription.Caption("Desc")
Gui.FormMain.cmdQuickAddDescription.FontName("Tahoma")
Gui.FormMain.cmdQuickAddDescription.FontSize(8.25)
Gui.FormMain.cmdQuickAddDescription.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdQuickAddDescription.Event(Click,cmdQuickAddDescription_Click)
Gui.FormMain.txtComponentSortCode.Create(TextBox,"",True,1200,300,0,15945,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentSortCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtComponentQty.Create(TextBox,"",True,600,300,0,13485,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentQty.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtComponentMin.Create(TextBox,"",False,600,300,0,15390,585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentMin.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtVendQuoteNote.Create(TextBox,"",True,3405,300,0,6930,2370,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtVendQuoteNote.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtMainMM.Create(TextBox,"",True,600,300,0,75,2970,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainMM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtMainSheetFactor.Create(TextBox,"",False,1185,300,0,14685,555,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainSheetFactor.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.pic1.Create(PictureBox)
Gui.FormMain.pic1.Size(450,465)
Gui.FormMain.pic1.Position(13860,75)
Gui.FormMain.trvFile.create(treeview)
Gui.FormMain.trvFile.size(495,2000)
Gui.FormMain.trvFile.position(13860,555)
Gui.FormMain.trvFile.parent("splitContainerSubLabourTop",0)
Gui.FormMain.trvFile.Event(NodeClick,trvFile_NodeClick)
Gui.FormMain.trvFile.Event(DragDropFile,trvFileDragDrop)
Gui.FormMain.trvFile.Enabled(True)
Gui.FormMain.trvFile.Visible(True)
Gui.FormMain.trvFile.Zorder(0)
Gui.FormMain.trvFile.FontName("Tahoma")
Gui.FormMain.trvFile.FontSize(8.25)
Gui.FormMain.cmdAddComponent.Create(Button)
Gui.FormMain.cmdAddComponent.Enabled(True)
Gui.FormMain.cmdAddComponent.Visible(True)
Gui.FormMain.cmdAddComponent.Zorder(0)
Gui.FormMain.cmdAddComponent.Size(495,300)
Gui.FormMain.cmdAddComponent.Position(17205,3585)
Gui.FormMain.cmdAddComponent.Caption("Add")
Gui.FormMain.cmdAddComponent.FontName("Tahoma")
Gui.FormMain.cmdAddComponent.FontSize(8.25)
Gui.FormMain.cmdAddComponent.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdAddComponent.Event(Click,cmdAddComponent_Click)
Gui.FormMain.gsgcDocControl.Create(GsGridControl)
Gui.FormMain.gsgcDocControl.Enabled(True)
Gui.FormMain.gsgcDocControl.Visible(True)
Gui.FormMain.gsgcDocControl.Zorder(0)
Gui.FormMain.gsgcDocControl.Size(3255,2505)
Gui.FormMain.gsgcDocControl.Position(14400,30)
Gui.FormMain.gsgcDocControl.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.gsgcDocControl.Event(RowCellClick,gsgcDocControl_RowCellClick)
Gui.FormMain.txtComponentUM.Create(TextBox,"",True,450,300,0,12345,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentUM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtComponentSetQty.Create(TextBox,"",True,600,300,0,12840,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentSetQty.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtComponentCost.Create(TextBox,"",True,630,300,0,14115,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentCost.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtComponentMarkup.Create(TextBox,"",True,600,300,0,14805,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentMarkup.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtComponentOmit.Create(TextBox,"",True,405,300,0,15465,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtComponentOmit.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.gsgcKitParts.Create(GsGridControl)
Gui.FormMain.gsgcKitParts.Enabled(True)
Gui.FormMain.gsgcKitParts.Visible(True)
Gui.FormMain.gsgcKitParts.Zorder(0)
Gui.FormMain.gsgcKitParts.Size(3255,1830)
Gui.FormMain.gsgcKitParts.Position(10575,30)
Gui.FormMain.gsgcKitParts.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.gsgcKitParts.Event(RowCellClick,gsgcKitParts_RowCellClick)
Gui.FormMain.gsgcKitParts.Event(CellValueChanged,gsgcKitParts_CellValueChanged)
Gui.FormMain.cmdMaterialLookupCORE.Create(Button)
Gui.FormMain.cmdMaterialLookupCORE.Enabled(True)
Gui.FormMain.cmdMaterialLookupCORE.Visible(True)
Gui.FormMain.cmdMaterialLookupCORE.Zorder(0)
Gui.FormMain.cmdMaterialLookupCORE.Size(495,300)
Gui.FormMain.cmdMaterialLookupCORE.Position(3285,2370)
Gui.FormMain.cmdMaterialLookupCORE.Caption("Edit")
Gui.FormMain.cmdMaterialLookupCORE.FontName("Tahoma")
Gui.FormMain.cmdMaterialLookupCORE.FontSize(8.25)
Gui.FormMain.cmdMaterialLookupCORE.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdMaterialLookupCORE.Event(Click,OPENMaterialLookupCORESYSTEM)
Gui.FormMain.txtCutSetupTime.Create(TextBox,"",True,600,300,0,990,3555,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCutSetupTime.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtCutSetupTime.Event(LostFocus,txtCutSetupTime_LostFocus)
Gui.FormMain.cmdAddKitPart.Create(Button)
Gui.FormMain.cmdAddKitPart.Size(3255,345)
Gui.FormMain.cmdAddKitPart.Position(10590,1875)
Gui.FormMain.cmdAddKitPart.Caption("Add Kit Part")
Gui.FormMain.cmdAddKitPart.Event(Click,cmdAddKitPart_Click)
Gui.FormMain.cmdAddKitPart.parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdAddKitPart.Enabled(True)
Gui.FormMain.cmdAddKitPart.Visible(True)
Gui.FormMain.cmdAddKitPart.Zorder(0)
Gui.FormMain.cmdAddKitPart.FontName("Tahoma")
Gui.FormMain.cmdAddKitPart.FontSize(8.25)
Gui.FormMain.cmdTopParent.Create(Button)
Gui.FormMain.cmdTopParent.Size(3255,330)
Gui.FormMain.cmdTopParent.Position(10590,2220)
Gui.FormMain.cmdTopParent.Caption("Top Parent")
Gui.FormMain.cmdTopParent.Event(Click,cmdTopParent_Click)
Gui.FormMain.cmdTopParent.parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdTopParent.Enabled(True)
Gui.FormMain.cmdTopParent.Visible(True)
Gui.FormMain.cmdTopParent.Zorder(0)
Gui.FormMain.cmdTopParent.FontName("Tahoma")
Gui.FormMain.cmdTopParent.FontSize(8.25)
Gui.FormMain.txtFileT.create(textbox,"",False,3705,300,0,13680,1950,True,0,"Arial",8,-2147483643,1)
Gui.FormMain.txtFileT.parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtMainLength.Create(TextBox,"",True,780,300,0,735,2970,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainLength.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdBrowseComponent.Create(Button)
Gui.FormMain.cmdBrowseComponent.Enabled(True)
Gui.FormMain.cmdBrowseComponent.Visible(True)
Gui.FormMain.cmdBrowseComponent.Zorder(0)
Gui.FormMain.cmdBrowseComponent.Size(495,300)
Gui.FormMain.cmdBrowseComponent.Position(9765,3585)
Gui.FormMain.cmdBrowseComponent.Caption("^")
Gui.FormMain.cmdBrowseComponent.FontName("Tahoma")
Gui.FormMain.cmdBrowseComponent.FontSize(8.25)
Gui.FormMain.cmdBrowseComponent.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdBrowseComponent.Event(Click,cmdBrowseComponent_Click)
Gui.FormMain.cmdOpenFile.Create(Button)
Gui.FormMain.cmdOpenFile.Size(3705,345)
Gui.FormMain.cmdOpenFile.Position(13680,2250)
Gui.FormMain.cmdOpenFile.Caption("Open File")
Gui.FormMain.cmdOpenFile.Event(Click,cmdOpenFile_Click)
Gui.FormMain.cmdOpenFile.parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdOpenFile.Enabled(True)
Gui.FormMain.cmdOpenFile.Visible(False)
Gui.FormMain.cmdOpenFile.Zorder(0)
Gui.FormMain.cmdOpenFile.FontName("Tahoma")
Gui.FormMain.cmdOpenFile.FontSize(8.25)
Gui.FormMain.ddlDocGroup.Create(DropDownList)
Gui.FormMain.ddlDocGroup.Size(2070,300)
Gui.FormMain.ddlDocGroup.Position(13695,2610)
Gui.FormMain.ddlDocGroup.parent("splitContainerSubLabourTop",0)
Gui.FormMain.ddlDocGroup.Enabled(True)
Gui.FormMain.ddlDocGroup.Visible(False)
Gui.FormMain.ddlDocGroup.Zorder(0)
Gui.FormMain.ddlDocGroup.FontName("Tahoma")
Gui.FormMain.ddlDocGroup.FontSize(8.25)
Gui.FormMain.cmdDrawBrowse.create(button)
Gui.FormMain.cmdDrawBrowse.size(1560,315)
Gui.FormMain.cmdDrawBrowse.Position(15810,2595)
Gui.FormMain.cmdDrawBrowse.Caption("Browse Files")
Gui.FormMain.cmdDrawBrowse.visible(False)
Gui.FormMain.cmdDrawBrowse.parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdDrawBrowse.Event(Click,cmdDrawBrowse_Click)
Gui.FormMain.cmdDrawBrowse.Enabled(True)
Gui.FormMain.cmdDrawBrowse.Zorder(0)
Gui.FormMain.cmdDrawBrowse.FontName("Tahoma")
Gui.FormMain.cmdDrawBrowse.FontSize(8.25)
Gui.FormMain.cmdFileD.Create(Button)
Gui.FormMain.cmdFileD.Size(1605,345)
Gui.FormMain.cmdFileD.Position(13710,2955)
Gui.FormMain.cmdFileD.Caption("Remove File")
Gui.FormMain.cmdFileD.visible(False)
Gui.FormMain.cmdFileD.Event(Click,cmdFileD_Click)
Gui.FormMain.cmdFileD.parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdFileD.Enabled(True)
Gui.FormMain.cmdFileD.Zorder(0)
Gui.FormMain.cmdFileD.FontName("Tahoma")
Gui.FormMain.cmdFileD.FontSize(8.25)
Gui.FormMain.cmdUpdateGroup.Create(Button)
Gui.FormMain.cmdUpdateGroup.Size(1995,375)
Gui.FormMain.cmdUpdateGroup.Position(15375,2940)
Gui.FormMain.cmdUpdateGroup.DefaultValue("")
Gui.FormMain.cmdUpdateGroup.Caption("Save / Update Group")
Gui.FormMain.cmdUpdateGroup.Event(Click,cmdUpdateGroup_Click)
Gui.FormMain.cmdUpdateGroup.parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdUpdateGroup.Enabled(True)
Gui.FormMain.cmdUpdateGroup.Visible(False)
Gui.FormMain.cmdUpdateGroup.Zorder(0)
Gui.FormMain.cmdUpdateGroup.FontName("Tahoma")
Gui.FormMain.cmdUpdateGroup.FontSize(8.25)
Gui.FormMain.lblDiamiterMM.Create(Label,"Dia./Prc",True,570,195,0,4980,3330,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblDiamiterMM.BorderStyle(0)
Gui.FormMain.lblDiamiterMM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdCheckPrefixConnnection.Create(Button)
Gui.FormMain.cmdCheckPrefixConnnection.Enabled(True)
Gui.FormMain.cmdCheckPrefixConnnection.Visible(False)
Gui.FormMain.cmdCheckPrefixConnnection.Zorder(0)
Gui.FormMain.cmdCheckPrefixConnnection.Size(930,165)
Gui.FormMain.cmdCheckPrefixConnnection.Position(915,555)
Gui.FormMain.cmdCheckPrefixConnnection.Caption("add cust code")
Gui.FormMain.cmdCheckPrefixConnnection.FontName("Tahoma")
Gui.FormMain.cmdCheckPrefixConnnection.FontSize(8.25)
Gui.FormMain.cmdCheckPrefixConnnection.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdCheckPrefixConnnection.BackColor(8421631)
Gui.FormMain.cmdCheckPrefixConnnection.ForeColor(16777215)
Gui.FormMain.cmdCheckPrefixConnnection.Event(Click,cmdCheckPrefixConnnection_Click)
Gui.FormMain.cmdOpenThumbnail.Create(Button)
Gui.FormMain.cmdOpenThumbnail.Size(3000,345)
Gui.FormMain.cmdOpenThumbnail.Position(14355,150)
Gui.FormMain.cmdOpenThumbnail.Caption("Open Thumbnail")
Gui.FormMain.cmdOpenThumbnail.visible(False)
Gui.FormMain.cmdOpenThumbnail.Event(Click,cmdOpenThumbnail_Click)
Gui.FormMain.cmdOpenThumbnail.parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdOpenThumbnail.Enabled(True)
Gui.FormMain.cmdOpenThumbnail.Zorder(0)
Gui.FormMain.cmdOpenThumbnail.FontName("Tahoma")
Gui.FormMain.cmdOpenThumbnail.FontSize(8.25)
Gui.FormMain.lblComponentSetQTY.Create(Label,"Set Qty",True,555,195,0,12885,3360,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentSetQTY.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentSetQTY.BorderStyle(0)
Gui.FormMain.lblFeatureQty.Create(Label,"Qty",True,270,195,0,5805,3345,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblFeatureQty.BorderStyle(0)
Gui.FormMain.lblFeatureQty.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblEmpNo.Create(Label,"User",True,540,195,0,6330,165,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblEmpNo.BorderStyle(0)
Gui.FormMain.lblEmpNo.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblSheetUM.Create(Label,"UM",True,225,195,0,5070,2730,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblSheetUM.BorderStyle(0)
Gui.FormMain.lblSheetUM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdExtraNotes.Create(Button)
Gui.FormMain.cmdExtraNotes.Enabled(True)
Gui.FormMain.cmdExtraNotes.Visible(False)
Gui.FormMain.cmdExtraNotes.Zorder(0)
Gui.FormMain.cmdExtraNotes.Size(525,300)
Gui.FormMain.cmdExtraNotes.Position(7380,1680)
Gui.FormMain.cmdExtraNotes.Caption("Notes")
Gui.FormMain.cmdExtraNotes.FontName("Tahoma")
Gui.FormMain.cmdExtraNotes.FontSize(8.25)
Gui.FormMain.cmdExtraNotes.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdExtraNotes.Event(Click,OpenUpdatePartTextGUI)
Gui.FormMain.lblPartUM.Create(Label,"UM",True,225,195,0,6180,540,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblPartUM.BorderStyle(0)
Gui.FormMain.lblPartUM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentCost.Create(Label,"Cost",True,330,195,0,14130,3375,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentCost.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentCost.BorderStyle(0)
Gui.FormMain.lblRevision.Create(Label,"Revision",False,600,195,0,16290,555,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblRevision.BorderStyle(0)
Gui.FormMain.lblRevision.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblCuttingWorkcenter.Create(Label,"Cutting WC",True,825,195,0,75,3330,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblCuttingWorkcenter.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblCuttingWorkcenter.BorderStyle(0)
Gui.FormMain.lblSpeed.Create(Label,"Speed",True,450,195,0,2985,3330,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblSpeed.BorderStyle(0)
Gui.FormMain.lblSpeed.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblEstProTimes.Create(Label,"Est. Time",True,660,195,0,6885,3345,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblEstProTimes.BorderStyle(0)
Gui.FormMain.lblEstProTimes.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtEmpNumber.Create(TextBox,"",True,1095,300,0,6975,90,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtEmpNumber.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentMinCharge.Create(Label,"Min.Chg.",False,645,195,0,15525,510,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentMinCharge.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentMinCharge.BorderStyle(0)
Gui.FormMain.lblClientCode.Create(Label,"Customer",True,825,195,0,135,15,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblClientCode.BorderStyle(0)
Gui.FormMain.lblClientCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtNotes.Create(TextBox,"",False,3930,300,0,2505,1710,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtNotes.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lbl8.Create(Label,"Total:",False,420,195,0,14820,600,False,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl8.BorderStyle(0)
Gui.FormMain.lbl8.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.GsWebBrowserThumbnail.Create(GsWebBrowser)
Gui.FormMain.GsWebBrowserThumbnail.Enabled(True)
Gui.FormMain.GsWebBrowserThumbnail.Visible(false)
Gui.FormMain.GsWebBrowserThumbnail.Zorder(0)
Gui.FormMain.GsWebBrowserThumbnail.Size(2145,1605)
Gui.FormMain.GsWebBrowserThumbnail.Position(8175,15)
Gui.FormMain.GsWebBrowserThumbnail.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.chkFixedPrice.Create(CheckBox)
Gui.FormMain.chkFixedPrice.Enabled(True)
Gui.FormMain.chkFixedPrice.Visible(True)
Gui.FormMain.chkFixedPrice.Zorder(0)
Gui.FormMain.chkFixedPrice.Size(1200,575)
Gui.FormMain.chkFixedPrice.Position(8175,15)
Gui.FormMain.chkFixedPrice.Caption("Fixed Price")
Gui.FormMain.chkFixedPrice.FontName("Tahoma")
Gui.FormMain.chkFixedPrice.FontSize(8.25)
Gui.FormMain.lblMaterialDesc.Create(Label,"Material Description",False,1410,195,0,15360,480,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMaterialDesc.BorderStyle(0)
Gui.FormMain.lblMaterialDesc.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblCutSetupTime.Create(Label,"Setup",True,420,195,0,1020,3330,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblCutSetupTime.BorderStyle(0)
Gui.FormMain.lblCutSetupTime.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblFeature.Create(Label,"Feature",True,570,195,0,3600,3345,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblFeature.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblFeature.BorderStyle(0)
Gui.FormMain.txtPartRevCodeCopy.Create(TextBox,"",False,405,300,0,14925,345,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartRevCodeCopy.MaxLength(3)
Gui.FormMain.txtPartRevCodeCopy.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentMarkup.Create(Label,"Markup",True,525,195,0,14835,3375,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentMarkup.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentMarkup.BorderStyle(0)
Gui.FormMain.lblComponentOmit.Create(Label,"Omit",True,330,195,0,15495,3375,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentOmit.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentOmit.BorderStyle(0)
Gui.FormMain.lblComponentCodeSort.Create(Label,"Sort Code",True,720,195,0,15945,3375,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentCodeSort.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentCodeSort.BorderStyle(0)
Gui.FormMain.txtDXFLocation.Create(TextBox,"",False,1500,300,0,15150,315,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtDXFLocation.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdBrowsePartCopy.Create(Button)
Gui.FormMain.cmdBrowsePartCopy.Enabled(True)
Gui.FormMain.cmdBrowsePartCopy.Visible(False)
Gui.FormMain.cmdBrowsePartCopy.Zorder(0)
Gui.FormMain.cmdBrowsePartCopy.Size(495,300)
Gui.FormMain.cmdBrowsePartCopy.Position(15870,480)
Gui.FormMain.cmdBrowsePartCopy.Caption("^")
Gui.FormMain.cmdBrowsePartCopy.FontName("Tahoma")
Gui.FormMain.cmdBrowsePartCopy.FontSize(8.25)
Gui.FormMain.cmdBrowsePartCopy.Event(Click,cmdBrowsePartCopy_Click)
Gui.FormMain.cmdBrowsePartCopy.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblCutLengthWidth.Create(Label,"Cut Length / Width:",True,1425,195,0,8625,2715,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblCutLengthWidth.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblCutLengthWidth.BorderStyle(0)
Gui.FormMain.lblComponentUM.Create(Label,"UM",True,225,195,0,12375,3375,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponentUM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponentUM.BorderStyle(0)
Gui.FormMain.lblPartDescription.Create(Label,"Part Description",True,975,165,0,2955,540,True,0,"Tahoma",7,,0,0)
Gui.FormMain.lblPartDescription.BorderStyle(0)
Gui.FormMain.lblPartDescription.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponent.Create(Label,"Material/Component",True,1455,195,0,7755,3375,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblComponent.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblComponent.BorderStyle(0)
Gui.FormMain.lblCutBillRate.Create(Label,"Run$",True,375,195,0,1680,3330,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblCutBillRate.BorderStyle(0)
Gui.FormMain.lblCutBillRate.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.GSGCFeatures.Create(GsGridControl)
Gui.FormMain.GSGCFeatures.Enabled(True)
Gui.FormMain.GSGCFeatures.Visible(True)
Gui.FormMain.GSGCFeatures.Zorder(0)
Gui.FormMain.GSGCFeatures.Size(8775,3300)
Gui.FormMain.GSGCFeatures.Position(0,0)
Gui.FormMain.GSGCFeatures.Parent("splitContainerSubLabourTop",1)
Gui.FormMain.GSGCFeatures.Dock(0)
Gui.FormMain.GSGCFeatures.Event(RowClick,GSGCFeatures_RowCellClick)
Gui.FormMain.GSGCFeatures.Event(CellValueChanged,GSGCFeatures_CellValueChanged)
Gui.FormMain.GSGCFeatures.Anchor(7)
Gui.FormMain.gsgcComponents.Create(GsGridControl)
Gui.FormMain.gsgcComponents.Enabled(True)
Gui.FormMain.gsgcComponents.Visible(True)
Gui.FormMain.gsgcComponents.Zorder(0)
Gui.FormMain.gsgcComponents.Size(11800,3300)
Gui.FormMain.gsgcComponents.Position(8880,0)
Gui.FormMain.gsgcComponents.Parent("splitContainerSubLabourTop",1)
Gui.FormMain.gsgcComponents.Dock(0)
Gui.FormMain.gsgcComponents.event(CellValueChanged,GSGCComponents_CellValueChanged)
Gui.FormMain.lblMainMM.Create(Label,"(mm)",True,360,195,0,150,2715,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMainMM.BorderStyle(0)
Gui.FormMain.lblMainMM.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtPartCodeCopy.Create(TextBox,"",False,1755,300,0,15345,270,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPartCodeCopy.MaxLength(17)
Gui.FormMain.txtPartCodeCopy.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtPartCodeCopy.Event(LostFocus,txtPartCodeCopy_LostFocus)
Gui.FormMain.lblPartCode.Create(Label,"Part#",True,630,165,0,105,555,True,0,"Tahoma",7,,0,0)
Gui.FormMain.lblPartCode.BorderStyle(0)
Gui.FormMain.lblPartCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtFeatureRectLen.Create(TextBox,"",False,765,300,0,13770,1125,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFeatureRectLen.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblSheetMinCharge.Create(Label,"Min.",True,300,195,0,6105,2745,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblSheetMinCharge.BorderStyle(0)
Gui.FormMain.lblSheetMinCharge.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblMainspace.Create(Label,"Space",True,435,195,0,3015,2730,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMainspace.BorderStyle(0)
Gui.FormMain.lblMainspace.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblMainPerSheet.Create(Label,"P/Sheet",True,570,195,0,6765,2730,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMainPerSheet.BorderStyle(0)
Gui.FormMain.lblMainPerSheet.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdGenerateNewPartCode.Create(Button)
Gui.FormMain.cmdGenerateNewPartCode.Enabled(True)
Gui.FormMain.cmdGenerateNewPartCode.Visible(True)
Gui.FormMain.cmdGenerateNewPartCode.Zorder(0)
Gui.FormMain.cmdGenerateNewPartCode.Size(930,195)
Gui.FormMain.cmdGenerateNewPartCode.Position(900,525)
Gui.FormMain.cmdGenerateNewPartCode.Caption("Cust Code")
Gui.FormMain.cmdGenerateNewPartCode.FontName("Tahoma")
Gui.FormMain.cmdGenerateNewPartCode.FontSize(8.25)
Gui.FormMain.cmdGenerateNewPartCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.cmdGenerateNewPartCode.Event(Click,cmdGenerateNewPartCode_Click)
Gui.FormMain.cmdGenerateGenPartCode.Create(Button)
Gui.FormMain.cmdGenerateGenPartCode.Enabled(True)
Gui.FormMain.cmdGenerateGenPartCode.Visible(True)
Gui.FormMain.cmdGenerateGenPartCode.Zorder(0)
Gui.FormMain.cmdGenerateGenPartCode.Size(900,195)
Gui.FormMain.cmdGenerateGenPartCode.Position(1860,525)
Gui.FormMain.cmdGenerateGenPartCode.Caption("Next Code")
Gui.FormMain.cmdGenerateGenPartCode.FontName("Tahoma")
Gui.FormMain.cmdGenerateGenPartCode.FontSize(8.25)
Gui.FormMain.cmdGenerateGenPartCode.Event(Click,cmdGenerateGenPartCode_Click)
Gui.FormMain.cmdGenerateGenPartCode.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblSpacing.Create(Label,"Spacing:",True,615,195,0,12495,2805,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblSpacing.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblSpacing.BorderStyle(0)
Gui.FormMain.lblMainBord.Create(Label,"Bord",True,330,195,0,2370,2715,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMainBord.BorderStyle(0)
Gui.FormMain.lblMainBord.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblMainLength.Create(Label,"Length",True,495,195,0,810,2715,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMainLength.BorderStyle(0)
Gui.FormMain.lblMainLength.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblMainWidth.Create(Label,"Width",True,420,195,0,1590,2715,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMainWidth.BorderStyle(0)
Gui.FormMain.lblMainWidth.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblMainPierce.Create(Label,"Pierce",True,435,195,0,3630,2745,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMainPierce.BorderStyle(0)
Gui.FormMain.lblMainPierce.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.optComponent.Create(Option)
Gui.FormMain.optComponent.Enabled(True)
Gui.FormMain.optComponent.Visible(False)
Gui.FormMain.optComponent.Zorder(0)
Gui.FormMain.optComponent.Size(1500,255)
Gui.FormMain.optComponent.Position(1080,3000)
Gui.FormMain.optComponent.Caption("Component")
Gui.FormMain.optComponent.FontName("Tahoma")
Gui.FormMain.optComponent.FontSize(8.25)
Gui.FormMain.optComponent.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.optComponent.ControlGroup(1)
Gui.FormMain.lblSheetCost.Create(Label,"Sheet Cost",True,795,195,0,4230,2730,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblSheetCost.BorderStyle(0)
Gui.FormMain.lblSheetCost.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblSheetMarkup.Create(Label,"Mark.",True,405,195,0,5595,2745,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblSheetMarkup.BorderStyle(0)
Gui.FormMain.lblSheetMarkup.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblFullSheet.Create(Label,"Full Sheet",True,705,195,0,11775,2625,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblFullSheet.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblFullSheet.BorderStyle(0)
Gui.FormMain.lblMaterial.Create(Label,"Material",True,570,195,0,90,2145,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblMaterial.BorderStyle(0)
Gui.FormMain.lblMaterial.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.txtEstProTimes.Create(TextBox,"",True,795,300,0,6855,3585,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtEstProTimes.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblWidth.Create(Label,"Width:",True,480,195,0,11130,2820,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWidth.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblWidth.BorderStyle(0)
Gui.FormMain.lblLength.Create(Label,"Length:",True,555,195,0,11790,2820,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblLength.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblLength.BorderStyle(0)
Gui.FormMain.lblHasAdditionalNotes.Create(Label,"*",False,90,195,0,7470,1410,True,0,"Tahoma",8.5,,0,0)
Gui.FormMain.lblHasAdditionalNotes.BorderStyle(0)
Gui.FormMain.lblHasAdditionalNotes.Parent("splitContainerSubLabourTop",0)
Gui.FormMain.lblHasAdditionalNotes.ForeColor(255)
Gui.FormMain.splitContainerSubLabour.Create(SplitContainer)
Gui.FormMain.splitContainerSubLabour.Enabled(True)
Gui.FormMain.splitContainerSubLabour.Visible(True)
Gui.FormMain.splitContainerSubLabour.Zorder(0)
Gui.FormMain.splitContainerSubLabour.Size(17415,3975)
Gui.FormMain.splitContainerSubLabour.Position(0,0)
Gui.FormMain.splitContainerSubLabour.Orientation(1)
Gui.FormMain.splitContainerSubLabour.SplitterPosition(1830)
Gui.FormMain.splitContainerSubLabour.Collapsed(False)
Gui.FormMain.splitContainerSubLabour.Parent("SplitContainerLabour",1)
Gui.FormMain.splitContainerSubLabour.Dock(5)
Gui.FormMain.txtWCRunUM.Create(TextBox,"",True,405,300,0,4740,315,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtWCRunUM.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtWCRunRate.Create(TextBox,"",True,675,300,0,5280,315,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtWCRunRate.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtWCSetupTime.Create(TextBox,"",True,675,300,0,6060,315,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtWCSetupTime.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtWCSetupRate.Create(TextBox,"",True,675,300,0,6825,300,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtWCSetupRate.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtWCOpcode.Create(TextBox,"",True,675,300,0,7650,330,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtWCOpcode.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtWCCost.Create(TextBox,"",True,675,300,0,8460,330,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtWCCost.Parent("splitContainerSubLabour",1)
Gui.FormMain.ddlWorkCenter.Create(DropDownList)
Gui.FormMain.ddlWorkCenter.Enabled(True)
Gui.FormMain.ddlWorkCenter.Visible(True)
Gui.FormMain.ddlWorkCenter.Zorder(0)
Gui.FormMain.ddlWorkCenter.Size(2010,300)
Gui.FormMain.ddlWorkCenter.Position(90,300)
Gui.FormMain.ddlWorkCenter.FontName("Tahoma")
Gui.FormMain.ddlWorkCenter.FontSize(8.25)
Gui.FormMain.ddlWorkCenter.Parent("splitContainerSubLabour",1)
Gui.FormMain.ddlWorkCenter.Event(Change,ddlWorkCenter_Change)
Gui.FormMain.txtWCCode.Create(TextBox,"",True,810,300,0,2205,315,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtWCCode.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtWCRunTime.Create(TextBox,"",True,675,300,0,3150,315,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtWCRunTime.Parent("splitContainerSubLabour",1)
Gui.FormMain.ddlWCRunUnit.Create(DropDownList)
Gui.FormMain.ddlWCRunUnit.Enabled(True)
Gui.FormMain.ddlWCRunUnit.Visible(True)
Gui.FormMain.ddlWCRunUnit.Zorder(0)
Gui.FormMain.ddlWCRunUnit.Size(705,300)
Gui.FormMain.ddlWCRunUnit.Position(3885,315)
Gui.FormMain.ddlWCRunUnit.FontName("Tahoma")
Gui.FormMain.ddlWCRunUnit.FontSize(8.25)
Gui.FormMain.ddlWCRunUnit.Parent("splitContainerSubLabour",1)
Gui.FormMain.cmdAddWC.Create(Button)
Gui.FormMain.cmdAddWC.Enabled(True)
Gui.FormMain.cmdAddWC.Visible(True)
Gui.FormMain.cmdAddWC.Zorder(0)
Gui.FormMain.cmdAddWC.Size(495,300)
Gui.FormMain.cmdAddWC.Position(9225,345)
Gui.FormMain.cmdAddWC.Caption("Add")
Gui.FormMain.cmdAddWC.FontName("Tahoma")
Gui.FormMain.cmdAddWC.FontSize(8.25)
Gui.FormMain.cmdAddWC.Parent("splitContainerSubLabour",1)
Gui.FormMain.cmdAddWC.Event(Click,cmdAddWC_Click)
Gui.FormMain.GSGCWorkSelection.Create(GsGridControl)
Gui.FormMain.GSGCWorkSelection.Enabled(True)
Gui.FormMain.GSGCWorkSelection.Visible(True)
Gui.FormMain.GSGCWorkSelection.Zorder(0)
Gui.FormMain.GSGCWorkSelection.Size(17805,1800)
Gui.FormMain.GSGCWorkSelection.Position(0,0)
Gui.FormMain.GSGCWorkSelection.Parent("splitContainerSubLabour",0)
Gui.FormMain.GSGCWorkSelection.Dock(5)
Gui.FormMain.GSGCWorkSelection.Event(RowClick,GSGCWorkSelection_RowClick)
Gui.FormMain.GSGCWorkSelection.Event(CellValueChanged,GSGCWorkSelection_CellValueChanged)
Gui.FormMain.GSGCWorkSelection.Event(RowCellClick,GSGCWorkSelection_RowCellClick)
Gui.FormMain.txtOut.Create(TextBox,"",True,1290,300,0,30,870,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtOut.Create(TextBox,"",True,1290,300,0,105,915,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtOut.Parent("splitContainerSubLabour",1)
Gui.FormMain.cmdRemoveZeroTime.Create(Button)
Gui.FormMain.cmdRemoveZeroTime.Enabled(True)
Gui.FormMain.cmdRemoveZeroTime.Visible(True)
Gui.FormMain.cmdRemoveZeroTime.Zorder(0)
Gui.FormMain.cmdRemoveZeroTime.Size(1395,300)
Gui.FormMain.cmdRemoveZeroTime.Position(8070,1500)
Gui.FormMain.cmdRemoveZeroTime.Caption("Rem. Unused Lab.")
Gui.FormMain.cmdRemoveZeroTime.FontName("Tahoma")
Gui.FormMain.cmdRemoveZeroTime.FontSize(8.25)
Gui.FormMain.cmdRemoveZeroTime.Parent("splitContainerSubLabour",1)
Gui.FormMain.cmdRemoveZeroTime.Event(Click,cmdRemoveZeroTime_Click)
Gui.FormMain.cmdLaserCutterCalc.Create(Button)
Gui.FormMain.cmdLaserCutterCalc.Enabled(True)
Gui.FormMain.cmdLaserCutterCalc.Visible(True)
Gui.FormMain.cmdLaserCutterCalc.Zorder(0)
Gui.FormMain.cmdLaserCutterCalc.Size(1395,300)
Gui.FormMain.cmdLaserCutterCalc.Position(6000,1500)
Gui.FormMain.cmdLaserCutterCalc.Caption("Laser Calc.")
Gui.FormMain.cmdLaserCutterCalc.FontName("Tahoma")
Gui.FormMain.cmdLaserCutterCalc.FontSize(8.25)
Gui.FormMain.cmdLaserCutterCalc.Parent("splitContainerSubLabour",1)
Gui.FormMain.cmdLaserCutterCalc.Event(Click,cmdLaserCutterCalc_Click)
Gui.FormMain.cmdAddWCOut.Create(Button)
Gui.FormMain.cmdAddWCOut.Enabled(True)
Gui.FormMain.cmdAddWCOut.Visible(True)
Gui.FormMain.cmdAddWCOut.Zorder(0)
Gui.FormMain.cmdAddWCOut.Size(450,330)
Gui.FormMain.cmdAddWCOut.Position(9015,930)
Gui.FormMain.cmdAddWCOut.Caption("Add")
Gui.FormMain.cmdAddWCOut.FontName("Tahoma")
Gui.FormMain.cmdAddWCOut.FontSize(8.25)
Gui.FormMain.cmdAddWCOut.Event(Click,cmdAddWCOut_Click)
Gui.FormMain.cmdAddWCOut.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtLeadTime.Create(TextBox,"",True,675,300,0,8280,930,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtLeadTime.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutQty.Create(Label,"Qty",True,270,195,0,4920,660,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblOutQty.BorderStyle(0)
Gui.FormMain.lblOutQty.parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutDesc.Create(Label,"Description",True,795,195,0,2790,675,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblOutDesc.BorderStyle(0)
Gui.FormMain.lblOutDesc.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblWCCode.Create(Label,"WC Code",True,675,195,0,2235,30,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWCCode.BorderStyle(0)
Gui.FormMain.lblWCCode.Parent("splitContainerSubLabour",1)
Gui.FormMain.gsgcPriceBuildupPart.Create(GsGridControl)
Gui.FormMain.gsgcPriceBuildupPart.Enabled(True)
Gui.FormMain.gsgcPriceBuildupPart.Visible(True)
Gui.FormMain.gsgcPriceBuildupPart.Zorder(0)
Gui.FormMain.gsgcPriceBuildupPart.Size(12000,1905)
Gui.FormMain.gsgcPriceBuildupPart.Position(11865,0)
Gui.FormMain.gsgcPriceBuildupPart.Parent("splitContainerSubLabour",1)
Gui.FormMain.gsgcPriceBuildupPart.Dock(4)
Gui.FormMain.lblOutsideProcess.Create(Label,"Outside Process",True,1155,195,0,90,660,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblOutsideProcess.BorderStyle(0)
Gui.FormMain.lblOutsideProcess.Parent("splitContainerSubLabour",1)
Gui.FormMain.cmdPowderCalculator.Create(Button)
Gui.FormMain.cmdPowderCalculator.Enabled(True)
Gui.FormMain.cmdPowderCalculator.Visible(False)
Gui.FormMain.cmdPowderCalculator.Zorder(0)
Gui.FormMain.cmdPowderCalculator.Size(1395,330)
Gui.FormMain.cmdPowderCalculator.Position(45,1260)
Gui.FormMain.cmdPowderCalculator.Caption("Powdercoat")
Gui.FormMain.cmdPowderCalculator.FontName("Tahoma")
Gui.FormMain.cmdPowderCalculator.FontSize(8.25)
Gui.FormMain.cmdPowderCalculator.Event(Click,cmdPowderCalculator_Click)
Gui.FormMain.cmdPowderCalculator.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblWCT.Create(Label,"T",True,90,195,0,4020,30,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWCT.BorderStyle(0)
Gui.FormMain.lblWCT.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutUM.Create(Label,"UM",True,225,195,0,5655,675,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblOutUM.BorderStyle(0)
Gui.FormMain.lblOutUM.parent("splitContainerSubLabour",1)
Gui.FormMain.lblWCSetup.Create(Label,"Setup",True,420,195,0,6105,60,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWCSetup.BorderStyle(0)
Gui.FormMain.lblWCSetup.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutLead.Create(Label,"Lead",True,345,195,0,8325,675,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblOutLead.parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutLead.BorderStyle(0)
Gui.FormMain.lblOutMin.Create(Label,"Minimum",True,600,195,0,7230,705,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblOutMin.parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutMin.BorderStyle(0)
Gui.FormMain.lblAdditionalWC.Create(Label,"Additional Workcentre",True,1590,195,0,120,45,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblAdditionalWC.BorderStyle(0)
Gui.FormMain.lblAdditionalWC.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutVendor.Create(Label,"Vendor",True,510,195,0,1935,675,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblOutVendor.BorderStyle(0)
Gui.FormMain.lblOutVendor.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblWCCostRate.Create(Label,"Cost",True,330,195,0,8490,75,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWCCostRate.BorderStyle(0)
Gui.FormMain.lblWCCostRate.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblWCOpCode.Create(Label,"OpCode",True,330,195,0,7700,75,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWCOpCode.BorderStyle(0)
Gui.FormMain.lblWCOpCode.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblWCSetupRate.Create(Label,"Setup Rate",True,810,195,0,6795,75,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWCSetupRate.BorderStyle(0)
Gui.FormMain.lblWCSetupRate.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblWorkcenter6.Create(Label,"Run",True,285,195,0,3270,-15,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWorkcenter6.BorderStyle(0)
Gui.FormMain.lblWorkcenter6.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblWCRunRate.Create(Label,"Run Rate",True,675,195,0,5295,90,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWCRunRate.BorderStyle(0)
Gui.FormMain.lblWCRunRate.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblWCUM.Create(Label,"UM",True,225,195,0,4740,105,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblWCUM.BorderStyle(0)
Gui.FormMain.lblWCUM.Parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutRate.Create(Label,"Cost Rate",True,720,195,0,6150,705,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lblOutRate.parent("splitContainerSubLabour",1)
Gui.FormMain.lblOutRate.BorderStyle(0)
Gui.FormMain.cmdWCOut.Create(Button)
Gui.FormMain.cmdWCOut.Enabled(True)
Gui.FormMain.cmdWCOut.Visible(True)
Gui.FormMain.cmdWCOut.Zorder(0)
Gui.FormMain.cmdWCOut.Size(450,330)
Gui.FormMain.cmdWCOut.Position(1425,870)
Gui.FormMain.cmdWCOut.Caption("^")
Gui.FormMain.cmdWCOut.FontName("Tahoma")
Gui.FormMain.cmdWCOut.FontSize(8.25)
Gui.FormMain.cmdWCOut.Event(Click,cmdWCOut_Click)
Gui.FormMain.cmdWCOut.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtOutVendor.Create(TextBox,"",True,795,300,0,1920,885,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtOutVendor.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtOutDesc.Create(TextBox,"",True,1995,300,0,2790,900,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtOutDesc.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtOutQty.Create(TextBox,"",True,600,300,0,4905,915,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtOutQty.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtOutUM.Create(TextBox,"",True,405,300,0,5625,915,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtOutUM.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtOutRate.Create(TextBox,"",True,1005,300,0,6105,930,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtOutRate.Parent("splitContainerSubLabour",1)
Gui.FormMain.txtOutMin.Create(TextBox,"",True,1005,300,0,7170,930,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtOutMin.Parent("splitContainerSubLabour",1)
Gui.FormMain.SplitContainerMainRight.Create(SplitContainer)
Gui.FormMain.SplitContainerMainRight.Enabled(True)
Gui.FormMain.SplitContainerMainRight.Visible(True)
Gui.FormMain.SplitContainerMainRight.Zorder(0)
Gui.FormMain.SplitContainerMainRight.Size(5865,11550)
Gui.FormMain.SplitContainerMainRight.Position(0,0)
Gui.FormMain.SplitContainerMainRight.Orientation(1)
Gui.FormMain.SplitContainerMainRight.SplitterPosition(435)
Gui.FormMain.SplitContainerMainRight.Collapsed(False)
Gui.FormMain.SplitContainerMainRight.Parent("SplitContainerMain",1)
Gui.FormMain.SplitContainerMainRight.Dock(5)
Gui.FormMain.lbl10.Create(Label,"Plate Area:",False,810,195,0,7005,180,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl10.BorderStyle(0)
Gui.FormMain.lbl10.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtZoomRatio.Create(TextBox,"",False,1500,300,0,7395,135,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtZoomRatio.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtRightSection.Create(TextBox,"",False,1500,300,0,7455,105,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtRightSection.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtAllUnitArea.Create(TextBox,"",False,1500,300,0,7275,120,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtAllUnitArea.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl15.Create(Label,"(1) Unit Area:",False,990,195,0,7290,135,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl15.BorderStyle(0)
Gui.FormMain.lbl15.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl9.Create(Label,"Zoom Ratio:",False,870,195,0,6900,120,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl9.BorderStyle(0)
Gui.FormMain.lbl9.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl23.Create(Label,"Rotated:",False,645,195,0,5190,135,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl23.BorderStyle(0)
Gui.FormMain.lbl23.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtCalculateAlternative.Create(TextBox,"",True,2985,300,0,2325,870,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCalculateAlternative.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdOptimizedPDFD.Create(Button)
Gui.FormMain.cmdOptimizedPDFD.Enabled(False)
Gui.FormMain.cmdOptimizedPDFD.Visible(False)
Gui.FormMain.cmdOptimizedPDFD.Zorder(0)
Gui.FormMain.cmdOptimizedPDFD.Size(870,345)
Gui.FormMain.cmdOptimizedPDFD.Position(2910,60)
Gui.FormMain.cmdOptimizedPDFD.Caption("View D")
Gui.FormMain.cmdOptimizedPDFD.FontName("Tahoma")
Gui.FormMain.cmdOptimizedPDFD.FontSize(8.25)
Gui.FormMain.cmdOptimizedPDFD.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdOptimizedPDFD.Event(Click,cmdOptimizedPDFD_Click)
Gui.FormMain.txtFullSheetBord.Create(TextBox,"",False,525,300,0,5190,2475,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFullSheetBord.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdNonOptimizedPDFB.Create(Button)
Gui.FormMain.cmdNonOptimizedPDFB.Enabled(False)
Gui.FormMain.cmdNonOptimizedPDFB.Visible(False)
Gui.FormMain.cmdNonOptimizedPDFB.Zorder(0)
Gui.FormMain.cmdNonOptimizedPDFB.Size(870,345)
Gui.FormMain.cmdNonOptimizedPDFB.Position(1035,60)
Gui.FormMain.cmdNonOptimizedPDFB.Caption("View B")
Gui.FormMain.cmdNonOptimizedPDFB.FontName("Tahoma")
Gui.FormMain.cmdNonOptimizedPDFB.FontSize(8.25)
Gui.FormMain.cmdNonOptimizedPDFB.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdNonOptimizedPDFB.Event(Click,cmdNonOptimizedPDFB_Click)
Gui.FormMain.lbl12.Create(Label,"Main Section:",False,960,195,0,7230,210,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl12.BorderStyle(0)
Gui.FormMain.lbl12.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl4.Create(Label,"Bord:",False,390,195,0,7380,2550,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl4.BorderStyle(0)
Gui.FormMain.lbl4.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl11.Create(Label,"Total Amount:",False,1020,195,0,6915,150,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl11.BorderStyle(0)
Gui.FormMain.lbl11.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtCutPieceSpacingY.Create(TextBox,"",False,525,300,0,6690,2490,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCutPieceSpacingY.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdOptimizedPDFA.Create(Button)
Gui.FormMain.cmdOptimizedPDFA.Enabled(False)
Gui.FormMain.cmdOptimizedPDFA.Visible(False)
Gui.FormMain.cmdOptimizedPDFA.Zorder(0)
Gui.FormMain.cmdOptimizedPDFA.Size(870,345)
Gui.FormMain.cmdOptimizedPDFA.Position(120,60)
Gui.FormMain.cmdOptimizedPDFA.Caption("View A")
Gui.FormMain.cmdOptimizedPDFA.FontName("Tahoma")
Gui.FormMain.cmdOptimizedPDFA.FontSize(8.25)
Gui.FormMain.cmdOptimizedPDFA.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdOptimizedPDFA.Event(Click,cmdOptimizedPDFA_Click)
Gui.FormMain.txtFirstOpenCheck.Create(TextBox,"1",False,330,300,0,4290,2565,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFirstOpenCheck.Parent("SplitContainerMainRight",0)
Gui.FormMain.txt1UnitPlateRatio.Create(TextBox,"",False,1500,300,0,7365,105,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txt1UnitPlateRatio.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl14.Create(Label,"Top Section:",False,900,195,0,7185,120,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl14.BorderStyle(0)
Gui.FormMain.lbl14.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl17.Create(Label,"Unit:Plate Ratio:",False,1185,195,0,7380,150,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl17.BorderStyle(0)
Gui.FormMain.lbl17.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl13.Create(Label,"Right Section:",False,1005,195,0,7170,150,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl13.BorderStyle(0)
Gui.FormMain.lbl13.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtPlateArea.Create(TextBox,"",False,1500,300,0,7230,120,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPlateArea.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtMainSection.Create(TextBox,"",False,1500,300,0,7290,105,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtMainSection.Parent("SplitContainerMainRight",0)
Gui.FormMain.GsWebBrowserShowPDF.Create(GsWebBrowser)
Gui.FormMain.GsWebBrowserShowPDF.Enabled(True)
Gui.FormMain.GsWebBrowserShowPDF.Visible(True)
Gui.FormMain.GsWebBrowserShowPDF.Zorder(0)
Gui.FormMain.GsWebBrowserShowPDF.Size(8895,10935)
Gui.FormMain.GsWebBrowserShowPDF.Position(0,0)
Gui.FormMain.GsWebBrowserShowPDF.Parent("SplitContainerMainRight",1)
Gui.FormMain.GsWebBrowserShowPDF.Dock(5)
Gui.FormMain.lbl20.Create(Label,"Y",False,90,195,0,8775,2565,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl20.BorderStyle(0)
Gui.FormMain.lbl20.Parent("SplitContainerMainRight",0)
Gui.FormMain.txt1UnitArea.Create(TextBox,"",False,1500,300,0,7320,105,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txt1UnitArea.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl18.Create(Label,"Sheet Factor:",False,990,195,0,7380,150,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl18.BorderStyle(0)
Gui.FormMain.lbl18.Parent("SplitContainerMainRight",0)
Gui.FormMain.txt1TopSection.Create(TextBox,"",False,1500,300,0,7440,135,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txt1TopSection.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdNonOptimizedPDFA.Create(Button)
Gui.FormMain.cmdNonOptimizedPDFA.Enabled(False)
Gui.FormMain.cmdNonOptimizedPDFA.Visible(False)
Gui.FormMain.cmdNonOptimizedPDFA.Zorder(0)
Gui.FormMain.cmdNonOptimizedPDFA.Size(870,345)
Gui.FormMain.cmdNonOptimizedPDFA.Position(105,75)
Gui.FormMain.cmdNonOptimizedPDFA.Caption("View A")
Gui.FormMain.cmdNonOptimizedPDFA.FontName("Tahoma")
Gui.FormMain.cmdNonOptimizedPDFA.FontSize(8.25)
Gui.FormMain.cmdNonOptimizedPDFA.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdNonOptimizedPDFA.Event(Click,cmdNonOptimizedPDFA_Click)
Gui.FormMain.lbl19.Create(Label,"X",False,90,195,0,8010,2565,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl19.BorderStyle(0)
Gui.FormMain.lbl19.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdOptimizedPDFB.Create(Button)
Gui.FormMain.cmdOptimizedPDFB.Enabled(False)
Gui.FormMain.cmdOptimizedPDFB.Visible(False)
Gui.FormMain.cmdOptimizedPDFB.Zorder(0)
Gui.FormMain.cmdOptimizedPDFB.Size(870,345)
Gui.FormMain.cmdOptimizedPDFB.Position(1050,60)
Gui.FormMain.cmdOptimizedPDFB.Caption("View B")
Gui.FormMain.cmdOptimizedPDFB.FontName("Tahoma")
Gui.FormMain.cmdOptimizedPDFB.FontSize(8.25)
Gui.FormMain.cmdOptimizedPDFB.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdOptimizedPDFB.Event(Click,cmdOptimizedPDFB_Click)
Gui.FormMain.lbl16.Create(Label,"(All) Unit Area:",False,1065,195,0,7440,135,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl16.BorderStyle(0)
Gui.FormMain.lbl16.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtTotalAmount.Create(TextBox,"",False,690,300,0,4455,90,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtTotalAmount.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtCutPieceSpacingX.Create(TextBox,"",False,525,300,0,5895,2490,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtCutPieceSpacingX.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtFullSheetBordX.Create(TextBox,"",False,525,300,0,8190,2565,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFullSheetBordX.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtFullSheetBordY.Create(TextBox,"",False,525,300,0,8985,2505,True,0,"Tahoma",8.25,,1)
Gui.FormMain.txtFullSheetBordY.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl22.Create(Label,"Y",False,90,195,0,6495,2550,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl22.BorderStyle(0)
Gui.FormMain.lbl22.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdOptimizedPDFC.Create(Button)
Gui.FormMain.cmdOptimizedPDFC.Enabled(False)
Gui.FormMain.cmdOptimizedPDFC.Visible(False)
Gui.FormMain.cmdOptimizedPDFC.Zorder(0)
Gui.FormMain.cmdOptimizedPDFC.Size(870,345)
Gui.FormMain.cmdOptimizedPDFC.Position(1980,60)
Gui.FormMain.cmdOptimizedPDFC.Caption("View C")
Gui.FormMain.cmdOptimizedPDFC.FontName("Tahoma")
Gui.FormMain.cmdOptimizedPDFC.FontSize(8.25)
Gui.FormMain.cmdOptimizedPDFC.Parent("SplitContainerMainRight",0)
Gui.FormMain.cmdOptimizedPDFC.Event(Click,cmdOptimizedPDFC_Click)
Gui.FormMain.txtSheetFactor.Create(TextBox,"",False,1500,300,0,7305,105,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtSheetFactor.Parent("SplitContainerMainRight",0)
Gui.FormMain.txtPDFPath.Create(TextBox,"",False,1500,300,0,7425,120,False,0,"Tahoma",8.25,,1)
Gui.FormMain.txtPDFPath.Parent("SplitContainerMainRight",0)
Gui.FormMain.lbl21.Create(Label,"X",False,90,195,0,5715,2550,True,0,"Tahoma",8.25,,0,0)
Gui.FormMain.lbl21.BorderStyle(0)
Gui.FormMain.lbl21.Parent("SplitContainerMainRight",0)
Gui.FormMain.SplitContainerBottomRight.Create(SplitContainer)
Gui.FormMain.SplitContainerBottomRight.Enabled(True)
Gui.FormMain.SplitContainerBottomRight.Visible(True)
Gui.FormMain.SplitContainerBottomRight.Zorder(0)
Gui.FormMain.SplitContainerBottomRight.Size(22245,2475)
Gui.FormMain.SplitContainerBottomRight.Position(0,0)
Gui.FormMain.SplitContainerBottomRight.Orientation(0)
Gui.FormMain.SplitContainerBottomRight.SplitterPosition(16080)
Gui.FormMain.SplitContainerBottomRight.Collapsed(False)
Gui.FormMain.SplitContainerBottomRight.Parent("SplitContainerMaster",1)
Gui.FormMain.SplitContainerBottomRight.Dock(5)
Gui.FormMain.cmdCreateQuote.Create(Button)
Gui.FormMain.cmdCreateQuote.Enabled(True)
Gui.FormMain.cmdCreateQuote.Visible(True)
Gui.FormMain.cmdCreateQuote.Zorder(0)
Gui.FormMain.cmdCreateQuote.Size(2000,345)
Gui.FormMain.cmdCreateQuote.Position(0,50)
Gui.FormMain.cmdCreateQuote.Caption("Create Quote/Sales Order")
Gui.FormMain.cmdCreateQuote.FontName("Tahoma")
Gui.FormMain.cmdCreateQuote.FontSize(8.25)
Gui.FormMain.cmdCreateQuote.Event(Click,cmdCreateQuote_Click)
Gui.FormMain.cmdCreateQuote.Parent("SplitContainerBottomRight",1)
Gui.FormMain.cmdCreateKit.Create(Button)
Gui.FormMain.cmdCreateKit.Enabled(True)
Gui.FormMain.cmdCreateKit.Visible(True)
Gui.FormMain.cmdCreateKit.Zorder(0)
Gui.FormMain.cmdCreateKit.Size(2000,345)
Gui.FormMain.cmdCreateKit.Position(0,400)
Gui.FormMain.cmdCreateKit.Caption("Create BOM/Kit")
Gui.FormMain.cmdCreateKit.FontName("Tahoma")
Gui.FormMain.cmdCreateKit.FontSize(8.25)
Gui.FormMain.cmdCreateKit.Event(Click,cmdCreateKit_Click)
Gui.FormMain.cmdCreateKit.Parent("SplitContainerBottomRight",1)
Gui.FormMain.cmdMassAdd.Create(Button)
Gui.FormMain.cmdMassAdd.Enabled(True)
Gui.FormMain.cmdMassAdd.Visible(True)
Gui.FormMain.cmdMassAdd.Zorder(0)
Gui.FormMain.cmdMassAdd.Size(2000,345)
Gui.FormMain.cmdMassAdd.Position(0,775)
Gui.FormMain.cmdMassAdd.Caption("Mass Add")
Gui.FormMain.cmdMassAdd.FontName("Tahoma")
Gui.FormMain.cmdMassAdd.FontSize(8.25)
Gui.FormMain.cmdMassAdd.Event(Click,cmdMassAdd_Click)
Gui.FormMain.cmdMassAdd.Parent("SplitContainerBottomRight",1)
Gui.FormMain.cmdMassDelete.Create(Button)
Gui.FormMain.cmdMassDelete.Enabled(True)
Gui.FormMain.cmdMassDelete.Visible(True)
Gui.FormMain.cmdMassDelete.Zorder(0)
Gui.FormMain.cmdMassDelete.Size(2000,345)
Gui.FormMain.cmdMassDelete.Position(0,1150)
Gui.FormMain.cmdMassDelete.Caption("Mass Delete Parts")
Gui.FormMain.cmdMassDelete.FontName("Tahoma")
Gui.FormMain.cmdMassDelete.FontSize(8.25)
Gui.FormMain.cmdMassDelete.Event(Click,cmdMassDelete_Click)
Gui.FormMain.cmdMassDelete.Parent("SplitContainerBottomRight",1)
Gui.FormMain.cmdUpdateMaterialCost.Create(Button)
Gui.FormMain.cmdUpdateMaterialCost.Enabled(False)
Gui.FormMain.cmdUpdateMaterialCost.Visible(False)
Gui.FormMain.cmdUpdateMaterialCost.Zorder(0)
Gui.FormMain.cmdUpdateMaterialCost.Size(2000,345)
Gui.FormMain.cmdUpdateMaterialCost.Position(0,775)
Gui.FormMain.cmdUpdateMaterialCost.Caption("Update Material Cost")
Gui.FormMain.cmdUpdateMaterialCost.FontName("Tahoma")
Gui.FormMain.cmdUpdateMaterialCost.FontSize(8.25)
Gui.FormMain.cmdUpdateMaterialCost.Parent("SplitContainerBottomRight",1)
Gui.FormMain.cmdQuickOrderCreate.Create(Button)
Gui.FormMain.cmdQuickOrderCreate.Enabled(True)
Gui.FormMain.cmdQuickOrderCreate.Visible(True)
Gui.FormMain.cmdQuickOrderCreate.Zorder(0)
Gui.FormMain.cmdQuickOrderCreate.Size(2000,345)
Gui.FormMain.cmdQuickOrderCreate.Position(0,2000)
Gui.FormMain.cmdQuickOrderCreate.Caption("Quick Quote/Order")
Gui.FormMain.cmdQuickOrderCreate.FontName("Tahoma")
Gui.FormMain.cmdQuickOrderCreate.FontSize(8.25)
Gui.FormMain.cmdQuickOrderCreate.Event(Click,cmdQuickOrderCreate_Click)
Gui.FormMain.cmdQuickOrderCreate.Parent("SplitContainerBottomRight",1)
Gui.FormMain.optQQuote.Create(Option)
Gui.FormMain.optQQuote.Size(1000,255)
Gui.FormMain.optQQuote.Position(0,2400)
Gui.FormMain.optQQuote.Caption("Quote")
Gui.FormMain.optQQuote.Value(1)
Gui.FormMain.optQQuote.Parent("SplitContainerBottomRight",1)
Gui.FormMain.optQQuote.Enabled(True)
Gui.FormMain.optQQuote.Visible(True)
Gui.FormMain.optQQuote.Zorder(0)
Gui.FormMain.optQQuote.FontName("Tahoma")
Gui.FormMain.optQQuote.FontSize(8.25)
Gui.FormMain.optQSalesOrder.Create(Option)
Gui.FormMain.optQSalesOrder.Size(1000,255)
Gui.FormMain.optQSalesOrder.Position(1000,2400)
Gui.FormMain.optQSalesOrder.Caption("Sale")
Gui.FormMain.optQSalesOrder.Parent("SplitContainerBottomRight",1)
Gui.FormMain.optQSalesOrder.Enabled(True)
Gui.FormMain.optQSalesOrder.Visible(True)
Gui.FormMain.optQSalesOrder.Zorder(0)
Gui.FormMain.optQSalesOrder.FontName("Tahoma")
Gui.FormMain.optQSalesOrder.FontSize(8.25)
Gui.FormMain.gsgcPartsAdd.Create(GsGridControl)
Gui.FormMain.gsgcPartsAdd.Enabled(True)
Gui.FormMain.gsgcPartsAdd.Visible(True)
Gui.FormMain.gsgcPartsAdd.Zorder(0)
Gui.FormMain.gsgcPartsAdd.Size(5800,2730)
Gui.FormMain.gsgcPartsAdd.Position(0,0)
Gui.FormMain.gsgcPartsAdd.Parent("SplitContainerBottomRight",1)
Gui.FormMain.gsgcPartsAdd.Dock(4)
Gui.FormMain.gsgcPartsAdd.Event(CellValueChanged,gsgcPartsAdd_CellValueChanged)
Gui.FormMain.gsgcCustomerParts.Create(GsGridControl)
Gui.FormMain.gsgcCustomerParts.Enabled(True)
Gui.FormMain.gsgcCustomerParts.Visible(True)
Gui.FormMain.gsgcCustomerParts.Zorder(0)
Gui.FormMain.gsgcCustomerParts.Size(17490,2610)
Gui.FormMain.gsgcCustomerParts.Position(0,0)
Gui.FormMain.gsgcCustomerParts.Parent("SplitContainerBottomRight",0)
Gui.FormMain.gsgcCustomerParts.Dock(5)
Gui.FormMain.gsgcCustomerParts.Event(RowCellClick,gsgcCustomerParts_RowCellClick)
Gui.Form..Create(BaseForm)
Gui.Form..Caption("Form")
Gui.Form..Size(1024,720)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.FormQuote..Create(BaseForm)
Gui.FormQuote..Caption("Master Price Build Up")
Gui.FormQuote..Size(21660,10335)
Gui.FormQuote..MinX(0)
Gui.FormQuote..MinY(0)
Gui.FormQuote..Position(0,0)
Gui.FormQuote..AlwaysOnTop(False)
Gui.FormQuote..FontName("Tahoma")
Gui.FormQuote..FontSize(8.25)
Gui.FormQuote..ControlBox(True)
Gui.FormQuote..MaxButton(True)
Gui.FormQuote..MinButton(True)
Gui.FormQuote..MousePointer(0)
Gui.FormQuote..Moveable(True)
Gui.FormQuote..Sizeable(True)
Gui.FormQuote..ShowInTaskBar(True)
Gui.FormQuote..TitleBar(True)
Gui.FormQuote..Event(UnLoad,FormQuote_UnLoad)
Gui.FormQuote.lblSort2.Create(Label,"Sort 2",False,435,210,0,255,1425,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblSort2.BorderStyle(0)
Gui.FormQuote.lblReference2.Create(Label,"Sort 1",False,435,210,0,255,1005,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblReference2.BorderStyle(0)
Gui.FormQuote.txt3.Create(TextBox,"",False,2595,300,0,1455,1455,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txt2.Create(TextBox,"",False,2595,300,0,1455,930,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.gsgcMasterPriceBuildup.Create(GsGridControl)
Gui.FormQuote.gsgcMasterPriceBuildup.Size(15855,5250)
Gui.FormQuote.gsgcMasterPriceBuildup.Position(225,4155)
Gui.FormQuote.gsgcMasterPriceBuildup.Enabled(True)
Gui.FormQuote.gsgcMasterPriceBuildup.Visible(True)
Gui.FormQuote.gsgcMasterPriceBuildup.Zorder(0)
Gui.FormQuote.optQuote.Create(Option)
Gui.FormQuote.optQuote.Size(945,255)
Gui.FormQuote.optQuote.Position(255,150)
Gui.FormQuote.optQuote.Caption("Quote")
Gui.FormQuote.optQuote.Value(1)
Gui.FormQuote.optQuote.Enabled(True)
Gui.FormQuote.optQuote.Visible(True)
Gui.FormQuote.optQuote.Zorder(0)
Gui.FormQuote.optQuote.FontName("Tahoma")
Gui.FormQuote.optQuote.FontSize(8.25)
Gui.FormQuote.optQuote.ControlGroup(3)
Gui.FormQuote.optSalesOrder.Create(Option)
Gui.FormQuote.optSalesOrder.Size(1335,255)
Gui.FormQuote.optSalesOrder.Position(1170,165)
Gui.FormQuote.optSalesOrder.Caption("Sales Order")
Gui.FormQuote.optSalesOrder.Enabled(True)
Gui.FormQuote.optSalesOrder.Visible(True)
Gui.FormQuote.optSalesOrder.Zorder(0)
Gui.FormQuote.optSalesOrder.FontName("Tahoma")
Gui.FormQuote.optSalesOrder.FontSize(8.25)
Gui.FormQuote.optSalesOrder.ControlGroup(3)
Gui.FormQuote.txtUserHeader1.Create(TextBox,"",True,2595,300,0,5820,150,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtUserHeader1.MaxLength(30)
Gui.FormQuote.txtUserHeader1.Event(LostFocus,txtUserHeader1_LostFocus)
Gui.FormQuote.cmdUserHeader1Browse.Create(Button)
Gui.FormQuote.cmdUserHeader1Browse.Size(855,375)
Gui.FormQuote.cmdUserHeader1Browse.Position(8535,150)
Gui.FormQuote.cmdUserHeader1Browse.Caption("^")
Gui.FormQuote.cmdUserHeader1Browse.Event(Click,cmdUserHeader1Browse_Click)
Gui.FormQuote.cmdUserHeader1Browse.Enabled(True)
Gui.FormQuote.cmdUserHeader1Browse.Visible(True)
Gui.FormQuote.cmdUserHeader1Browse.Zorder(0)
Gui.FormQuote.cmdUserHeader1Browse.FontName("Tahoma")
Gui.FormQuote.cmdUserHeader1Browse.FontSize(8.25)
Gui.FormQuote.txtUserHeader2.Create(TextBox,"",True,2595,300,0,5820,540,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtUserHeader2.MaxLength(30)
Gui.FormQuote.txtUserHeader2.Event(LostFocus,txtUserHeader2_LostFocus)
Gui.FormQuote.cmdUserHeader2Browse.Create(Button)
Gui.FormQuote.cmdUserHeader2Browse.Size(855,375)
Gui.FormQuote.cmdUserHeader2Browse.Position(8535,540)
Gui.FormQuote.cmdUserHeader2Browse.Caption("^")
Gui.FormQuote.cmdUserHeader2Browse.Event(Click,cmdUserHeader2Browse_Click)
Gui.FormQuote.cmdUserHeader2Browse.Enabled(True)
Gui.FormQuote.cmdUserHeader2Browse.Visible(True)
Gui.FormQuote.cmdUserHeader2Browse.Zorder(0)
Gui.FormQuote.cmdUserHeader2Browse.FontName("Tahoma")
Gui.FormQuote.cmdUserHeader2Browse.FontSize(8.25)
Gui.FormQuote.txtUserHeader3.Create(TextBox,"",True,2595,300,0,5820,945,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtUserHeader3.MaxLength(30)
Gui.FormQuote.txtUserHeader3.Event(LostFocus,txtUserHeader3_LostFocus)
Gui.FormQuote.cmdUserHeader3Browse.Create(Button)
Gui.FormQuote.cmdUserHeader3Browse.Size(855,375)
Gui.FormQuote.cmdUserHeader3Browse.Position(8535,945)
Gui.FormQuote.cmdUserHeader3Browse.Caption("^")
Gui.FormQuote.cmdUserHeader3Browse.Event(Click,cmdUserHeader3Browse_Click)
Gui.FormQuote.cmdUserHeader3Browse.Enabled(True)
Gui.FormQuote.cmdUserHeader3Browse.Visible(True)
Gui.FormQuote.cmdUserHeader3Browse.Zorder(0)
Gui.FormQuote.cmdUserHeader3Browse.FontName("Tahoma")
Gui.FormQuote.cmdUserHeader3Browse.FontSize(8.25)
Gui.FormQuote.txtUserHeader4.Create(TextBox,"",True,2595,300,0,5820,1335,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtUserHeader4.MaxLength(30)
Gui.FormQuote.txtUserHeader4.Event(LostFocus,txtUserHeader4_LostFocus)
Gui.FormQuote.cmdUserHeader4Browse.Create(Button)
Gui.FormQuote.cmdUserHeader4Browse.Size(855,375)
Gui.FormQuote.cmdUserHeader4Browse.Position(8535,1335)
Gui.FormQuote.cmdUserHeader4Browse.Caption("^")
Gui.FormQuote.cmdUserHeader4Browse.Event(Click,cmdUserHeader4Browse_Click)
Gui.FormQuote.cmdUserHeader4Browse.Enabled(True)
Gui.FormQuote.cmdUserHeader4Browse.Visible(True)
Gui.FormQuote.cmdUserHeader4Browse.Zorder(0)
Gui.FormQuote.cmdUserHeader4Browse.FontName("Tahoma")
Gui.FormQuote.cmdUserHeader4Browse.FontSize(8.25)
Gui.FormQuote.txtUserHeader5.Create(TextBox,"",True,2595,300,0,5820,1770,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtUserHeader5.Event(LostFocus,txtUserHeader5_LostFocus)
Gui.FormQuote.cmdUserHeader5Browse.Create(Button)
Gui.FormQuote.cmdUserHeader5Browse.Size(855,375)
Gui.FormQuote.cmdUserHeader5Browse.Position(8535,1770)
Gui.FormQuote.cmdUserHeader5Browse.Caption("^")
Gui.FormQuote.cmdUserHeader5Browse.Event(Click,cmdUserHeader5Browse_Click)
Gui.FormQuote.cmdUserHeader5Browse.Enabled(True)
Gui.FormQuote.cmdUserHeader5Browse.Visible(True)
Gui.FormQuote.cmdUserHeader5Browse.Zorder(0)
Gui.FormQuote.cmdUserHeader5Browse.FontName("Tahoma")
Gui.FormQuote.cmdUserHeader5Browse.FontSize(8.25)
Gui.FormQuote.txtShipToID.Create(TextBox,"",True,1215,300,0,1770,1125,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.cmdBrowseShipTo.Create(Button)
Gui.FormQuote.cmdBrowseShipTo.Size(585,375)
Gui.FormQuote.cmdBrowseShipTo.Position(3105,1110)
Gui.FormQuote.cmdBrowseShipTo.Caption("^")
Gui.FormQuote.cmdBrowseShipTo.Event(Click,cmdBrowseShipTo_Click)
Gui.FormQuote.cmdBrowseShipTo.Enabled(True)
Gui.FormQuote.cmdBrowseShipTo.Visible(True)
Gui.FormQuote.cmdBrowseShipTo.Zorder(0)
Gui.FormQuote.cmdBrowseShipTo.FontName("Tahoma")
Gui.FormQuote.cmdBrowseShipTo.FontSize(8.25)
Gui.FormQuote.lblUserHeader1.Create(Label,"User 1",True,480,210,0,4155,225,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblUserHeader1.BorderStyle(0)
Gui.FormQuote.lblUserHeader2.Create(Label,"User 2",True,480,210,0,4155,585,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblUserHeader2.BorderStyle(0)
Gui.FormQuote.lblUserHeader3.Create(Label,"User 3",True,480,210,0,4155,975,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblUserHeader3.BorderStyle(0)
Gui.FormQuote.lblUserHeader4.Create(Label,"User 4",True,480,210,0,4155,1395,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblUserHeader4.BorderStyle(0)
Gui.FormQuote.lblUserHeader5.Create(Label,"User 5",True,480,210,0,4155,1800,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblUserHeader5.BorderStyle(0)
Gui.FormQuote.frame1.Create(Frame)
Gui.FormQuote.frame1.Enabled(True)
Gui.FormQuote.frame1.Visible(True)
Gui.FormQuote.frame1.Zorder(0)
Gui.FormQuote.frame1.Size(1560,1995)
Gui.FormQuote.frame1.Position(135,975)
Gui.FormQuote.frame1.Caption("")
Gui.FormQuote.frame1.FontName("Tahoma")
Gui.FormQuote.frame1.FontSize(8.25)
Gui.FormQuote.optMFG.Create(Option)
Gui.FormQuote.optMFG.Size(1575,255)
Gui.FormQuote.optMFG.Position(105,575)
Gui.FormQuote.optMFG.Caption("Manufacturer")
Gui.FormQuote.optMFG.Enabled(True)
Gui.FormQuote.optMFG.Visible(True)
Gui.FormQuote.optMFG.Zorder(0)
Gui.FormQuote.optMFG.FontName("Tahoma")
Gui.FormQuote.optMFG.FontSize(8.25)
Gui.FormQuote.optMFG.Parent("frame1")
Gui.FormQuote.optNZASP.Create(Option)
Gui.FormQuote.optNZASP.Size(1575,255)
Gui.FormQuote.optNZASP.Position(105,90)
Gui.FormQuote.optNZASP.Caption("NZAS Site")
Gui.FormQuote.optNZASP.Enabled(True)
Gui.FormQuote.optNZASP.Visible(True)
Gui.FormQuote.optNZASP.Zorder(0)
Gui.FormQuote.optNZASP.FontName("Tahoma")
Gui.FormQuote.optNZASP.FontSize(8.25)
Gui.FormQuote.optNZASP.Parent("frame1")
Gui.FormQuote.optNZASS.Create(Option)
Gui.FormQuote.optNZASS.Size(1575,255)
Gui.FormQuote.optNZASS.Position(105,330)
Gui.FormQuote.optNZASS.Caption("NZAS Town")
Gui.FormQuote.optNZASS.Enabled(True)
Gui.FormQuote.optNZASS.Visible(True)
Gui.FormQuote.optNZASS.Zorder(0)
Gui.FormQuote.optNZASS.FontName("Tahoma")
Gui.FormQuote.optNZASS.FontSize(8.25)
Gui.FormQuote.optNZASS.Parent("frame1")
Gui.FormQuote.optManual.Create(Option)
Gui.FormQuote.optManual.Size(1575,255)
Gui.FormQuote.optManual.Position(105,1025)
Gui.FormQuote.optManual.Caption("Manual")
Gui.FormQuote.optManual.Enabled(True)
Gui.FormQuote.optManual.Visible(True)
Gui.FormQuote.optManual.Zorder(0)
Gui.FormQuote.optManual.FontName("Tahoma")
Gui.FormQuote.optManual.FontSize(8.25)
Gui.FormQuote.optManual.Parent("frame1")
Gui.FormQuote.txtManual.Create(TextBox,"",True,1200,300,0,105,1450,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtManual.parent("frame1")
Gui.FormQuote.txtManual.NumericOnly(2)
Gui.FormQuote.optTown.Create(Option)
Gui.FormQuote.optTown.Size(1575,255)
Gui.FormQuote.optTown.Position(105,800)
Gui.FormQuote.optTown.Caption("Town")
Gui.FormQuote.optTown.Enabled(True)
Gui.FormQuote.optTown.Visible(True)
Gui.FormQuote.optTown.Zorder(0)
Gui.FormQuote.optTown.FontName("Tahoma")
Gui.FormQuote.optTown.FontSize(8.25)
Gui.FormQuote.optTown.Parent("frame1")
Gui.FormQuote.lblReference.Create(Label,"PO#",True,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblReference.BorderStyle(0)
Gui.FormQuote.lbluserhead1req.Create(Label,"Reference",False,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead1req.BorderStyle(0)
Gui.FormQuote.lbluserhead2req.Create(Label,"Reference",False,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead2req.BorderStyle(0)
Gui.FormQuote.lbluserhead3req.Create(Label,"Reference",False,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead3req.BorderStyle(0)
Gui.FormQuote.lbluserhead4req.Create(Label,"Reference",False,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead4req.BorderStyle(0)
Gui.FormQuote.lbluserhead5req.Create(Label,"Reference",False,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead5req.BorderStyle(0)
Gui.FormQuote.lbluserhead1val.Create(Label,"Reference",False,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead1val.BorderStyle(0)
Gui.FormQuote.lbluserhead2val.Create(Label,"Reference",False,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead2val.BorderStyle(0)
Gui.FormQuote.lbluserhead3val.Create(Label,"Reference",False,1935,255,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead3val.BorderStyle(0)
Gui.FormQuote.lbluserhead4val.Create(Label,"Reference",False,765,210,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead4val.BorderStyle(0)
Gui.FormQuote.lbluserhead5val.Create(Label,"Reference",False,765,210,0,225,600,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lbluserhead5val.BorderStyle(0)
Gui.FormQuote.lblPart.Create(Label,"Part",True,285,210,0,225,3465,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblPart.BorderStyle(0)
Gui.FormQuote.txtPart.Create(TextBox,"",True,1995,300,0,255,3765,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtPart.MaxLength(20)
Gui.FormQuote.cmdQuotePartBrowse.Create(Button)
Gui.FormQuote.cmdQuotePartBrowse.Size(495,375)
Gui.FormQuote.cmdQuotePartBrowse.Position(2400,3765)
Gui.FormQuote.cmdQuotePartBrowse.Caption("^")
Gui.FormQuote.cmdQuotePartBrowse.Event(Click,cmdQuotePartBrowse_Click)
Gui.FormQuote.cmdQuotePartBrowse.Enabled(True)
Gui.FormQuote.cmdQuotePartBrowse.Visible(True)
Gui.FormQuote.cmdQuotePartBrowse.Zorder(0)
Gui.FormQuote.cmdQuotePartBrowse.FontName("Tahoma")
Gui.FormQuote.cmdQuotePartBrowse.FontSize(8.25)
Gui.FormQuote.lblDesc.Create(Label,"Description",True,810,210,0,3000,3465,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblDesc.BorderStyle(0)
Gui.FormQuote.txtDesc.Create(TextBox,"",True,2595,300,0,3000,3765,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtDesc.MaxLength(30)
Gui.FormQuote.lblUM.Create(Label,"UM",True,225,210,0,5700,3465,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblUM.BorderStyle(0)
Gui.FormQuote.txtUM.Create(TextBox,"",True,450,300,0,5700,3765,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtUM.MaxLength(2)
Gui.FormQuote.lblQty.Create(Label,"Qty",True,255,210,0,6300,3465,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblQty.BorderStyle(0)
Gui.FormQuote.txtQTY.Create(TextBox,"",True,600,300,0,6300,3765,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.lblPrice.Create(Label,"Price",True,360,210,0,7200,3465,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblPrice.BorderStyle(0)
Gui.FormQuote.txtPrice.Create(TextBox,"",True,705,300,0,7050,3765,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.cmdQuoteAddPart.Create(Button)
Gui.FormQuote.cmdQuoteAddPart.Size(495,375)
Gui.FormQuote.cmdQuoteAddPart.Position(7890,3705)
Gui.FormQuote.cmdQuoteAddPart.Caption("Add")
Gui.FormQuote.cmdQuoteAddPart.Event(Click,cmdQuoteAddPart_Click)
Gui.FormQuote.cmdQuoteAddPart.Enabled(True)
Gui.FormQuote.cmdQuoteAddPart.Visible(True)
Gui.FormQuote.cmdQuoteAddPart.Zorder(0)
Gui.FormQuote.cmdQuoteAddPart.FontName("Tahoma")
Gui.FormQuote.cmdQuoteAddPart.FontSize(8.25)
Gui.FormQuote.cmdGenerateQuote.Create(Button)
Gui.FormQuote.cmdGenerateQuote.Size(1830,375)
Gui.FormQuote.cmdGenerateQuote.Position(240,9495)
Gui.FormQuote.cmdGenerateQuote.Caption("Create Quote/SO")
Gui.FormQuote.cmdGenerateQuote.DefaultValue("")
Gui.FormQuote.cmdGenerateQuote.Event(Click,cmdGenerateQuote_Click)
Gui.FormQuote.cmdGenerateQuote.Enabled(True)
Gui.FormQuote.cmdGenerateQuote.Visible(True)
Gui.FormQuote.cmdGenerateQuote.Zorder(0)
Gui.FormQuote.cmdGenerateQuote.FontName("Tahoma")
Gui.FormQuote.cmdGenerateQuote.FontSize(8.25)
Gui.FormQuote.gsgcMaterialTakeoff.Create(GsGridControl)
Gui.FormQuote.gsgcMaterialTakeoff.Enabled(True)
Gui.FormQuote.gsgcMaterialTakeoff.Visible(True)
Gui.FormQuote.gsgcMaterialTakeoff.Zorder(0)
Gui.FormQuote.gsgcMaterialTakeoff.Size(5325,3825)
Gui.FormQuote.gsgcMaterialTakeoff.Position(16185,120)
Gui.FormQuote.gsgcLabourTakeoff.Create(GsGridControl)
Gui.FormQuote.gsgcLabourTakeoff.Enabled(True)
Gui.FormQuote.gsgcLabourTakeoff.Visible(True)
Gui.FormQuote.gsgcLabourTakeoff.Zorder(0)
Gui.FormQuote.gsgcLabourTakeoff.Size(5355,5100)
Gui.FormQuote.gsgcLabourTakeoff.Position(16185,4170)
Gui.FormQuote.chkCreateWO.Create(CheckBox)
Gui.FormQuote.chkCreateWO.Enabled(True)
Gui.FormQuote.chkCreateWO.Visible(True)
Gui.FormQuote.chkCreateWO.Zorder(0)
Gui.FormQuote.chkCreateWO.Size(1455,300)
Gui.FormQuote.chkCreateWO.Position(2520,135)
Gui.FormQuote.chkCreateWO.Caption("Create WO")
Gui.FormQuote.chkCreateWO.FontName("Tahoma")
Gui.FormQuote.chkCreateWO.FontSize(8.25)
Gui.FormQuote.txtSOComments.Create(TextboxM)
Gui.FormQuote.txtSOComments.Enabled(True)
Gui.FormQuote.txtSOComments.Visible(True)
Gui.FormQuote.txtSOComments.Zorder(0)
Gui.FormQuote.txtSOComments.Size(6630,3405)
Gui.FormQuote.txtSOComments.Position(9465,450)
Gui.FormQuote.txtSOComments.FontName("Tahoma")
Gui.FormQuote.txtSOComments.FontSize(8.25)
Gui.FormQuote.txtReference.Create(TextBox,"",True,2400,300,0,1455,495,True,0,"Arial",8,-2147483643,1)
Gui.FormQuote.txtReference.MaxLength(15)
Gui.FormQuote.lblShipToID.Create(Label,"Ship To ID:",True,765,210,0,1785,885,True,0,"Arial",8,-2147483633,0,0)
Gui.FormQuote.lblShipToID.BorderStyle(0)
Gui.FormQuote.lbl1.Create(Label,"Quote/SO Header Comments",True,2085,195,0,9480,165,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl1.BorderStyle(0)
Gui.FormQuote.txtSalesRep.Create(TextBox,"",True,1620,300,0,1770,1830,True,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtShipVia.Create(TextBox,"",True,1620,300,0,1800,2460,True,0,"Tahoma",8.25,,1)
Gui.FormQuote.lbl3.Create(Label,"Sales Rep",True,705,195,0,1785,1605,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl3.BorderStyle(0)
Gui.FormQuote.lbl4.Create(Label,"Ship Via",True,555,195,0,1815,2235,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl4.BorderStyle(0)
Gui.FormQuote.lblDueDate.Create(Label,"Due Date",True,555,195,0,4200,2235,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lblDueDate.BorderStyle(0)
Gui.FormQuote.cmdSalesRep.Create(Button)
Gui.FormQuote.cmdSalesRep.Enabled(True)
Gui.FormQuote.cmdSalesRep.Visible(True)
Gui.FormQuote.cmdSalesRep.Zorder(0)
Gui.FormQuote.cmdSalesRep.Size(570,345)
Gui.FormQuote.cmdSalesRep.Position(3465,1815)
Gui.FormQuote.cmdSalesRep.Caption("^")
Gui.FormQuote.cmdSalesRep.FontName("Tahoma")
Gui.FormQuote.cmdSalesRep.FontSize(8.25)
Gui.FormQuote.cmdSalesRep.Event(Click,cmdSalesRep_Click)
Gui.FormQuote.cmdShipVia.Create(Button)
Gui.FormQuote.cmdShipVia.Enabled(True)
Gui.FormQuote.cmdShipVia.Visible(True)
Gui.FormQuote.cmdShipVia.Zorder(0)
Gui.FormQuote.cmdShipVia.Size(570,345)
Gui.FormQuote.cmdShipVia.Position(3510,2415)
Gui.FormQuote.cmdShipVia.Caption("^")
Gui.FormQuote.cmdShipVia.FontName("Tahoma")
Gui.FormQuote.cmdShipVia.FontSize(8.25)
Gui.FormQuote.cmdShipVia.Event(Click,cmdShipVia_Click)
Gui.FormQuote.dtpDueDate.Create(DatePicker)
Gui.FormQuote.dtpDueDate.Enabled(True)
Gui.FormQuote.dtpDueDate.Visible(True)
Gui.FormQuote.dtpDueDate.Zorder(0)
Gui.FormQuote.dtpDueDate.Size(1500,345)
Gui.FormQuote.dtpDueDate.Position(4200,2415)
Gui.FormQuote.dtpDueDate.CheckBox(False)
Gui.FormQuote.dtpDueDate.FontName("Tahoma")
Gui.FormQuote.dtpDueDate.FontSize(8.25)

Gui.FormQuote.lbl5.Create(Label,"Contact Name/Number",True,1020,195,0,1785,2880,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl5.BorderStyle(0)
Gui.FormQuote.txtAttention.Create(TextBox,"",True,2895,300,0,1770,3105,True,0,"Tahoma",8.25,,1)
Gui.FormQuote.cmdContactName.Create(Button)
Gui.FormQuote.cmdContactName.Enabled(True)
Gui.FormQuote.cmdContactName.Visible(FALSE)
Gui.FormQuote.cmdContactName.Zorder(0)
Gui.FormQuote.cmdContactName.Size(630,330)
Gui.FormQuote.cmdContactName.Position(4740,3090)
Gui.FormQuote.cmdContactName.Caption("^")
Gui.FormQuote.cmdContactName.FontName("Tahoma")
Gui.FormQuote.cmdContactName.FontSize(8.25)
Gui.FormQuote.cmdContactName.Event(Click,cmdContactName_Click)
Gui.FormCCSetUp..Create(BaseForm)
Gui.FormCCSetUp..Caption("Company Code Prefix Setup")
Gui.FormCCSetUp..Size(4995,3225)
Gui.FormCCSetUp..MinX(0)
Gui.FormCCSetUp..MinY(0)
Gui.FormCCSetUp..Position(0,0)
Gui.FormCCSetUp..AlwaysOnTop(False)
Gui.FormCCSetUp..FontName("Tahoma")
Gui.FormCCSetUp..FontSize(8.25)
Gui.FormCCSetUp..ControlBox(True)
Gui.FormCCSetUp..MaxButton(True)
Gui.FormCCSetUp..MinButton(True)
Gui.FormCCSetUp..MousePointer(0)
Gui.FormCCSetUp..Moveable(True)
Gui.FormCCSetUp..Sizeable(True)
Gui.FormCCSetUp..ShowInTaskBar(True)
Gui.FormCCSetUp..TitleBar(True)
Gui.FormCCSetUp..Event(UnLoad,FormCCSetup_Unload)
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.Create(Button)
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.Enabled(True)
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.Visible(True)
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.Zorder(0)
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.Size(1125,345)
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.Position(1695,1980)
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.Caption("Update")
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.FontName("Tahoma")
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.FontSize(8.25)
Gui.FormCCSetUp.cmdupdatecompanycodeprefix.Event(Click,cmdupdatecompanycodeprefix_Click)
Gui.FormCCSetUp.txtCurrentCompanyCode.Create(TextBox,"",True,1500,300,0,2025,375,False,0,"Tahoma",8.25,,1)
Gui.FormCCSetUp.txtCompanyPrefix.Create(TextBox,"",True,1500,300,0,2025,855,True,0,"Tahoma",8.25,,1)
Gui.FormCCSetUp.txtNextNumber.Create(TextBox,"",True,1500,300,0,2025,1350,True,0,"Tahoma",8.25,,1)
Gui.FormCCSetUp.lbl1.Create(Label,"Customer:",True,750,195,0,1155,420,True,0,"Tahoma",8.25,,0,0)
Gui.FormCCSetUp.lbl1.BorderStyle(0)
Gui.FormCCSetUp.lbl2.Create(Label,"Prefix:",True,480,195,0,1395,885,True,0,"Tahoma",8.25,,0,0)
Gui.FormCCSetUp.lbl2.BorderStyle(0)
Gui.FormCCSetUp.lbl3.Create(Label,"Last Number:",True,960,195,0,915,1380,True,0,"Tahoma",8.25,,0,0)
Gui.FormCCSetUp.lbl3.BorderStyle(0)
Gui.FormCCSetUp.cmdAutoFill.Create(Button)
Gui.FormCCSetUp.cmdAutoFill.Enabled(True)
Gui.FormCCSetUp.cmdAutoFill.Visible(True)
Gui.FormCCSetUp.cmdAutoFill.Zorder(0)
Gui.FormCCSetUp.cmdAutoFill.Size(810,345)
Gui.FormCCSetUp.cmdAutoFill.Position(3645,855)
Gui.FormCCSetUp.cmdAutoFill.Caption("AutoFill")
Gui.FormCCSetUp.cmdAutoFill.FontName("Tahoma")
Gui.FormCCSetUp.cmdAutoFill.FontSize(8.25)
Gui.FormCCSetUp.cmdAutoFill.Event(Click,cmdAutoFill_Click)
Gui.FormUpdatePartsText..Create(BaseForm)
Gui.FormUpdatePartsText..Caption("Update Parts Text")
Gui.FormUpdatePartsText..Size(14355,6570)
Gui.FormUpdatePartsText..MinX(0)
Gui.FormUpdatePartsText..MinY(0)
Gui.FormUpdatePartsText..Position(0,0)
Gui.FormUpdatePartsText..AlwaysOnTop(False)
Gui.FormUpdatePartsText..FontName("Tahoma")
Gui.FormUpdatePartsText..FontSize(8.25)
Gui.FormUpdatePartsText..ControlBox(True)
Gui.FormUpdatePartsText..MaxButton(True)
Gui.FormUpdatePartsText..MinButton(True)
Gui.FormUpdatePartsText..MousePointer(0)
Gui.FormUpdatePartsText..Moveable(True)
Gui.FormUpdatePartsText..Sizeable(True)
Gui.FormUpdatePartsText..ShowInTaskBar(True)
Gui.FormUpdatePartsText..TitleBar(True)
Gui.FormUpdatePartsText..Event(UnLoad,FormUpdatePartsText_UnLoad)
Gui.FormUpdatePartsText.lbl1.Create(Label,"History of Changers",True,1440,195,0,300,285,True,0,"Tahoma",8.25,,0,0)
Gui.FormUpdatePartsText.lbl1.BorderStyle(0)
Gui.FormUpdatePartsText.cmd1.Create(Button)
Gui.FormUpdatePartsText.cmd1.Enabled(True)
Gui.FormUpdatePartsText.cmd1.Visible(True)
Gui.FormUpdatePartsText.cmd1.Zorder(0)
Gui.FormUpdatePartsText.cmd1.Size(1125,345)
Gui.FormUpdatePartsText.cmd1.Position(13065,135)
Gui.FormUpdatePartsText.cmd1.Caption("Update")
Gui.FormUpdatePartsText.cmd1.FontName("Tahoma")
Gui.FormUpdatePartsText.cmd1.FontSize(8.25)
Gui.FormUpdatePartsText.lbl2.Create(Label,"Internal info",True,885,195,0,300,3345,True,0,"Tahoma",8.25,,0,0)
Gui.FormUpdatePartsText.lbl2.BorderStyle(0)
Gui.FormUpdatePartsText.lbl3.Create(Label,"Additional Description 1",True,2265,195,0,300,3945,True,0,"Tahoma",8.25,,0,0)
Gui.FormUpdatePartsText.lbl3.BorderStyle(0)
Gui.FormUpdatePartsText.lbl4.Create(Label,"Additional Description 2",True,1785,195,0,300,4605,True,0,"Tahoma",8.25,,0,0)
Gui.FormUpdatePartsText.lbl4.BorderStyle(0)
Gui.FormUpdatePartsText.lbl5.Create(Label,"Additional Description 3",True,2025,195,0,300,5220,True,0,"Tahoma",8.25,,0,0)
Gui.FormUpdatePartsText.lbl5.BorderStyle(0)
Gui.FormUpdatePartsText.GSGCPartHistoryOfChange.Create(GsGridControl)
Gui.FormUpdatePartsText.GSGCPartHistoryOfChange.Enabled(True)
Gui.FormUpdatePartsText.GSGCPartHistoryOfChange.Visible(True)
Gui.FormUpdatePartsText.GSGCPartHistoryOfChange.Zorder(0)
Gui.FormUpdatePartsText.GSGCPartHistoryOfChange.Size(13845,2595)
Gui.FormUpdatePartsText.GSGCPartHistoryOfChange.Position(315,585)
Gui.FormUpdatePartsText.txt4.Create(TextBox,"",True,13890,300,0,300,3570,True,0,"Tahoma",8.25,,1)
Gui.FormUpdatePartsText.txtAddDesc1.Create(TextBox,"",True,13890,300,0,300,4230,True,0,"Tahoma",8.25,,1)
Gui.FormUpdatePartsText.txtAddDesc2.Create(TextBox,"",True,13890,300,0,300,4890,True,0,"Tahoma",8.25,,1)
Gui.FormUpdatePartsText.txtAddDesc3.Create(TextBox,"",True,13890,300,0,300,5490,True,0,"Tahoma",8.25,,1)
Gui.frmCreateKit..Create(BaseForm)
Gui.frmCreateKit..Caption("Create Kit")
Gui.frmCreateKit..Size(7470,6825)
Gui.frmCreateKit..MinX(0)
Gui.frmCreateKit..MinY(0)
Gui.frmCreateKit..Position(0,0)
Gui.frmCreateKit..BackColor(-2147483633)
Gui.frmCreateKit..MousePointer(0)
Gui.frmCreateKit..Event(UnLoad,frmCreateKit_UnLoad)
Gui.frmCreateKit..AlwaysOnTop(False)
Gui.frmCreateKit..FontName("Tahoma")
Gui.frmCreateKit..FontSize(8.25)
Gui.frmCreateKit..ControlBox(True)
Gui.frmCreateKit..MaxButton(True)
Gui.frmCreateKit..MinButton(True)
Gui.frmCreateKit..Moveable(True)
Gui.frmCreateKit..Sizeable(True)
Gui.frmCreateKit..ShowInTaskBar(True)
Gui.frmCreateKit..TitleBar(True)
Gui.frmCreateKit.gsgcKit.Create(GsGridControl)
Gui.frmCreateKit.gsgcKit.Size(7410,5970)
Gui.frmCreateKit.gsgcKit.Position(30,30)
Gui.frmCreateKit.gsgcKit.Enabled(True)
Gui.frmCreateKit.gsgcKit.Visible(True)
Gui.frmCreateKit.gsgcKit.Zorder(0)
Gui.frmCreateKit.cmdGenerateBOM.Create(Button)
Gui.frmCreateKit.cmdGenerateBOM.Size(1260,330)
Gui.frmCreateKit.cmdGenerateBOM.Position(45,6030)
Gui.frmCreateKit.cmdGenerateBOM.Caption("Create Kit")
Gui.frmCreateKit.cmdGenerateBOM.Event(Click,cmdGenerateBOM_Click)
Gui.frmCreateKit.cmdGenerateBOM.Enabled(True)
Gui.frmCreateKit.cmdGenerateBOM.Visible(True)
Gui.frmCreateKit.cmdGenerateBOM.Zorder(0)
Gui.frmCreateKit.cmdGenerateBOM.FontName("Tahoma")
Gui.frmCreateKit.cmdGenerateBOM.FontSize(8.25)
Gui.SS_FORM..create(BaseForm)
Gui.SS_FORM..caption("Powder Coating Calculator")
Gui.SS_FORM..size(7485,9420)
Gui.SS_FORM..position(0,0)
Gui.SS_FORM..forecolor(0)
Gui.SS_FORM..BackColor(-2147483633)
Gui.SS_FORM..maxbutton(False)
Gui.SS_FORM..minbutton(False)
Gui.SS_FORM..mousepointer(0)
Gui.SS_FORM..sizeable(False)
Gui.SS_FORM..MinX(0)
Gui.SS_FORM..MinY(0)
Gui.SS_FORM..Event(UnLoad,SS_FORM_UnLoad)
Gui.SS_FORM..AlwaysOnTop(False)
Gui.SS_FORM..FontName("Tahoma")
Gui.SS_FORM..FontSize(8.25)
Gui.SS_FORM..ControlBox(True)
Gui.SS_FORM..Moveable(True)
Gui.SS_FORM..ShowInTaskBar(True)
Gui.SS_FORM..TitleBar(True)
Gui.SS_FORM.lbl_txtColour.create(label,"Colour",True,1800,195,1,105,90,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtColour.LabelStretch(True)
Gui.SS_FORM.lbl_txtColour.BorderStyle(0)
Gui.SS_FORM.lbl_txtProdLength.create(label,"Product Length:",True,1800,195,1,105,750,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtProdLength.LabelStretch(True)
Gui.SS_FORM.lbl_txtProdLength.BorderStyle(0)
Gui.SS_FORM.txtProdLength.create(textbox,"",True,1005,300,1,1620,690,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.txtProdLength.Event(LostFocus,txtProdLength_LostFocus)
Gui.SS_FORM.lbl_txtProdWidth.create(label,"Product Width:",True,1800,195,1,105,1365,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtProdWidth.LabelStretch(True)
Gui.SS_FORM.lbl_txtProdWidth.BorderStyle(0)
Gui.SS_FORM.txtProdWidth.create(textbox,"",True,1005,300,1,1650,1305,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.txtProdWidth.Event(LostFocus,txtProdWidth_LostFocus)
Gui.SS_FORM.lbl_txtPowdThick.create(label,"Powder Thickness:",True,1800,195,1,105,1980,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtPowdThick.LabelStretch(True)
Gui.SS_FORM.lbl_txtPowdThick.BorderStyle(0)
Gui.SS_FORM.txtPowdThick.create(textbox,"",True,1005,300,1,1650,1920,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lbl_txtPowdPrice.create(label,"Powder Price:",True,1800,195,1,105,2595,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtPowdPrice.LabelStretch(True)
Gui.SS_FORM.lbl_txtPowdPrice.BorderStyle(0)
Gui.SS_FORM.txtPowdPrice.create(textbox,"",True,1005,300,1,1650,2535,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lbl_txtPowdCost.create(label,"Powder Cost:",True,1800,195,1,105,3210,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtPowdCost.LabelStretch(True)
Gui.SS_FORM.lbl_txtPowdCost.BorderStyle(0)
Gui.SS_FORM.txtPowdCost.create(textbox,"",True,1005,300,1,1650,3150,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lbl_txtChemCost.create(label,"Chemical Cost:",True,1800,195,1,105,3825,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtChemCost.LabelStretch(True)
Gui.SS_FORM.lbl_txtChemCost.BorderStyle(0)
Gui.SS_FORM.txtChemCost.create(textbox,"",True,1005,300,1,1650,3765,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lblCalcPrice.create(label,"Calculated Price:",True,1800,195,1,105,4440,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lblCalcPrice.BorderStyle(0)
Gui.SS_FORM.lblCalcPriceResult.create(label,"",True,1800,195,1,1650,4470,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lblCalcPriceResult.BorderStyle(0)
Gui.SS_FORM.lbl_txtMarkup.create(label,"Markup:",True,1275,195,1,105,5700,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtMarkup.LabelStretch(True)
Gui.SS_FORM.lbl_txtMarkup.BorderStyle(0)
Gui.SS_FORM.txtMarkup.create(textbox,"",True,615,300,1,1650,5595,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.txtMarkup.Event(LostFocus,txtMarkup_LostFocus)
Gui.SS_FORM.lblNetPrice.create(label,"Net Price:               ",True,1470,255,1,105,6315,True,0,"Arial",8,65280,1,0)
Gui.SS_FORM.lblNetPrice.LabelStretch(True)
Gui.SS_FORM.lblNetPrice.BorderStyle(0)
Gui.SS_FORM.lbl_txtGap.create(label,"Gap Between Product:",True,1770,195,1,3735,735,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtGap.LabelStretch(True)
Gui.SS_FORM.lbl_txtGap.BorderStyle(0)
Gui.SS_FORM.txtGap.create(textbox,"",True,1155,300,1,5505,675,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lbl_txtMan.create(label,"Man Power:",True,960,195,1,4485,1350,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtMan.LabelStretch(True)
Gui.SS_FORM.lbl_txtMan.BorderStyle(0)
Gui.SS_FORM.txtMan.create(textbox,"",True,1005,300,1,5505,1290,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lbl_txtLabourRate.create(label,"Labour Rate:",True,1035,195,1,4425,2070,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtLabourRate.LabelStretch(True)
Gui.SS_FORM.lbl_txtLabourRate.BorderStyle(0)
Gui.SS_FORM.txtLabourRate.create(textbox,"",True,1155,300,1,5505,2010,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lbl_txtSetupCost.create(label,"Setup Cost:",True,960,195,1,4515,2700,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtSetupCost.LabelStretch(True)
Gui.SS_FORM.lbl_txtSetupCost.BorderStyle(0)
Gui.SS_FORM.txtSetupCost.create(textbox,"",True,1005,300,1,5505,2640,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lbl_txtLineSpeed.create(label,"Line Speed:",True,990,195,1,4500,3465,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtLineSpeed.LabelStretch(True)
Gui.SS_FORM.lbl_txtLineSpeed.BorderStyle(0)
Gui.SS_FORM.txtLineSpeed.create(textbox,"",True,1005,300,1,5505,3375,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lbl_txtLabourCost.create(label,"Labour Cost:",True,1065,195,1,4440,4185,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl_txtLabourCost.LabelStretch(True)
Gui.SS_FORM.lbl_txtLabourCost.BorderStyle(0)
Gui.SS_FORM.txtLabourCost.create(textbox,"",True,1005,300,1,5505,4110,True,0,"Arial",8,16777215,1)
Gui.SS_FORM.lblMinCharge.create(label,"Minimum Charge:   ",True,1485,255,1,75,6930,True,0,"Arial",8,65280,1,0)
Gui.SS_FORM.lblMinCharge.LabelStretch(True)
Gui.SS_FORM.lblMinCharge.BorderStyle(0)
Gui.SS_FORM.chkWaiveMin.create(checkbox)
Gui.SS_FORM.chkWaiveMin.visible(False)
Gui.SS_FORM.chkWaiveMin.Size(1560,300)
Gui.SS_FORM.chkWaiveMin.Position(200,200)
Gui.SS_FORM.chkWaiveMin.Enabled(True)
Gui.SS_FORM.chkWaiveMin.Zorder(0)
Gui.SS_FORM.chkWaiveMin.Caption("")
Gui.SS_FORM.chkWaiveMin.FontName("Tahoma")
Gui.SS_FORM.chkWaiveMin.FontSize(8.25)
Gui.SS_FORM.lblCalcPrice2.Create(Label,"Price (per unit):",True,1800,195,1,135,5070,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lblCalcPrice2.BorderStyle(0)
Gui.SS_FORM.txtPricePerUnit.Create(TextBox,"",True,990,300,0,1650,4980,True,0,"Arial",8,-2147483643,1)
Gui.SS_FORM.cmdAddToRouting.Create(Button)
Gui.SS_FORM.cmdAddToRouting.Size(1530,375)
Gui.SS_FORM.cmdAddToRouting.Position(60,8265)
Gui.SS_FORM.cmdAddToRouting.Caption("Add to Routing")
Gui.SS_FORM.cmdAddToRouting.Visible(False)
Gui.SS_FORM.cmdAddToRouting.Enabled(True)
Gui.SS_FORM.cmdAddToRouting.Zorder(0)
Gui.SS_FORM.cmdAddToRouting.FontName("Tahoma")
Gui.SS_FORM.cmdAddToRouting.FontSize(8.25)
Gui.SS_FORM.ddlColour.Create(DropDownList)
Gui.SS_FORM.ddlColour.Size(6645,330)
Gui.SS_FORM.ddlColour.Position(135,285)
Gui.SS_FORM.ddlColour.Event(Change,ddlColour_Click)
Gui.SS_FORM.ddlColour.Enabled(True)
Gui.SS_FORM.ddlColour.Visible(True)
Gui.SS_FORM.ddlColour.Zorder(0)
Gui.SS_FORM.ddlColour.FontName("Tahoma")
Gui.SS_FORM.ddlColour.FontSize(8.25)
Gui.SS_FORM.cmdClear.Create(Button)
Gui.SS_FORM.cmdClear.Size(1515,375)
Gui.SS_FORM.cmdClear.Position(60,7755)
Gui.SS_FORM.cmdClear.Caption("Clear")
Gui.SS_FORM.cmdClear.Visible(False)
Gui.SS_FORM.cmdClear.Event(Click,cmdClear_Click)
Gui.SS_FORM.cmdClear.Enabled(True)
Gui.SS_FORM.cmdClear.Zorder(0)
Gui.SS_FORM.cmdClear.FontName("Tahoma")
Gui.SS_FORM.cmdClear.FontSize(8.25)
Gui.SS_FORM.cmdCalculatePowder.Create(Button)
Gui.SS_FORM.cmdCalculatePowder.Size(1515,375)
Gui.SS_FORM.cmdCalculatePowder.Position(3000,4980)
Gui.SS_FORM.cmdCalculatePowder.Caption("Calculate")
Gui.SS_FORM.cmdCalculatePowder.Event(Click,cmdCalculatePowder_Click)
Gui.SS_FORM.cmdCalculatePowder.Enabled(True)
Gui.SS_FORM.cmdCalculatePowder.Visible(True)
Gui.SS_FORM.cmdCalculatePowder.Zorder(0)
Gui.SS_FORM.cmdCalculatePowder.FontName("Tahoma")
Gui.SS_FORM.cmdCalculatePowder.FontSize(8.25)
Gui.SS_FORM.cmdAddPowderToRouting.Create(Button)
Gui.SS_FORM.cmdAddPowderToRouting.Size(1815,375)
Gui.SS_FORM.cmdAddPowderToRouting.Position(3000,5400)
Gui.SS_FORM.cmdAddPowderToRouting.Caption("Add to Routing")
Gui.SS_FORM.cmdAddPowderToRouting.Visible(True)
Gui.SS_FORM.cmdAddPowderToRouting.Event(Click,cmdAddPowderToRouting_Click)
Gui.SS_FORM.cmdAddPowderToRouting.Enabled(True)
Gui.SS_FORM.cmdAddPowderToRouting.Zorder(0)
Gui.SS_FORM.cmdAddPowderToRouting.FontName("Tahoma")
Gui.SS_FORM.cmdAddPowderToRouting.FontSize(8.25)
Gui.SS_FORM.lblNetPriceResult.Create(Label,"",True,1290,255,0,1530,6315,True,0,"Arial",8,65280,1,0)
Gui.SS_FORM.lblNetPriceResult.BorderStyle(0)
Gui.SS_FORM.lblMinChargeResult.Create(Label,"",True,1290,255,0,1530,6930,True,0,"Arial",8,65280,1,0)
Gui.SS_FORM.lblMinChargeResult.BorderStyle(0)
Gui.SS_FORM.lbl1.Create(Label,"mm",True,405,255,0,2685,780,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl1.BorderStyle(0)
Gui.SS_FORM.lbl2.Create(Label,"mm",True,435,225,0,2685,1410,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl2.BorderStyle(0)
Gui.SS_FORM.lbl3.Create(Label,"microns",True,750,255,0,2700,1980,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl3.BorderStyle(0)
Gui.SS_FORM.lbl4.Create(Label,"$/kg",True,810,255,0,2700,2625,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl4.BorderStyle(0)
Gui.SS_FORM.lbl5.Create(Label,"$/unit",True,735,255,0,2715,3240,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl5.BorderStyle(0)
Gui.SS_FORM.lbl6.Create(Label,"%",True,375,255,0,2310,5685,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl6.BorderStyle(0)
Gui.SS_FORM.lbl7.Create(Label,"mm",True,1935,255,0,6735,765,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl7.BorderStyle(0)
Gui.SS_FORM.lbl8.Create(Label,"$/hr",True,1935,255,0,6735,2085,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl8.BorderStyle(0)
Gui.SS_FORM.lbl9.Create(Label,"%",True,420,255,0,6555,2730,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl9.BorderStyle(0)
Gui.SS_FORM.lbl10.Create(Label,"m/min",True,645,255,0,6555,3480,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl10.BorderStyle(0)
Gui.SS_FORM.lbl11.Create(Label,"$/unit",True,720,255,0,6555,4185,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl11.BorderStyle(0)
Gui.SS_FORM.lbl12.Create(Label,"$/unit",True,1935,255,0,2715,3855,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lbl12.BorderStyle(0)
Gui.SS_FORM.lblID.Create(Label,"",True,1935,255,0,5220,8460,True,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lblID.BorderStyle(0)
Gui.SS_FORM.lblGT.Create(Label,"",False,1935,255,0,5220,8460,False,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lblGT.BorderStyle(0)
Gui.SS_FORM.lblPart.Create(Label,"",False,1935,255,0,5220,8460,False,0,"Arial",8,-2147483633,0,0)
Gui.SS_FORM.lblPart.BorderStyle(0)
Gui.frmOverride..Create(BaseForm)
Gui.frmOverride..Caption("Override Cost")
Gui.frmOverride..Size(3555,6870)
Gui.frmOverride..MinX(0)
Gui.frmOverride..MinY(0)
Gui.frmOverride..Position(0,0)
Gui.frmOverride..BackColor(-2147483633)
Gui.frmOverride..MousePointer(0)
Gui.frmOverride..Event(UnLoad,frmOverride_UnLoad)
Gui.frmOverride..AlwaysOnTop(False)
Gui.frmOverride..FontName("Tahoma")
Gui.frmOverride..FontSize(8.25)
Gui.frmOverride..ControlBox(True)
Gui.frmOverride..MaxButton(True)
Gui.frmOverride..MinButton(True)
Gui.frmOverride..Moveable(True)
Gui.frmOverride..Sizeable(True)
Gui.frmOverride..ShowInTaskBar(True)
Gui.frmOverride..TitleBar(True)
Gui.frmOverride.GsGridControl1.Create(GsGridControl)
Gui.frmOverride.GsGridControl1.Size(3135,5190)
Gui.frmOverride.GsGridControl1.Position(90,480)
Gui.frmOverride.GsGridControl1.Enabled(True)
Gui.frmOverride.GsGridControl1.Visible(True)
Gui.frmOverride.GsGridControl1.Zorder(0)
Gui.frmOverride.cmdSaveOverride.Create(Button)
Gui.frmOverride.cmdSaveOverride.Size(1110,375)
Gui.frmOverride.cmdSaveOverride.Position(120,5790)
Gui.frmOverride.cmdSaveOverride.Caption("Save")
Gui.frmOverride.cmdSaveOverride.Event(Click,cmdSaveOverride_Click)
Gui.frmOverride.cmdSaveOverride.Enabled(True)
Gui.frmOverride.cmdSaveOverride.Visible(True)
Gui.frmOverride.cmdSaveOverride.Zorder(0)
Gui.frmOverride.cmdSaveOverride.FontName("Tahoma")
Gui.frmOverride.cmdSaveOverride.FontSize(8.25)
Gui.frmOverride.cmdDeleteOverride.Create(Button)
Gui.frmOverride.cmdDeleteOverride.Size(1035,375)
Gui.frmOverride.cmdDeleteOverride.Position(2130,5790)
Gui.frmOverride.cmdDeleteOverride.Caption("Delete")
Gui.frmOverride.cmdDeleteOverride.Event(Click,cmdDeleteOverride_Click)
Gui.frmOverride.cmdDeleteOverride.Enabled(True)
Gui.frmOverride.cmdDeleteOverride.Visible(True)
Gui.frmOverride.cmdDeleteOverride.Zorder(0)
Gui.frmOverride.cmdDeleteOverride.FontName("Tahoma")
Gui.frmOverride.cmdDeleteOverride.FontSize(8.25)
Gui.frmOverride.lblOutside.Create(Label,"",True,1935,255,0,135,180,True,0,"Arial",8,-2147483633,0,0)
Gui.frmOverride.lblOutside.BorderStyle(0)
Gui.frmOverride.lblSeq.Create(Label,"",True,1935,255,0,2160,165,True,0,"Arial",8,-2147483633,0,0)
Gui.frmOverride.lblSeq.BorderStyle(0)
Gui.frmMassAdd..Create(BaseForm)
Gui.frmMassAdd..Caption("Mass Add Labour/Material")
Gui.frmMassAdd..Size(18000,5700)
Gui.frmMassAdd..MinX(0)
Gui.frmMassAdd..MinY(0)
Gui.frmMassAdd..Position(0,0)
Gui.frmMassAdd..AlwaysOnTop(False)
Gui.frmMassAdd..FontName("Tahoma")
Gui.frmMassAdd..FontSize(8.25)
Gui.frmMassAdd..ControlBox(True)
Gui.frmMassAdd..MaxButton(True)
Gui.frmMassAdd..MinButton(True)
Gui.frmMassAdd..MousePointer(0)
Gui.frmMassAdd..Moveable(True)
Gui.frmMassAdd..Sizeable(True)
Gui.frmMassAdd..ShowInTaskBar(True)
Gui.frmMassAdd..TitleBar(True)
Gui.frmMassAdd..Event(UnLoad,frmMassAdd_UnLoad)
Gui.frmMassAdd.ddlProcess.Create(DropDownList)
Gui.frmMassAdd.ddlProcess.Enabled(True)
Gui.frmMassAdd.ddlProcess.Visible(True)
Gui.frmMassAdd.ddlProcess.Zorder(0)
Gui.frmMassAdd.ddlProcess.Size(2370,300)
Gui.frmMassAdd.ddlProcess.Position(105,315)
Gui.frmMassAdd.ddlProcess.FontName("Tahoma")
Gui.frmMassAdd.ddlProcess.FontSize(8.25)
Gui.frmMassAdd.ddlProcess.Event(Change,ddlProcess_Change)
Gui.frmMassAdd.lblProcess.Create(Label,"Process",True,555,195,0,120,90,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblProcess.BorderStyle(0)
Gui.frmMassAdd.txtSetupTime.Create(TextBox,"",True,1110,300,0,2625,300,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupTime.NumericOnly(1)
Gui.frmMassAdd.lblSetupTime.Create(Label,"Setup Min.",True,765,195,0,2655,45,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupTime.BorderStyle(0)
Gui.frmMassAdd.txtSetupRate.Create(TextBox,"",True,1200,300,0,3840,285,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupRate.NumericOnly(1)
Gui.frmMassAdd.txtSequence.Create(TextBox,"",True,1110,300,0,8220,270,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSequence.NumericOnly(2)
Gui.frmMassAdd.chkOmit.create(checkbox)
Gui.frmMassAdd.chkOmit.visible(True)
Gui.frmMassAdd.chkOmit.Size(1200,300)
Gui.frmMassAdd.chkOmit.Position(12240,210)
Gui.frmMassAdd.chkOmit.Caption("Omit")
Gui.frmMassAdd.chkOmit.Enabled(True)
Gui.frmMassAdd.chkOmit.Zorder(0)
Gui.frmMassAdd.chkOmit.FontName("Tahoma")
Gui.frmMassAdd.chkOmit.FontSize(8.25)
Gui.frmMassAdd.lblSequence.Create(Label,"Sequence",True,705,195,0,8235,15,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence.BorderStyle(0)
Gui.frmMassAdd.txtMaterial.Create(TextBox,"",True,2340,300,0,135,3945,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.cmdBrowseMat.Create(Button)
Gui.frmMassAdd.cmdBrowseMat.Enabled(True)
Gui.frmMassAdd.cmdBrowseMat.Visible(True)
Gui.frmMassAdd.cmdBrowseMat.Zorder(0)
Gui.frmMassAdd.cmdBrowseMat.Size(615,330)
Gui.frmMassAdd.cmdBrowseMat.Position(2625,3930)
Gui.frmMassAdd.cmdBrowseMat.Caption("^")
Gui.frmMassAdd.cmdBrowseMat.FontName("Tahoma")
Gui.frmMassAdd.cmdBrowseMat.FontSize(8.25)
Gui.frmMassAdd.cmdBrowseMat.Event(Click,cmdBrowseMat_Click)
Gui.frmMassAdd.txtSetMatQty.Create(TextBox,"",True,570,300,0,3405,3945,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetMatRate.Create(TextBox,"",True,645,300,0,4185,3945,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtMarkup.Create(TextBox,"",True,675,300,0,4950,3930,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunSeq.Create(TextBox,"",True,630,300,0,5685,3945,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.chkOmitMat.Create(CheckBox)
Gui.frmMassAdd.chkOmitMat.Enabled(True)
Gui.frmMassAdd.chkOmitMat.Visible(True)
Gui.frmMassAdd.chkOmitMat.Zorder(0)
Gui.frmMassAdd.chkOmitMat.Size(1125,300)
Gui.frmMassAdd.chkOmitMat.Position(9225,3960)
Gui.frmMassAdd.chkOmitMat.Caption("Omit")
Gui.frmMassAdd.chkOmitMat.FontName("Tahoma")
Gui.frmMassAdd.chkOmitMat.FontSize(8.25)
Gui.frmMassAdd.cmdAddMaterial.Create(Button)
Gui.frmMassAdd.cmdAddMaterial.Enabled(True)
Gui.frmMassAdd.cmdAddMaterial.Visible(True)
Gui.frmMassAdd.cmdAddMaterial.Zorder(0)
Gui.frmMassAdd.cmdAddMaterial.Size(1200,375)
Gui.frmMassAdd.cmdAddMaterial.Position(10545,3930)
Gui.frmMassAdd.cmdAddMaterial.Caption("Add Material")
Gui.frmMassAdd.cmdAddMaterial.FontName("Tahoma")
Gui.frmMassAdd.cmdAddMaterial.FontSize(8.25)
Gui.frmMassAdd.cmdAddMaterial.Event(Click,cmdAddMaterial_Click)
Gui.frmMassAdd.lblMassAdd.Create(Label,"Use the Mass Add Program with Caution!  If a sequence number exists, it will be deleted!",True,6375,210,0,495,4410,True,0,"Arial",8,-2147483633,0,0)
Gui.frmMassAdd.lblMassAdd.ForeColor(255)
Gui.frmMassAdd.lblMassAdd.BorderStyle(0)
Gui.frmMassAdd.lblSetupRate.Create(Label,"Setup Rate",True,810,195,0,3900,30,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupRate.BorderStyle(0)
Gui.frmMassAdd.lblMaterial.Create(Label,"Material",True,570,195,0,180,3720,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblMaterial.BorderStyle(0)
Gui.frmMassAdd.lblSetQty.Create(Label,"Set Qty",True,600,195,0,3420,3720,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetQty.BorderStyle(0)
Gui.frmMassAdd.lblSetCost.Create(Label,"Set Cost",True,660,195,0,4185,3705,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetCost.BorderStyle(0)
Gui.frmMassAdd.lblMatSeq.Create(Label,"Sequence",True,705,195,0,5685,3690,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblMatSeq.BorderStyle(0)
Gui.frmMassAdd.lblMatSeq2.Create(Label,"Markup",True,525,195,0,4965,3690,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblMatSeq2.BorderStyle(0)
Gui.frmMassAdd.lblSetupRate2.Create(Label,"Setup Rate",True,810,195,0,3930,765,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupRate2.BorderStyle(0)
Gui.frmMassAdd.lblSequence2.Create(Label,"Sequence",True,705,195,0,8265,750,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence2.BorderStyle(0)
Gui.frmMassAdd.chkOmit2.Create(CheckBox)
Gui.frmMassAdd.chkOmit2.Enabled(True)
Gui.frmMassAdd.chkOmit2.Visible(True)
Gui.frmMassAdd.chkOmit2.Zorder(0)
Gui.frmMassAdd.chkOmit2.Size(1200,300)
Gui.frmMassAdd.chkOmit2.Position(12270,945)
Gui.frmMassAdd.chkOmit2.Caption("Omit")
Gui.frmMassAdd.chkOmit2.FontName("Tahoma")
Gui.frmMassAdd.chkOmit2.FontSize(8.25)
Gui.frmMassAdd.txtSequence2.Create(TextBox,"",True,1110,300,0,8250,1005,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSequence2.NumericOnly(2)
Gui.frmMassAdd.txtSetupRate2.Create(TextBox,"",True,1200,300,0,3870,1020,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupRate2.NumericOnly(1)
Gui.frmMassAdd.lblSetupTime2.Create(Label,"Setup Min.",True,765,195,0,2685,780,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupTime2.BorderStyle(0)
Gui.frmMassAdd.txtSetupTime2.Create(TextBox,"",True,1110,300,0,2655,1035,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupTime2.NumericOnly(1)
Gui.frmMassAdd.lblProcess2.Create(Label,"Process",True,555,195,0,150,825,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblProcess2.BorderStyle(0)
Gui.frmMassAdd.ddlProcess2.Create(DropDownList)
Gui.frmMassAdd.ddlProcess2.Enabled(True)
Gui.frmMassAdd.ddlProcess2.Visible(True)
Gui.frmMassAdd.ddlProcess2.Zorder(0)
Gui.frmMassAdd.ddlProcess2.Size(2370,300)
Gui.frmMassAdd.ddlProcess2.Position(135,1050)
Gui.frmMassAdd.ddlProcess2.FontName("Tahoma")
Gui.frmMassAdd.ddlProcess2.FontSize(8.25)
Gui.frmMassAdd.ddlProcess2.Event(Change,ddlProcess2_Change)
Gui.frmMassAdd.lblSetupRate3.Create(Label,"Setup Rate",True,810,195,0,3960,1425,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupRate3.BorderStyle(0)
Gui.frmMassAdd.lblSequence3.Create(Label,"Sequence",True,705,195,0,8295,1410,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence3.BorderStyle(0)
Gui.frmMassAdd.chkOmit3.Create(CheckBox)
Gui.frmMassAdd.chkOmit3.Enabled(True)
Gui.frmMassAdd.chkOmit3.Visible(True)
Gui.frmMassAdd.chkOmit3.Zorder(0)
Gui.frmMassAdd.chkOmit3.Size(1200,300)
Gui.frmMassAdd.chkOmit3.Position(12300,1605)
Gui.frmMassAdd.chkOmit3.Caption("Omit")
Gui.frmMassAdd.chkOmit3.FontName("Tahoma")
Gui.frmMassAdd.chkOmit3.FontSize(8.25)
Gui.frmMassAdd.txtSequence3.Create(TextBox,"",True,1110,300,0,8280,1665,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSequence3.NumericOnly(2)
Gui.frmMassAdd.txtSetupRate3.Create(TextBox,"",True,1200,300,0,3900,1680,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupRate3.NumericOnly(1)
Gui.frmMassAdd.lblSetupTime3.Create(Label,"Setup Min.",True,765,195,0,2715,1440,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupTime3.BorderStyle(0)
Gui.frmMassAdd.txtSetupTime3.Create(TextBox,"",True,1110,300,0,2685,1695,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupTime3.NumericOnly(1)
Gui.frmMassAdd.lblProcess3.Create(Label,"Process",True,555,195,0,180,1485,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblProcess3.BorderStyle(0)
Gui.frmMassAdd.ddlProcess3.Create(DropDownList)
Gui.frmMassAdd.ddlProcess3.Enabled(True)
Gui.frmMassAdd.ddlProcess3.Visible(True)
Gui.frmMassAdd.ddlProcess3.Zorder(0)
Gui.frmMassAdd.ddlProcess3.Size(2370,300)
Gui.frmMassAdd.ddlProcess3.Position(165,1710)
Gui.frmMassAdd.ddlProcess3.FontName("Tahoma")
Gui.frmMassAdd.ddlProcess3.FontSize(8.25)
Gui.frmMassAdd.ddlProcess3.Event(Change,ddlProcess3_Change)
Gui.frmMassAdd.lblSetupRate4.Create(Label,"Setup Rate",True,810,195,0,3945,2070,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupRate4.BorderStyle(0)
Gui.frmMassAdd.cmdAddLabour.Create(Button)
Gui.frmMassAdd.cmdAddLabour.Enabled(True)
Gui.frmMassAdd.cmdAddLabour.Visible(True)
Gui.frmMassAdd.cmdAddLabour.Zorder(0)
Gui.frmMassAdd.cmdAddLabour.Size(990,420)
Gui.frmMassAdd.cmdAddLabour.Position(13575,2880)
Gui.frmMassAdd.cmdAddLabour.Caption("Add Labour")
Gui.frmMassAdd.cmdAddLabour.FontName("Tahoma")
Gui.frmMassAdd.cmdAddLabour.FontSize(8.25)
Gui.frmMassAdd.cmdAddLabour.Event(Click,cmdAddLabour_Click)
Gui.frmMassAdd.lblSequence4.Create(Label,"Sequence",True,705,195,0,8280,2055,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence4.BorderStyle(0)
Gui.frmMassAdd.chkOmit4.Create(CheckBox)
Gui.frmMassAdd.chkOmit4.Enabled(True)
Gui.frmMassAdd.chkOmit4.Visible(True)
Gui.frmMassAdd.chkOmit4.Zorder(0)
Gui.frmMassAdd.chkOmit4.Size(1200,300)
Gui.frmMassAdd.chkOmit4.Position(12285,2250)
Gui.frmMassAdd.chkOmit4.Caption("Omit")
Gui.frmMassAdd.chkOmit4.FontName("Tahoma")
Gui.frmMassAdd.chkOmit4.FontSize(8.25)
Gui.frmMassAdd.txtSequence4.Create(TextBox,"",True,1110,300,0,8265,2310,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSequence4.NumericOnly(2)
Gui.frmMassAdd.txtSetupRate4.Create(TextBox,"",True,1200,300,0,3885,2325,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupRate4.NumericOnly(1)
Gui.frmMassAdd.lblSetupTime4.Create(Label,"Setup Min.",True,765,195,0,2700,2085,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupTime4.BorderStyle(0)
Gui.frmMassAdd.txtSetupTime4.Create(TextBox,"",True,1110,300,0,2670,2340,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupTime4.NumericOnly(1)
Gui.frmMassAdd.lblProcess4.Create(Label,"Process",True,555,195,0,165,2130,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblProcess4.BorderStyle(0)
Gui.frmMassAdd.ddlProcess4.Create(DropDownList)
Gui.frmMassAdd.ddlProcess4.Enabled(True)
Gui.frmMassAdd.ddlProcess4.Visible(True)
Gui.frmMassAdd.ddlProcess4.Zorder(0)
Gui.frmMassAdd.ddlProcess4.Size(2370,300)
Gui.frmMassAdd.ddlProcess4.Position(150,2355)
Gui.frmMassAdd.ddlProcess4.FontName("Tahoma")
Gui.frmMassAdd.ddlProcess4.FontSize(8.25)
Gui.frmMassAdd.ddlProcess4.Event(Change,ddlProcess4_Change)
Gui.frmMassAdd.txtOpCode1.Create(TextBox,"",True,1185,300,0,9495,285,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtOpCode2.Create(TextBox,"",True,1185,300,0,9510,1005,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtOpCode3.Create(TextBox,"",True,1185,300,0,9510,1680,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtOpCode4.Create(TextBox,"",True,1185,300,0,9510,2310,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.lblSequence5.Create(Label,"Op Code",True,630,195,0,9495,30,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence5.BorderStyle(0)
Gui.frmMassAdd.lblSequence6.Create(Label,"Op Code",True,630,195,0,9525,780,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence6.BorderStyle(0)
Gui.frmMassAdd.lblSequence7.Create(Label,"Op Code",True,630,195,0,9540,1440,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence7.BorderStyle(0)
Gui.frmMassAdd.lblSequence8.Create(Label,"Op Code",True,630,195,0,9525,2085,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence8.BorderStyle(0)
Gui.frmMassAdd.txtSortCode1.Create(TextBox,"",True,1185,300,0,10860,285,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSortCode2.Create(TextBox,"",True,1185,300,0,10845,1020,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSortcode3.Create(TextBox,"",True,1185,300,0,10845,1680,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSortCode4.Create(TextBox,"",True,1185,300,0,10875,2295,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.lblSequence9.Create(Label,"Code Sort",True,720,195,0,10890,45,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence9.BorderStyle(0)
Gui.frmMassAdd.lblSequence10.Create(Label,"Sort Code",True,720,195,0,10875,780,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence10.BorderStyle(0)
Gui.frmMassAdd.lblSequence11.Create(Label,"Sort Code",True,720,195,0,10890,1425,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence11.BorderStyle(0)
Gui.frmMassAdd.lblSequence12.Create(Label,"Sort Code",True,720,195,0,10875,2100,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence12.BorderStyle(0)
Gui.frmMassAdd.txtOpcodeMat.Create(TextBox,"",True,1155,300,0,6510,3945,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSortCodeMat.Create(TextBox,"",True,1185,300,0,7800,3915,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.lblSequence13.Create(Label,"Op Code",True,630,195,0,6525,3690,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence13.BorderStyle(0)
Gui.frmMassAdd.lblSequence14.Create(Label,"Sort Code",True,720,195,0,7815,3660,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence14.BorderStyle(0)
Gui.frmMassAdd.txtSortCode5.Create(TextBox,"",True,1185,300,0,10890,2985,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtOpCode5.Create(TextBox,"",True,1185,300,0,9525,3000,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.ddlProcess5.Create(DropDownList)
Gui.frmMassAdd.ddlProcess5.Enabled(True)
Gui.frmMassAdd.ddlProcess5.Visible(True)
Gui.frmMassAdd.ddlProcess5.Zorder(0)
Gui.frmMassAdd.ddlProcess5.Size(2370,300)
Gui.frmMassAdd.ddlProcess5.Position(165,3045)
Gui.frmMassAdd.ddlProcess5.FontName("Tahoma")
Gui.frmMassAdd.ddlProcess5.FontSize(8.25)
Gui.frmMassAdd.ddlProcess5.Event(Change,ddlProcess5_Change)
Gui.frmMassAdd.txtSetupTime5.Create(TextBox,"",True,1110,300,0,2685,3030,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupTime5.NumericOnly(1)
Gui.frmMassAdd.txtSetupRate5.Create(TextBox,"",True,1200,300,0,3900,3015,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSetupRate5.NumericOnly(1)
Gui.frmMassAdd.txtSequence5.Create(TextBox,"",True,1110,300,0,8280,3000,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtSequence5.NumericOnly(2)
Gui.frmMassAdd.chkOmit5.Create(CheckBox)
Gui.frmMassAdd.chkOmit5.Enabled(True)
Gui.frmMassAdd.chkOmit5.Visible(True)
Gui.frmMassAdd.chkOmit5.Zorder(0)
Gui.frmMassAdd.chkOmit5.Size(1200,300)
Gui.frmMassAdd.chkOmit5.Position(12300,2940)
Gui.frmMassAdd.chkOmit5.Caption("Omit")
Gui.frmMassAdd.chkOmit5.FontName("Tahoma")
Gui.frmMassAdd.chkOmit5.FontSize(8.25)
Gui.frmMassAdd.lblProcess5.Create(Label,"Process",True,555,195,0,135,2820,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblProcess5.BorderStyle(0)
Gui.frmMassAdd.lblSetupTime5.Create(Label,"Setup Min.",True,765,195,0,2670,2745,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupTime5.BorderStyle(0)
Gui.frmMassAdd.lblSetupRate5.Create(Label,"Setup Rate",True,810,195,0,3915,2730,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSetupRate5.BorderStyle(0)
Gui.frmMassAdd.lblSequence15.Create(Label,"Sequence",True,705,195,0,8250,2715,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence15.BorderStyle(0)
Gui.frmMassAdd.lblSequence16.Create(Label,"Op Code",True,630,195,0,9495,2745,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence16.BorderStyle(0)
Gui.frmMassAdd.lblSequence17.Create(Label,"Sort Code",True,720,195,0,10845,2760,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblSequence17.BorderStyle(0)
Gui.frmMassAdd.lblRunTime.Create(Label,"Run Min.",True,630,195,0,5280,30,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunTime.BorderStyle(0)
Gui.frmMassAdd.txtRunTime1.Create(TextBox,"",True,1110,300,0,5250,285,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunTime1.NumericOnly(1)
Gui.frmMassAdd.lblRunTime2.Create(Label,"Run Min.",True,630,195,0,5310,765,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunTime2.BorderStyle(0)
Gui.frmMassAdd.txtRunTime2.Create(TextBox,"",True,1110,300,0,5280,1020,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunTime2.NumericOnly(1)
Gui.frmMassAdd.lblRunTime3.Create(Label,"Run Min.",True,630,195,0,5340,1425,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunTime3.BorderStyle(0)
Gui.frmMassAdd.txtRunTime3.Create(TextBox,"",True,1110,300,0,5310,1680,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunTime3.NumericOnly(1)
Gui.frmMassAdd.lblRunTime4.Create(Label,"Run Min.",True,630,195,0,5325,2070,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunTime4.BorderStyle(0)
Gui.frmMassAdd.txtRunTime4.Create(TextBox,"",True,1110,300,0,5295,2325,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunTime4.NumericOnly(1)
Gui.frmMassAdd.lblRunTime5.Create(Label,"Run Min.",True,630,195,0,5295,2730,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunTime5.BorderStyle(0)
Gui.frmMassAdd.txtRunTime5.Create(TextBox,"",True,1110,300,0,5310,3015,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunTime5.NumericOnly(1)
Gui.frmMassAdd.txtRunSell.Create(TextBox,"",True,1110,300,0,6600,285,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunSell.NumericOnly(1)
Gui.frmMassAdd.lblRunSell.Create(Label,"Run Sell",True,570,195,0,6630,45,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunSell.BorderStyle(0)
Gui.frmMassAdd.lblRunSell2.Create(Label,"Run Sell",True,570,195,0,6660,780,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunSell2.BorderStyle(0)
Gui.frmMassAdd.txtRunSell2.Create(TextBox,"",True,1110,300,0,6630,1035,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunSell2.NumericOnly(1)
Gui.frmMassAdd.lblRunSell3.Create(Label,"Run Sell",True,570,195,0,6690,1440,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunSell3.BorderStyle(0)
Gui.frmMassAdd.txtRunSell3.Create(TextBox,"",True,1110,300,0,6660,1695,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunSell3.NumericOnly(1)
Gui.frmMassAdd.lblRunSell4.Create(Label,"Run Sell",True,570,195,0,6675,2085,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunSell4.BorderStyle(0)
Gui.frmMassAdd.txtRunSell4.Create(TextBox,"",True,1110,300,0,6645,2340,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunSell4.NumericOnly(1)
Gui.frmMassAdd.lblRunSell5.Create(Label,"Run Sell",True,570,195,0,6645,2745,True,0,"Tahoma",8.25,,0,0)
Gui.frmMassAdd.lblRunSell5.BorderStyle(0)
Gui.frmMassAdd.txtRunSell5.Create(TextBox,"",True,1110,300,0,6660,3030,True,0,"Tahoma",8.25,,1)
Gui.frmMassAdd.txtRunSell5.NumericOnly(1)
Gui.frmMassAdd.cmdClearMass.Create(Button)
Gui.frmMassAdd.cmdClearMass.Enabled(True)
Gui.frmMassAdd.cmdClearMass.Visible(True)
Gui.frmMassAdd.cmdClearMass.Zorder(0)
Gui.frmMassAdd.cmdClearMass.Size(1125,345)
Gui.frmMassAdd.cmdClearMass.Position(10560,4740)
Gui.frmMassAdd.cmdClearMass.Caption("Clear")
Gui.frmMassAdd.cmdClearMass.FontName("Tahoma")
Gui.frmMassAdd.cmdClearMass.FontSize(8.25)
Gui.frmMassAdd.cmdClearMass.Event(Click,cmdClearMass_Click)
Gui.frmQuickRouter..Create(BaseForm)
Gui.frmQuickRouter..Caption("Quick Part Add")
Gui.frmQuickRouter..Size(15330,9900)
Gui.frmQuickRouter..MinX(0)
Gui.frmQuickRouter..MinY(0)
Gui.frmQuickRouter..Position(0,0)
Gui.frmQuickRouter..BackColor(-2147483633)
Gui.frmQuickRouter..MousePointer(0)
Gui.frmQuickRouter..Event(UnLoad,frmQuickRouter_UnLoad)
Gui.frmQuickRouter..AlwaysOnTop(False)
Gui.frmQuickRouter..FontName("Tahoma")
Gui.frmQuickRouter..FontSize(8.25)
Gui.frmQuickRouter..ControlBox(True)
Gui.frmQuickRouter..MaxButton(True)
Gui.frmQuickRouter..MinButton(True)
Gui.frmQuickRouter..Moveable(True)
Gui.frmQuickRouter..Sizeable(True)
Gui.frmQuickRouter..ShowInTaskBar(True)
Gui.frmQuickRouter..TitleBar(True)
Gui.frmQuickRouter.chkCache.Create(CheckBox)
Gui.frmQuickRouter.chkCache.Size(2835,300)
Gui.frmQuickRouter.chkCache.Position(105,15)
Gui.frmQuickRouter.chkCache.Caption("Cache Mode")
Gui.frmQuickRouter.chkCache.Event(Click,chkCache_Click)
Gui.frmQuickRouter.chkCache.Enabled(True)
Gui.frmQuickRouter.chkCache.Visible(True)
Gui.frmQuickRouter.chkCache.Zorder(0)
Gui.frmQuickRouter.chkCache.FontName("Tahoma")
Gui.frmQuickRouter.chkCache.FontSize(8.25)
Gui.frmQuickRouter.gsgcInventory.Create(GsGridControl)
Gui.frmQuickRouter.gsgcInventory.Size(15015,8925)
Gui.frmQuickRouter.gsgcInventory.Position(60,360)
Gui.frmQuickRouter.gsgcInventory.Event(RowCellClick,gsgcInventory_RowCellClick)
Gui.frmQuickRouter.gsgcInventory.Enabled(True)
Gui.frmQuickRouter.gsgcInventory.Visible(True)
Gui.frmQuickRouter.gsgcInventory.Zorder(0)
Gui.frmLaserCutter..Create(BaseForm)
Gui.frmLaserCutter..Caption("Laser Cutter Calculator")
Gui.frmLaserCutter..Size(15375,9000)
Gui.frmLaserCutter..MinX(0)
Gui.frmLaserCutter..MinY(0)
Gui.frmLaserCutter..Position(0,0)
Gui.frmLaserCutter..AlwaysOnTop(False)
Gui.frmLaserCutter..FontName("Tahoma")
Gui.frmLaserCutter..FontSize(8.25)
Gui.frmLaserCutter..ControlBox(True)
Gui.frmLaserCutter..MaxButton(True)
Gui.frmLaserCutter..MinButton(True)
Gui.frmLaserCutter..MousePointer(0)
Gui.frmLaserCutter..Moveable(True)
Gui.frmLaserCutter..Sizeable(True)
Gui.frmLaserCutter..ShowInTaskBar(True)
Gui.frmLaserCutter..TitleBar(True)
Gui.frmLaserCutter..Event(UnLoad,frmLaserCutter_UnLoad)
Gui.frmLaserCutter.ddlWorkCenterLaser.Create(DropDownList)
Gui.frmLaserCutter.ddlWorkCenterLaser.Enabled(True)
Gui.frmLaserCutter.ddlWorkCenterLaser.Visible(True)
Gui.frmLaserCutter.ddlWorkCenterLaser.Zorder(0)
Gui.frmLaserCutter.ddlWorkCenterLaser.Size(900,300)
Gui.frmLaserCutter.ddlWorkCenterLaser.Position(30,405)
Gui.frmLaserCutter.ddlWorkCenterLaser.FontName("Tahoma")
Gui.frmLaserCutter.ddlWorkCenterLaser.FontSize(8.25)
Gui.frmLaserCutter.ddlWorkCenterLaser.Event(Change,ddlWorkCenterLaser_change)
Gui.frmLaserCutter.txtCutSetupTime.Create(TextBox,"",True,600,300,0,4950,405,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.txtCutSetupTime.Event(LostFocus,txtCutSetupTime_LostFocus)
Gui.frmLaserCutter.txtCutBillRate.Create(TextBox,"",True,600,300,0,5595,405,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.txtCutBillRate.Event(LostFocus,txtCutBillRate_LostFocus)
Gui.frmLaserCutter.txtCutSetRate.Create(TextBox,"",True,600,300,0,6240,405,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.txtCutSetRate.Event(LostFocus,txtCutSetRate_LostFocus)
Gui.frmLaserCutter.txtSpeed.Create(TextBox,"",True,600,300,0,8115,375,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.ddlFeature.Create(DropDownList)
Gui.frmLaserCutter.ddlFeature.Enabled(True)
Gui.frmLaserCutter.ddlFeature.Visible(True)
Gui.frmLaserCutter.ddlFeature.Zorder(0)
Gui.frmLaserCutter.ddlFeature.Size(1290,300)
Gui.frmLaserCutter.ddlFeature.Position(8775,375)
Gui.frmLaserCutter.ddlFeature.FontName("Tahoma")
Gui.frmLaserCutter.ddlFeature.FontSize(8.25)
Gui.frmLaserCutter.ddlFeature.AddItem("Cut Time",0)
Gui.frmLaserCutter.ddlFeature.AddItem("Total Cut Length",1)
Gui.frmLaserCutter.ddlFeature.AddItem("Rectangle",2)
Gui.frmLaserCutter.ddlFeature.AddItem("Square",3)
Gui.frmLaserCutter.ddlFeature.AddItem("Circle",4)
Gui.frmLaserCutter.ddlFeature.AddItem("Pierce",5)
Gui.frmLaserCutter.ddlFeature.Event(Change,ddlFeature_Change)
Gui.frmLaserCutter.txtDiamiterMM.Create(TextBox,"",True,765,300,0,10140,375,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.txtFeatureQty.Create(TextBox,"",True,510,300,0,10935,375,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.cmdAddLaserFeature.Create(Button)
Gui.frmLaserCutter.cmdAddLaserFeature.Enabled(True)
Gui.frmLaserCutter.cmdAddLaserFeature.Visible(True)
Gui.frmLaserCutter.cmdAddLaserFeature.Zorder(0)
Gui.frmLaserCutter.cmdAddLaserFeature.Size(495,300)
Gui.frmLaserCutter.cmdAddLaserFeature.Position(13725,330)
Gui.frmLaserCutter.cmdAddLaserFeature.Caption("Add")
Gui.frmLaserCutter.cmdAddLaserFeature.FontName("Tahoma")
Gui.frmLaserCutter.cmdAddLaserFeature.FontSize(8.25)
Gui.frmLaserCutter.cmdAddLaserFeature.Event(Click,cmdAddLaserFeature_Click)
Gui.frmLaserCutter.txtEstProTimes.Create(TextBox,"",True,795,300,0,14280,345,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.gsgcLaserFeatures.Create(GsGridControl)
Gui.frmLaserCutter.gsgcLaserFeatures.Enabled(True)
Gui.frmLaserCutter.gsgcLaserFeatures.Visible(True)
Gui.frmLaserCutter.gsgcLaserFeatures.Zorder(0)
Gui.frmLaserCutter.gsgcLaserFeatures.Size(7050,3600)
Gui.frmLaserCutter.gsgcLaserFeatures.Position(8070,720)
Gui.frmLaserCutter.cmdAddLaserStep.Create(Button)
Gui.frmLaserCutter.cmdAddLaserStep.Enabled(True)
Gui.frmLaserCutter.cmdAddLaserStep.Visible(True)
Gui.frmLaserCutter.cmdAddLaserStep.Zorder(0)
Gui.frmLaserCutter.cmdAddLaserStep.Size(1395,345)
Gui.frmLaserCutter.cmdAddLaserStep.Position(8115,4395)
Gui.frmLaserCutter.cmdAddLaserStep.Caption("Add Laser Step")
Gui.frmLaserCutter.cmdAddLaserStep.FontName("Tahoma")
Gui.frmLaserCutter.cmdAddLaserStep.FontSize(8.25)
Gui.frmLaserCutter.cmdAddLaserStep.Event(Click,cmdAddLaserStep_Click)
Gui.frmLaserCutter.gsgcLaserMaterials.Create(GsGridControl)
Gui.frmLaserCutter.gsgcLaserMaterials.Enabled(True)
Gui.frmLaserCutter.gsgcLaserMaterials.Visible(True)
Gui.frmLaserCutter.gsgcLaserMaterials.Zorder(0)
Gui.frmLaserCutter.gsgcLaserMaterials.Size(14970,3600)
Gui.frmLaserCutter.gsgcLaserMaterials.Position(150,4770)
Gui.frmLaserCutter.gsgcLaserMaterials.Event(RowCellClick,gsgcLaserMaterials_RowCellClick)
Gui.frmLaserCutter.lbl1.Create(Label,"WC",True,255,195,0,75,150,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl1.BorderStyle(0)
Gui.frmLaserCutter.lbl2.Create(Label,"Setup",True,420,195,0,4980,135,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl2.BorderStyle(0)
Gui.frmLaserCutter.lbl3.Create(Label,"Bill $",True,315,195,0,5670,135,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl3.BorderStyle(0)
Gui.frmLaserCutter.lbl4.Create(Label,"Set $",True,375,195,0,6285,120,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl4.BorderStyle(0)
Gui.frmLaserCutter.lbl5.Create(Label,"Speed",True,450,195,0,8190,90,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl5.BorderStyle(0)
Gui.frmLaserCutter.lbl6.Create(Label,"Feature",True,570,195,0,8820,105,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl6.BorderStyle(0)
Gui.frmLaserCutter.lbl7.Create(Label,"Dia./Pierce",True,780,195,0,10125,105,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl7.BorderStyle(0)
Gui.frmLaserCutter.lbl8.Create(Label,"Qty",True,270,195,0,10965,105,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl8.BorderStyle(0)
Gui.frmLaserCutter.lbl9.Create(Label,"Est. Time",True,660,195,0,14325,75,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl9.BorderStyle(0)
Gui.frmLaserCutter.txtOpCode.Create(TextBox,"",True,900,300,0,990,405,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.lbl10.Create(Label,"Op Code",True,630,195,0,1035,150,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl10.BorderStyle(0)
Gui.frmLaserCutter.gsgcCuttingOpCodes.Create(GsGridControl)
Gui.frmLaserCutter.gsgcCuttingOpCodes.Enabled(True)
Gui.frmLaserCutter.gsgcCuttingOpCodes.Visible(True)
Gui.frmLaserCutter.gsgcCuttingOpCodes.Zorder(0)
Gui.frmLaserCutter.gsgcCuttingOpCodes.Size(7920,3555)
Gui.frmLaserCutter.gsgcCuttingOpCodes.Position(60,780)
Gui.frmLaserCutter.gsgcCuttingOpCodes.Event(RowCellClick,gsgcCuttingOpCodes_RowCellClick)
Gui.frmLaserCutter.txtCutLength.Create(TextBox,"",True,795,300,0,11520,375,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.txtCutWidth.Create(TextBox,"",True,750,300,0,12465,375,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.lbl11.Create(Label,"Cut Length",True,795,195,0,11550,135,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl11.BorderStyle(0)
Gui.frmLaserCutter.lbl12.Create(Label,"Cut Width",True,720,195,0,12495,135,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl12.BorderStyle(0)
Gui.frmLaserCutter.txtWCDescription.Create(TextBox,"",True,2775,300,0,1995,405,True,0,"Tahoma",8.25,,1)
Gui.frmLaserCutter.lbl13.Create(Label,"Description",True,795,195,0,2010,150,True,0,"Tahoma",8.25,,0,0)
Gui.frmLaserCutter.lbl13.BorderStyle(0)
Gui.frmNestEff..Create(DashForm)
Gui.frmNestEff..Caption("Nesting Efficiency")
Gui.frmNestEff..Size(13860,5910)
Gui.frmNestEff..MinX(0)
Gui.frmNestEff..MinY(0)
Gui.frmNestEff..Position(0,0)
Gui.frmNestEff..AlwaysOnTop(False)
Gui.frmNestEff..FontName("Tahoma")
Gui.frmNestEff..FontSize(8.25)
Gui.frmNestEff..ControlBox(True)
Gui.frmNestEff..MaxButton(True)
Gui.frmNestEff..MinButton(True)
Gui.frmNestEff..MousePointer(0)
Gui.frmNestEff..Moveable(True)
Gui.frmNestEff..Sizeable(True)
Gui.frmNestEff..ShowInTaskBar(True)
Gui.frmNestEff..TitleBar(True)
Gui.frmNestEff..Event(UnLoad,frmNestingEff_UnLoad)
Gui.frmNestEff.gsgcNestEff.Create(GsGridControl)
Gui.frmNestEff.gsgcNestEff.Enabled(True)
Gui.frmNestEff.gsgcNestEff.Visible(True)
Gui.frmNestEff.gsgcNestEff.Zorder(0)
Gui.frmNestEff.gsgcNestEff.Size(13725,4740)
Gui.frmNestEff.gsgcNestEff.Position(60,555)
Gui.frmNestEff.gsgcNestEff.Event(CellValueChanged,gsgcNestEff_cellvaluechanged)
Gui.frmNestEff.chkOmit.Create(CheckBox)
Gui.frmNestEff.chkOmit.Enabled(True)
Gui.frmNestEff.chkOmit.Visible(True)
Gui.frmNestEff.chkOmit.Zorder(0)
Gui.frmNestEff.chkOmit.Size(2400,300)
Gui.frmNestEff.chkOmit.Position(90,90)
Gui.frmNestEff.chkOmit.Caption("Omit Nesting Efficiency")
Gui.frmNestEff.chkOmit.FontName("Tahoma")
Gui.frmNestEff.chkOmit.FontSize(8.25)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.External.Include.Library("6021.lib")
Program.External.Include.Library("1500.lib")
Program.External.Include.Library("6004.lib")
Program.External.Include.Library("251000.lib")
Program.External.Include.Library("200000.lib")
Program.External.Include.Library("200800.lib")
Program.External.Include.Library("900200.lib")
v.global.fPack.Declare
v.global.sUM.Declare
v.global.sPL.Declare
v.global.sCut.Declare
V.Global.sMatUser.Declare
v.Global.sMatThickUser.Declare
v.Global.fMatMarkup.Declare
v.Global.fLabMarkup.Declare
v.Global.fOutMarkup.Declare
V.Global.fMarkup.Declare
V.Global.sUserMarkup.Declare
V.Global.sFileUpload.Declare
v.Global.bLoading.Declare
v.Global.iIncNumb.Declare
v.Global.sInc.Declare
v.Global.sCustomerPartID.Declare
V.Global.sBom.Declare
v.Global.sAutoSave.Declare
v.Global.sViewInv.Declare
v.Global.sMultiple.Declare
v.Global.sPowder.Declare
v.Global.sPowderGap.Declare
v.Global.sPowderMan.Declare
v.Global.sPowderLab.Declare
v.Global.sPowderSet.Declare
v.Global.sFreezeBom.Declare
v.Global.sPack.Declare
V.Global.sOmitSql.Declare
v.Global.sSquares.Declare
v.global.sProfitCentre.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
f.Intrinsic.Control.Try
	v.Local.sVal.Declare
	V.Local.sDir.Declare
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DRAGDROPIMAGE.png",v.Local.sDir)
	gui.FormMain.pic1.Picture(v.Local.sDir)
	
	f.ODBC.Connection!con.opencompanyconnection(90)
	f.Intrinsic.UI.SetBrowserHotTypeAhead(true)
	gui.FormMain..BarAddButton("ClearAll","Clear All")
	gui.FormMain..BarAddButton("CustInfo","Customer Info")
	gui.FormMain..BarAddButton("Calculate","Calculate")
	gui.FormMain..BarAddButton("Delete","Delete")
	
	
	gui.FormMain.txtEmpNumber.Text(v.Caller.User)
	
	f.Intrinsic.Control.CallSub(LoadDataTables) 'Creates all the temp data tables and populates them with data
	f.Intrinsic.Control.CallSub(loadInventory)
	f.Intrinsic.Control.CallSub(setProperties) ' Sets what the data tables will look like.
	f.Intrinsic.Control.If(v.Global.sViewInv.Trim,=,"1")
		f.Data.DataTable.CreateFromSQL("dtTempCustomerParts","con","SELECT CAST(0 AS BIT) AS 'SelectPart', ROUTER, DESCRIPTION_ROUTER, PROD_LINE, PART_CUSTOMER,(SELECT DISTINCT IF(PARENT<>'','Y','N') FROM BOM_MSTR WHERE PARENT=ROUTER) AS 'BOMKit', (SELECT TOP 1 PART_WC_OUTSIDE AS 'Material' FROM V_ROUTER_LINE WHERE V_ROUTER_HEADER.ROUTER=V_ROUTER_LINE.ROUTER AND (SORT_CODE='MATERIAL' OR SORT_CODE='MATERIALCUST')), DATE_LAST_ACCESSED, (SELECT IF (INVENTORY_MSTR .TIME_LAST_CHG > '000000' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,1 ,2 )<= '24' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,3 ,2 )< '60' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,5 ,2 )< '60' ,CONVERT (SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,1 ,2 )+':' +SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,3 ,2 )+':' +SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,5 ,2 ),SQL_TIME ),CONVERT ('00:00:00' ,SQL_TIME ))TIME_LAST_CHG FROM INVENTORY_MSTR WHERE INVENTORY_MSTR.PART=V_ROUTER_HEADER.ROUTER) AS 'TimeChange', (SELECT WHO_CHG_LAST AS 'USERCHANGED' FROM INVENTORY_MSTR  WHERE INVENTORY_MSTR.PART=V_ROUTER_HEADER.ROUTER), (SELECT TOP 1 CAST(RATE AS FLOAT) AS 'MaterialCost' FROM V_ROUTER_LINE WHERE V_ROUTER_HEADER.ROUTER=V_ROUTER_LINE.ROUTER AND (SORT_CODE='MATERIAL' OR SORT_CODE='MATERIALCUST'))  FROM V_ROUTER_HEADER order by DATE_LAST_ACCESSED Desc, TIME_LAST_CHG desc")
		f.Data.DataTable.Merge("dtTempCustomerParts","dtCustomerParts",false,1)
		f.Data.Datatable.Close("dtTempCustomerParts")
	f.Intrinsic.Control.EndIf
	
	
	f.Intrinsic.Control.If(v.Caller.CompanyCode,=,"SMC")
		f.Intrinsic.Control.CallSub(smcDefault)
	f.Intrinsic.Control.EndIf
'	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!SplitContainerMaster.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	f.Intrinsic.UI.Msgbox(v.Local.sVal)
'	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!splitContainerMain.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	f.Intrinsic.UI.Msgbox(v.Local.sVal)

'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!splitContainerLabour.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	f.Intrinsic.UI.Msgbox(v.Local.sVal)

'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!splitContainerSubLabourTop.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	f.Intrinsic.UI.Msgbox(v.Local.sVal)

'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!splitContainerSubLabour.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	f.Intrinsic.UI.Msgbox(v.Local.sVal)

'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!SplitContainerMainRight.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	f.Intrinsic.UI.Msgbox(v.Local.sVal)
'	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!SplitContainerBottomRight.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	f.Intrinsic.UI.Msgbox(v.Local.sVal)
	
	'f.Intrinsic.Control.CallSub(Deserialize)
	
	gui.FormMain..Visible(True)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.smcDefault.Start
f.Intrinsic.Control.Try
	gui.frmMassAdd.ddlProcess.Text("Programming CUT")
	gui.frmMassAdd.txtSequence.Text("50")
	gui.frmMassAdd.ddlProcess2.Text("Loading")
	gui.frmMassAdd.txtSequence2.Text("190")
	gui.frmMassAdd.ddlProcess3.Text("Laser Operator")
	gui.frmMassAdd.txtSequence3.text("205")
	gui.frmMassAdd.ddlProcess4.Text("Unloading")
	gui.frmMassAdd.txtSequence4.Text("210")
	gui.frmMassAdd.ddlProcess5.Text("QA & Delivery")
	gui.frmMassAdd.txtSequence5.Text("230")
	F.Intrinsic.Control.CallSub(ddlProcess_Change)
	F.Intrinsic.Control.CallSub(ddlProcess2_Change)
	F.Intrinsic.Control.CallSub(ddlProcess3_Change)
	F.Intrinsic.Control.CallSub(ddlProcess4_Change)
	F.Intrinsic.Control.CallSub(ddlProcess5_Change)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.smcDefault.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sVal.Declare
	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!SplitContainerMaster.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"SplitContainerMaster",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,v.Local.sVal)
'	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!splitContainerMain.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerMain",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,v.Local.sVal)
'		
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!splitContainerLabour.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerLabour",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,v.Local.sVal)
'	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!splitContainerSubLabourTop.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerSubLabourTop",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,v.Local.sVal)
'	
'	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!splitContainerSubLabour.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerSubLabour",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,v.LOCAL.sVal)
'	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!SplitContainerMainRight.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerMainRight",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,v.Local.sVal)
'	
'	
'	f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Screen.FormMain!SplitContainerBottomRight.splitterposition)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerBottomRight",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,v.local.sVal)
	
		
'	V.Local.sSerialize.Declare
'	v.Local.sSerialize2.Declare
'	v.Local.sSerialize3.Declare
'	v.Local.sSerialize4.Declare
'	v.Local.sSerialize5.Declare
'	
'	gui.FormQuote.gsgcMasterPriceBuildup.Serialize("gvPriceBuildupMaster",true,V.Local.sSerialize)
'	gui.FormQuote.gsgcMasterPriceBuildup.Serialize("gvMaterials",true,V.Local.sSerialize2)
'	gui.FormQuote.gsgcMasterPriceBuildup.Serialize("gvFeaturesTable",true,V.Local.sSerialize3)
'	gui.FormQuote.gsgcMasterPriceBuildup.Serialize("gvWorkSelection",true,V.Local.sSerialize4)
'	gui.FormQuote.gsgcMasterPriceBuildup.Serialize("gvCustomerParts",true,V.Local.sSerialize5)
'			
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvPriceBuildupMaster",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvMaterials",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize2)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvFeaturesTable",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize3)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvWorkSelection",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize4)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvCustomerParts",6595,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize5)
'	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
'v.Local.sVal.Declare
'F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerMaster",6595,1000,6,"",V.Local.sVal)
'F.Intrinsic.Control.If(V.Local.sVal.Trim,<>,"")
'	'f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Local.sVal)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	gui.FormMain.SplitContainerMaster.splitterPosition(v.Local.sVal)
'f.Intrinsic.Control.EndIf
'v.Local.sVal.Set("")

'F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerMain",6595,1000,6,"",V.Local.sVal)
'F.Intrinsic.Control.If(V.Local.sVal.Trim,<>,"")
'	'f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Local.sVal)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	gui.FormMain.splitContainerMain.splitterPosition(v.Local.sVal)
'f.Intrinsic.Control.EndIf
'v.Local.sVal.Set("")

'F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerLabour",6595,1000,6,"",V.Local.sVal)
'F.Intrinsic.Control.If(V.Local.sVal.Trim,<>,"")
'	'f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Local.sVal)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	gui.FormMain.splitContainerLabour.splitterPosition(v.Local.sVal)
'f.Intrinsic.Control.EndIf
'v.Local.sVal.Set("")

'F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerSubLabourTop",6595,1000,6,"",V.Local.sVal)
'F.Intrinsic.Control.If(V.Local.sVal.Trim,<>,"")
'	'f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Local.sVal)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	gui.FormMain.splitContainerSubLabourTop.splitterPosition(v.Local.sVal)
'f.Intrinsic.Control.EndIf
'v.Local.sVal.Set("")

'F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerSubLabour",6595,1000,6,"",V.Local.sVal)
'F.Intrinsic.Control.If(V.Local.sVal.Trim,<>,"")
'	gui.FormMain.splitContainerSubLabour.splitterPosition(v.Local.sVal)
'f.Intrinsic.Control.EndIf
'v.Local.sVal.Set("")


'F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerMainRight",6595,1000,6,"",V.Local.sVal)
'F.Intrinsic.Control.If(V.Local.sVal.Trim,<>,"")
'	'f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Local.sVal)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	gui.FormMain.splitContainerMainRight.splitterPosition(v.Local.sVal)
'f.Intrinsic.Control.EndIf
'v.Local.sVal.Set("")

'F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"splitContainerBottomRight",6595,1000,6,"",V.Local.sVal)
'F.Intrinsic.Control.If(V.Local.sVal.Trim,<>,"")
'	'f.Intrinsic.Control.CallSub(convertPixelstoTwips,"Pixels",v.Local.sVal)
'	f.Intrinsic.Variable.ArgToVar("rTwips",v.Local.sVal)
'	gui.FormMain.splitContainerBottomRight.splitterPosition(v.Local.sVal)
'f.Intrinsic.Control.EndIf
'v.Local.sVal.Set("")


'	V.Local.sError.Declare
'	V.Local.sSerialize.Declare
'	v.Local.sSerialize2.Declare
'	v.Local.sSerialize3.Declare
'	v.Local.sSerialize4.Declare
'	v.Local.sSerialize5.Declare
'	
'	'Delete old registry records
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvPriceBuildupMaster",6595,0,5,"",V.Local.sSerialize)
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvMaterials",6595,0,5,"",V.Local.sSerialize2)
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvFeaturesTable",6595,0,5,"",V.Local.sSerialize3)
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvWorkSelection",6595,0,5,"",V.Local.sSerialize4)
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvCustomerParts",6595,0,5,"",V.Local.sSerialize5)
'	
'	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
'		F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
'		F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 6595 And Seq < 1000;")
'		F.ODBC.Connection!common.Close
'	F.Intrinsic.Control.EndIf

'	'Read of Registry
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvPriceBuildupMaster",6595,1000,6,"",V.Local.sSerialize)
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvMaterials",6595,1000,6,"",V.Local.sSerialize2)
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvFeaturesTable",6595,1000,6,"",V.Local.sSerialize3)
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvWorkSelection",6595,1000,6,"",V.Local.sSerialize4)
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvCustomerParts",6595,1000,6,"",V.Local.sSerialize5)
'	
'	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
'		Gui.FormQuote.gsgcMasterPriceBuildup.Deserialize(V.Local.sSerialize)
'	F.Intrinsic.Control.EndIf
'	
'	F.Intrinsic.Control.If(V.Local.sSerialize2.Trim,<>,"")
'		gui.FormMain.gsgcComponents.Deserialize(V.Local.sSerialize2)
'	F.Intrinsic.Control.EndIf
'	
'	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
'		gui.FormMain.GSGCFeatures.Deserialize(V.Local.sSerialize3)
'	F.Intrinsic.Control.EndIf
'	
'	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
'		gui.FormMain.GSGCWorkSelection.Deserialize(V.Local.sSerialize4)
'	F.Intrinsic.Control.EndIf
'	
'	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
'		gui.FormMain.gsgcCustomerParts.Deserialize(V.Local.sSerialize5)
'	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.convertPixelsToTwips.Start
f.Intrinsic.Control.Try
	v.Local.iPixels.Declare
	v.Local.iPixels.Set(v.Args.Pixels)
	v.Local.iTwips.Declare
	f.Intrinsic.Math.Mult(v.Local.iPixels,15,v.Local.iTwips)
	f.Intrinsic.Variable.AddRV("rTwips",v.Local.iTwips)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.convertPixelsToTwips.End

Program.Sub.OpenSelectPartAction.Start
f.Intrinsic.Control.Try
	v.Global.bLoading.Set(true)
	v.Local.ssql.Declare
	V.Local.sRet.Declare
	v.Local.sCustID.Declare
	v.Local.sCustName.Declare
	v.Local.sPart.Declare
	v.Local.sRev.Declare
	v.Local.sPartQty.Declare
	v.Local.sQtyBreak.Declare
	v.Local.sSpecial.Declare
	v.Local.sOutMarkup.Declare
	v.Local.sCutSetup.Declare
	V.Local.sDirHold.Declare
	v.Local.sGrpName.Declare
	v.Local.sExtraText.Declare
	v.Local.sCutCode.Declare
	v.Local.sval.Declare
	V.Local.iGrpID.Declare
	v.Local.iTotalAmt.Declare
	v.Local.iLength.Declare
	v.Local.iWidth.Declare
	v.Local.iMatLength.Declare
	v.Local.iMatWidth.Declare
	v.Local.iMatThick.Declare
	V.Local.fRate.Declare
	v.Local.fRun.Declare
	V.Local.fSetup.Declare
	v.Local.fCutSetup.Declare
	v.Local.i.Declare
	v.Local.i2.Declare
	v.Local.j.Declare(long)
	v.Local.iLen.Declare
	v.Local.iLengthCalc.Declare
	v.Local.iSeq.Declare
	v.Local.fTemp1.Declare
	v.Local.ftemp2.Declare
	v.Local.fExtCost.Declare
	v.Local.fExtSell.Declare
	
	'Clear Data Tables
	f.Data.DataTable.DeleteRow("dtFeaturesTable")
	f.Data.DataTable.DeleteRow("dtWorkSelection")
	f.Data.DataTable.DeleteRow("dtMaterials")
	f.Data.DataTable.DeleteRow("dtDocuments")
	f.Intrinsic.Control.If(v.Global.sFreezeBom,=,0)
		f.Data.DataTable.DeleteRow("dtKitParts")
	f.Intrinsic.Control.EndIf
	
	'Clear material fields if populated.
	gui.FormMain.txtMaterialName.Text("")
	gui.FormMain.txtMaterialDesc.Text("")
	gui.FormMain.txtSheetCost.Text("")
	gui.FormMain.txtSheetUM.Text("")
	gui.FormMain.txtSheetMarkup.Text("")
	gui.FormMain.txtSheetMinCharge.Text("")
	gui.FormMain.txtMainPerSheet.Text("")
	gui.FormMain.txtCutPieceLength.Text("")
	gui.FormMain.txtCutPieceWidth.Text("")
	gui.FormMain.txtCutSetupTime.Text("")
	gui.FormMain.txtCutSetRate.Text("")
	gui.FormMain.txtCutBillRate.Text("")
	gui.FormMain.txtSpeed.Text("")
	gui.FormMain.txtDiamiterMM.Text("")
	gui.FormMain.txtFeatureQty.Text("")
	gui.FormMain.txtEstProTimes.Text("")
	GUI.FormMain.txtPartDescription.TEXT("")
	GUI.FormMain.txtPartDescription2.TEXT("")
	GUI.FormMain.txtPartDescription3.TEXT("")
	gui.FormMain.txtNotes.Text("")
	gui.FormMain.TXTRTRSEQCOMMENT.Text("")
	gui.FormMain.trvFile.ClearItems()
	gui.FormMain.chkCustomerSupply.Value(0)
	gui.FormMain.chkNoMaterial.Value(0)
	gui.FormMain.GsWebBrowserShowPDF.LoadURL("")
	GUI.FormMain.GsWebBrowserThumbnail.LoadURL("")
	Gui.SS_Form.txtProdLength.text("")
	Gui.SS_Form.txtProdWidth.text("")
	Gui.SS_Form.txtPowdThick.text("")
	Gui.SS_Form.txtPowdPrice.text("")
	Gui.SS_Form.txtPowdCost.text("")
	Gui.SS_Form.txtChemCost.text("")
	Gui.SS_Form.txtMarkup.text("")
	Gui.SS_Form.txtGap.text("")
	Gui.SS_Form.txtMan.text("")
	Gui.SS_Form.txtLabourRate.text("")
	Gui.SS_Form.txtSetupCost.text("")
	Gui.SS_Form.txtLineSpeed.text("")
	Gui.SS_Form.txtLabourCost.text("")
	Gui.SS_Form.txtPricePerUnit.text("")
	Gui.SS_Form.ddlColour.text("")
	Gui.SS_Form.lblNetPriceResult.caption("")
	Gui.SS_Form.lblMinChargeResult.caption("")
	Gui.SS_Form.lblID.caption("")
	Gui.SS_Form.lblGT.caption("")
	Gui.SS_Form.lblPart.caption("")
	Gui.SS_Form.lblCalcPriceResult.caption("")
	gui.frmOverride.lblOutside.Caption("")
	gui.frmOverride.lblSeq.Caption("")
	gui.FormMain.cmdPowderCalculator.backcolor(-2147483633)
	
	'Grab fixed price if it exists
	f.Intrinsic.String.Build("SELECT IFNULL(FIXED_PRICE,0) FROM GAB_6595_FIXED_PRICE WHERE PART='{0}'",V.Args.PART.Trim,v.Local.ssql)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sVal)
	f.Intrinsic.Control.If(v.Local.sval.Trim,=,"")
		v.Local.sval.Set(0)
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.sval.Trim,=,"True")
		v.Local.sval.Set(1)
	F.Intrinsic.Control.EndIf
	gui.FormMain.chkFixedPrice.Value(v.Local.sval)
	
	'Populate default part info
	f.Intrinsic.String.Left(v.args.Part,17,v.Local.sPart)
	gui.FormMain.txtPartCode.Text(v.Local.sPart)
	F.Intrinsic.String.Mid(V.Args.PART,18,V.Local.sRev)
	gui.FormMain.txtPartRevCode.Text(v.Local.sRev)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	gui.FormMain.txtPartDescription.Text(v.Args.Description)
	v.Local.sPart.Set(V.Args.Part.Trim)		
	F.Intrinsic.String.Build("SELECT LENGTH, WIDTH, DESCRIPTION_2, DESCRIPTION_3, UM_INVENTORY, PRODUCT_LINE FROM V_INVENTORY_ALL WHERE PART='{0}'",v.args.Part,v.Local.sSQL)
	f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		'Get the rest of the part master's info
		v.Local.iLength.Set(v.Local.sRet(0))
		v.Local.iWidth.Set(v.Local.sRet(1))
		gui.FormMain.txtCutPieceLength.Text(v.Local.iLength)
		gui.FormMain.txtCutPieceWidth.Text(v.Local.iWidth)
		gui.FormMain.txtPartDescription2.Text(v.Local.sret(2))
		gui.FormMain.txtPartDescription3.Text(v.Local.sret(3))
		gui.FormMain.txtPartUM.Text(v.Local.sRet(4))
		gui.FormMain.txtPartPL.Text(v.Local.sRet(5))
	f.Intrinsic.Control.EndIf
	
	'Grab comment
	f.Intrinsic.String.Build("SELECT TEXT FROM RTR_SEQ_COMMENTS WHERE RTR_NUMBER='{0}' and RTR_SEQ='000001'",v.args.Part.Trim,v.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
		gui.FormMain.TXTRTRSEQCOMMENT.Text(v.Local.sRet)
	f.Intrinsic.Control.EndIf
	
	'Grab Document Control info
	v.Local.sFullPath.Declare
	f.Intrinsic.String.Build("SELECT IFNULL(LINK_ID_INT,-1) FROM V_LINK_DATA WHERE ID='{0}' AND TYPE='00030'",v.Args.part,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sRet)
	gui.FormMain.trvFile.Visible(false)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"-1")
		F.Intrinsic.String.Build("select * from ATG_DOC_ASSOC WHERE LINK_ID='{0}'",v.Local.sRet,v.Local.ssql)
		f.Data.DataTable.CreateFromSQL("dtDocAssoc","con",v.Local.ssql)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtDocAssoc.RowCount--,1)
			f.Intrinsic.String.Concat(v.DataTable.dtDocAssoc(v.Local.i).PATH!Fieldvaltrim,"\",v.DataTable.dtDocAssoc(v.Local.i).FILE!Fieldvaltrim,v.Local.sDirHold)
			f.Intrinsic.String.Build("SELECT GRP_NAME FROM ATG_DOC_GRP WHERE GRP_ID='{0}'",v.DataTable.dtDocAssoc(v.Local.i).GRP_ID!fieldval,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sGrpName)
			f.Intrinsic.String.Concat(v.DataTable.dtDocAssoc(v.Local.i).Path!fieldvaltrim,"\",v.DataTable.dtDocAssoc(v.Local.i).File!fieldvaltrim,v.Local.sFullPath)
			F.Data.DataTable.AddRow("dtDocuments","File",v.DataTable.dtDocAssoc(v.Local.i).File!fieldvaltrim,"Path",v.DataTable.dtDocAssoc(v.Local.i).Path!fieldvaltrim,"Descr",v.DataTable.dtDocAssoc(v.Local.i).Description!fieldvaltrim,"Group",v.Local.sGrpName,"FullPath",v.Local.sFullPath)
		f.Intrinsic.Control.Next(v.Local.i)
	F.Intrinsic.Control.EndIf
	gui.FormMain.trvFile.Visible(true)
	
	'Populate header info.
	f.Intrinsic.String.Build("SELECT CUSTOMER FROM V_ROUTER_HEADER WHERE ROUTER='{0}'",v.Local.sPart.Trim,v.Local.sSQL)
	F.ODBC.Connection!CON.EXECUTEANDRETURN(V.Local.sSQL,v.Local.sCustID)
	gui.FormMain.txtClientCode.Text(v.Local.sCustID.Trim)
	f.Intrinsic.String.Build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER='{0}'",v.Local.sCustID.Trim,v.Local.sSQL)
	F.ODBC.Connection!CON.EXECUTEANDRETURN(V.Local.sSQL,v.Local.sCustName)
	gui.FormMain.txtClientName.Text(v.Local.sCustName.Trim)
	f.Intrinsic.Control.CallSub(ConcatQuantityBuild,"Part",v.Local.sPart)
	F.Intrinsic.Variable.ArgToVar("rQtyBreak",v.Local.sQtyBreak)
	gui.FormMain.txtQuantityBrake.Text(v.Local.sQtyBreak)
	'WHEW!
	'Populate additional description
	f.Intrinsic.String.Build("SELECT DESC_ROUTER_1, DESC_ROUTER_2, DESC_ROUTER_3 FROM V_ROUTER_DESC WHERE ROUTER='{0}'",v.Local.sPart.Trim,v.Local.sSQL)
	F.ODBC.Connection!CON.EXECUTEANDRETURN(V.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	gui.FormUpdatePartsText.txtAddDesc1.Text(v.Local.sRet(0))
	gui.FormUpdatePartsText.txtAddDesc2.Text(v.Local.sRet(1))
	gui.FormUpdatePartsText.txtAddDesc3.Text(v.Local.sRet(2))
	
	'Powder Coating results
	f.Intrinsic.Control.If(v.Global.sPowder,=,"1")
		f.Intrinsic.String.Build("SELECT * FROM GAB_6595_POWDER WHERE PART='{0}'",v.Local.sPart.Trim,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sRet)
		f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
			f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
			gui.ss_form.ddlColour.Text(v.Local.sRet(1))
			gui.ss_form.txtProdLength.text(v.Local.sRet(2))
			gui.ss_form.txtProdWidth.text(v.Local.sRet(3))
			gui.ss_form.txtPowdThick.text(v.Local.sRet(4))
			gui.ss_form.txtPowdPrice.text(v.Local.sRet(5))
			gui.ss_form.txtPowdCost.text(v.Local.sRet(6))
			gui.ss_form.txtChemCost.text(v.Local.sRet(7))
			gui.ss_form.lblCalcPriceResult.caption(v.Local.sRet(8))
			gui.ss_form.txtPricePerUnit.text(v.Local.sRet(9))
			gui.ss_form.txtMarkup.text(v.Local.sRet(10))
			gui.ss_form.txtGap.text(v.Local.sRet(11))
			gui.ss_form.txtMan.text(v.Local.sRet(12))
			gui.ss_form.txtLabourRate.text(v.Local.sRet(13))
			gui.ss_form.txtSetupCost.text(v.Local.sRet(14))
			gui.ss_form.txtLineSpeed.text(v.Local.sRet(15))
			gui.ss_form.txtLabourCost.text(v.Local.sRet(16))
			gui.ss_form.lblNetPriceResult.caption(v.Local.sRet(17))
			gui.ss_form.lblMinChargeResult.caption(v.Local.sRet(18))
			f.Intrinsic.control.if(v.Local.sRet(20),=,"","or",v.Local.sRet(19),=,"0")
				gui.ss_form.chkWaiveMin.value(0)
			f.Intrinsic.control.else
				gui.ss_form.chkWaiveMin.value(1)
			f.Intrinsic.control.endif
			gui.FormMain.cmdPowderCalculator.backcolor(v.Color.ltgreen)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'Check if this is a BOM
	F.Intrinsic.String.Build("SELECT rtrim(BOM_MSTR.PART) as 'Part', BOM_MSTR.QUANTITY, BOM_MSTR.PARENT, BOM_MSTR.SEQUENCE_BOM, rtrim(BOM_ENG.DESCRIPTION) as 'Description', BOM_MSTR.Source FROM BOM_MSTR left join BOM_ENG ON BOM_ENG.PART=BOM_MSTR.PART WHERE PARENT='{0}' and BOM_MSTR.part<>'' AND CATEGORY=''",v.Local.sPart.Trim,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
		v.Global.sBom.Set("Y")
		'This is a BOM
		f.Intrinsic.Control.If(v.DataTable.dtBOMKit.Exists)
			f.Data.DataTable.Close("dtBOMKit")
		f.Intrinsic.Control.EndIf
		
		f.Data.DataTable.CreateFromSQL("dtBOMKit","con",v.Local.ssql,true)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtBOMKit.RowCount--,1)
			f.Intrinsic.Control.If(v.DataTable.dtBOMKit(v.Local.i).Source!fieldvaltrim,=,"M","or",v.DataTable.dtBOMKit(v.Local.i).Source!fieldvaltrim,=,"F")
				f.Data.DataTable.AddRow("dtKitParts","Part",v.DataTable.dtBOMKit(v.Local.i).PART!FieldvalTrim,"Parent",v.DataTable.dtBOMKit(v.Local.i).Parent!FieldvalTrim,"Qty",v.DataTable.dtBOMKit(v.Local.i).QUANTITY!Fieldval,"Seq",v.DataTable.dtBOMKit(v.Local.i).SEQUENCE_BOM!Fieldvaltrim,"DESC",v.DataTable.dtBOMKit(v.Local.i).description!Fieldvaltrim,"SOURCE",v.DataTable.dtBOMKit(v.Local.i).Source!Fieldvaltrim)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
		gui.FormMain.cmdTopParent.Caption(v.Local.sPart.Trim)
	f.Intrinsic.Control.Else
		v.Global.sBom.Set("N")
	f.Intrinsic.Control.EndIf
	
	'Pull in all lines from the router
	F.Intrinsic.Control.If(V.DataTable.dt.Exists)
		F.Data.DataTable.Close("dt")
	F.Intrinsic.Control.EndIf
		
	'f.Intrinsic.String.Build("SELECT * FROM ROUTER_LINE WHERE ROUTER='{0}' and (LMO='M' OR LMO='L' OR LMO='O') AND LINE_ROUTER>'000000' ORDER BY LINE_ROUTER ",v.Local.sPart.Trim,v.Local.sSQL)
	F.Intrinsic.String.BUILD("SELECT A.*, B.POST_FLOAT FROM ROUTER_LINE A LEFT JOIN SCHED_ROUTER_SUPP B ON A.ROUTER=B.RT_NUMBER AND A.LINE_ROUTER = B.RT_LINE WHERE ROUTER='{0}' AND (LMO='M' OR LMO='L' OR LMO='O') AND LINE_ROUTER>'000000' ORDER BY LINE_ROUTER",v.Local.sPart.Trim,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("dt","con",v.Local.sSQL)
	
	'Populate material code & total parts nested on this sheet.  Material is always 100
	F.Intrinsic.String.Build("SELECT *  FROM GAB_6595_MEMO_MAT WHERE PART='{0}'",v.Local.sPart.Trim,v.Local.sSQL)
	f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"")
		gui.FormMain.chkNoMaterial.Value(1)
		f.Intrinsic.Control.CallSub(disableMaterialFields)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		GUI.FormMain.txtMainPerSheet.Text(V.Local.sRet(1))
		gui.FormMain.txtSheetMarkup.Text(v.Local.sRet(2))
		gui.FormMain.txtSheetMinCharge.Text(v.Local.sRet(3))
		gui.FormMain.txtVendQuoteNote.Text(V.Local.sRet(5))
		v.Local.sSpecial.Set(v.Local.sRet(4))
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Local.sSpecial.Trim,<>,"NOMATERIAL","AND",v.Local.sSpecial.Trim,<>,"")
		F.Data.DataTable.Select("dt","LINE_ROUTER='000100'",V.Local.sRet)
		f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"***NORETURN***")
			gui.FormMain.txtMaterialName.Text(v.DataTable.dt(V.Local.sRet).PART_WC_OUTSIDE!FIELDVALTRIM)
			gui.FormMain.txtSheetCost.Text(v.DataTable.dt(V.Local.sRet).RATE!Fieldval)
			gui.FormMain.txtSheetUM.Text(v.DataTable.dt(V.Local.sRet).UM_INVENTORY!FIELDVALTRIM)
			gui.FormMain.txtMaterialDesc.Text(v.DataTable.dt(V.Local.sRet).DESC_RT_LINE!FIELDVALTRIM)
			
			'Bring in the material length, width, thickness, desc. next
			F.Intrinsic.String.Build("SELECT LENGTH, WIDTH, THICKNESS FROM V_INVENTORY_ALL WHERE PART='{0}'",v.Screen.FormMain!txtMaterialName.text,v.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
			f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
			v.Local.iMatLength.Set(v.Local.sRet(0))
			v.Local.iMatWidth.Set(v.Local.sRet(1))
			v.Local.iMatThick.Set(v.Local.sRet(2))
			gui.FormMain.txtMainLength.Text(v.Local.iMatLength)
			gui.FormMain.txtMainWidth.Text(v.Local.iMatWidth)
			gui.FormMain.txtMainMM.Text(v.Local.iMatThick)
			GUI.FormMain.txtFullSheetLength.Text(v.Local.iMatLength)
			gui.FormMain.txtFullSheetWidth.Text(v.Local.iMatWidth)
			gui.FormMain.txtMainSpace.Text(3)
			gui.FormMain.txtFullSheetBord.Text(3)
			gui.FormMain.txtMainBord.Text(10)
			gui.FormMain.txtCutPieceSpacing.Text(10)
			F.Intrinsic.String.Build("SELECT USER1, USER2 FROM GAB_4912_USER_FIELDS WHERE PART='{0}'",v.Screen.FormMain!txtMaterialName.text,v.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
			F.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
			gui.FormMain.txtMainPierce.Text(v.Local.sRet(0))
			gui.FormMain.txtSpeed.Text(v.Local.sRet(1))
			
			'Get Vendor Quotes
			gui.FormMain.ddlVendQuote.ClearItems
			f.Intrinsic.string.build("select TOP 10 MFG_NAME, MFG_PART_NO, QUOTE_DATE, PUR_UM, UNIT_PRICE from V_VEND_QTE_HEADER LEFT JOIN V_VEND_QTE_LINES ON V_VEND_QTE_HEADER.PART = V_VEND_QTE_LINES.PART AND V_VEND_QTE_HEADER.SEQ = V_VEND_QTE_LINES.SEQ WHERE V_VEND_QTE_HEADER.PART='{0}' ORDER BY QUOTE_DATE DESC",v.Screen.FormMain!txtMaterialName.text,V.Local.ssql)
			f.Intrinsic.Control.If(v.DataTable.dtVendQuoteTemp.Exists)
				f.Data.DataTable.Close("dtVendQuoteTemp")
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.CreateFromSQL("dtVendQuoteTemp","con",v.Local.sSQL)
			
			f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtVendQuoteTemp.RowCount--,1)
				V.Local.sval.set("{0} --- {1} --- {2} --- {3} --- {4}")
				f.Intrinsic.string.build(V.Local.sval,v.DataTable.dtVendQuoteTemp(v.Local.j).MFG_NAME!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.j).MFG_PART_NO!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.j).QUOTE_DATE!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.j).PUR_UM!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.j).UNIT_PRICE!fieldval,V.Local.sval)
				GUI.FormMain.ddlVendQuote.AddItem(v.Local.sval)
			f.Intrinsic.Control.Next(v.Local.j)
			
			f.Intrinsic.UI.SleepMS(1)
		
		f.Intrinsic.Control.Else
			f.Intrinsic.UI.Msgbox("Material reference not found.")
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.EndIf

	'Add in the labour lines, workcentres for laser and additional processes
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dt.RowCount--,1)
		'Set Code
		v.Local.sCutCode.Set(v.DataTable.dt(v.Local.i).SORT_CODE!fieldvaltrim)
		
		'Secondary labour, like programming / folding / welding
		F.Intrinsic.Control.If(V.DataTable.dt(V.Local.i).LMO!FieldValTrim,=,"L")
		f.Intrinsic.Control.AndIf(V.Local.sCutCode.UCase,<>,"CUTTING")
			F.Intrinsic.Math.Mult(v.DataTable.dt(v.Local.i).RUN_TIME!FIELDVAL,60,v.Local.fRun)
			F.Intrinsic.Math.Mult(v.DataTable.dt(v.Local.i).SET_UP!FIELDVAL,60,v.Local.fSetup)
			v.Local.fRate.Set(v.DataTable.dt(v.Local.i).RATE!Fieldval)
			f.Intrinsic.Math.ConvertToLong(v.DataTable.dt(v.Local.i).LINE_ROUTER!Fieldval,v.Local.iSeq)
			f.Intrinsic.String.Build("SELECT SETUP, SETUP_RATE, PROCESS, PROCESS_RATE, UM, TIME_UNIT, P, SUBCONTRACT, VENDOR, LMO, OPERATION, DURATION FROM GAB_6595_STEPS WHERE PART='{0}' AND WC='{1}' and P='{2}'",v.Local.sPart.Trim,v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,v.Local.iSeq,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sRet)
			f.Intrinsic.String.Build("SELECT TEXT FROM RTR_SEQ_COMMENTS WHERE RTR_NUMBER='{0}' AND RTR_SEQ='{1}'",v.Local.sPart.Trim,v.DataTable.dt(v.Local.i).LINE_ROUTER!FIELDVALTRIM,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sExtraText)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"")
				f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
				f.Intrinsic.Control.If(v.DataTable.dt(v.Local.i).OPERATION!FIELDVALTRIM,<>,"")
				F.Intrinsic.Control.AndIf(V.DataTable.dt(v.Local.i).OPERATION!Fieldvaltrim,<>,"FLUSH")
					f.Intrinsic.String.Build("OPCODE='{0}'",v.DataTable.dt(v.Local.i).OPERATION!FIELDVALTRIM,v.Local.ssql)
					F.Data.DataTable.Select("dtSteps",v.Local.ssql,v.Local.sRet)
				f.Intrinsic.Control.Else
					v.Local.sRet.Set("***NORETURN***")
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***NORETURN***")
					V.Local.fRate.Set(V.DataTable.dtSteps(v.Local.sRet).DEFAULT_RUN_RATE!FIELDVAL)
					f.Data.DataTable.AddRow("dtWorkSelection","CostRate",V.DataTable.dt(v.Local.i).RATE!Fieldval,"PostFloat",v.DataTable.dt(v.Local.i).POST_FLOAT!FIeldval, "Omit",v.DataTable.dt(v.Local.i).OMIT_FROM_WO!FIELDVALTRIM,"WC",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,"WCBase",v.DataTable.dt(v.Local.i).DESC_RT_LINE!FIELDVALTRIM,"Setup",V.Local.fSetup,"SetupRate",v.Local.fRate,"Process",V.Local.fRun,"ProcessRate",v.Local.fRate,"UM","EA","T","M","P",v.DataTable.dt(v.Local.i).line_router!fieldvaltrim,"S",0,"Vend",v.DataTable.dt(v.Local.i).OPERATION!FIELDVALTRIM,"LMO","L","Operation","","Duration","","ExtraDesc",v.Local.sExtraText)					
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("select ifnull(STANDARD_BILL,0) FROM V_WORKCENTERS WHERE MACHINE='{0}'",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,v.Local.ssql)
					f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.fRate)
					f.Data.DataTable.AddRow("dtWorkSelection","CostRate",V.DataTable.dt(v.Local.i).RATE!Fieldval,"PostFloat",v.DataTable.dt(v.Local.i).POST_FLOAT!FIeldval, "Omit",v.DataTable.dt(v.Local.i).OMIT_FROM_WO!FIELDVALTRIM,"WC",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,"WCBase",v.DataTable.dt(v.Local.i).DESC_RT_LINE!FIELDVALTRIM,"Setup",V.Local.fSetup,"SetupRate",v.Local.fRate,"Process",V.Local.fRun,"ProcessRate",v.Local.fRate,"UM","EA","T","M","P",v.DataTable.dt(v.Local.i).line_router!fieldvaltrim,"S",0,"Vend",v.DataTable.dt(v.Local.i).OPERATION!FIELDVALTRIM,"LMO","L","Operation","","Duration","","ExtraDesc",v.Local.sExtraText)	
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
				f.Data.DataTable.AddRow("dtWorkSelection","CostRate",V.DataTable.dt(v.Local.i).RATE!Fieldval,"PostFloat",v.DataTable.dt(v.Local.i).POST_FLOAT!FIeldval, "Omit",v.DataTable.dt(v.Local.i).OMIT_FROM_WO!FIELDVALTRIM,"WC",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,"WCBase",v.DataTable.dt(v.Local.i).DESC_RT_LINE!FIELDVALTRIM,"Setup",v.Local.sRet(0),"SetupRate",v.Local.sRet(1),"Process",v.Local.sRet(2),"ProcessRate",v.Local.sRet(3),"UM",v.Local.sRet(4),"T",v.Local.sREt(5),"P",v.Local.sRet(6),"S",v.Local.sRet(7),"Vend",v.Local.sRet(8),"LMO",v.Local.sRet(9),"Operation",v.Local.sRet(10),"Duration",v.Local.sRet(11),"ExtraDesc",v.Local.sExtraText)
			F.Intrinsic.Control.EndIf
			
		'Laser labour
		F.Intrinsic.Control.ElseIf(v.Local.sCutCode.UCase,=,"CUTTING")
		f.Intrinsic.Control.AndIf(v.DataTable.dt(v.Local.i).LMO!Fieldvaltrim,=,"L")
			gui.FormMain.ddlWorkCenterLaser.Text(v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!FieldValtrim)
			f.Intrinsic.String.Build("SELECT * FROM GAB_6595_MEMO_CUT WHERE PART='{0}'",v.Local.sPart.Trim,v.local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
			f.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
				F.Intrinsic.Math.Mult(v.DataTable.dt(v.Local.i).RUN_TIME!FIELDVAL,60,v.Local.fRun)
				f.Intrinsic.Math.Mult(v.Local.fRun,60,v.Local.fRun)
				f.Intrinsic.Math.Mult(v.Local.iLength,4,v.Local.iLengthCalc)
				F.Intrinsic.Math.Mult(v.DataTable.dt(v.Local.i).SET_UP!FIELDVAL,60,v.Local.fSetup)
				F.Intrinsic.String.Build("SELECT STANDARD_BILL FROM WORKCENTERS WHERE MACHINE='{0}'",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,v.Local.ssql)
				f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sRet)
				GUI.FormMain.txtCutBillRate.Text(V.Local.sRet)
				GUI.FormMain.txtCutSetRate.Text(V.Local.sRet)
				GUI.FormMain.txtCutSetupTime.Text(V.Local.fSetup)
				F.Data.DataTable.AddRow("dtFeaturesTable","PostFloat",v.DataTable.dt(v.Local.i).POST_FLOAT!Fieldval,"Feature","Cut Time","Qty",1,"Dim1",v.Local.iLength,"Dim2",v.Local.iWidth,"Pierce",v.Screen.FormMain!txtMainPierce.text,"Speed",v.Screen.FormMain!txtSpeed.text,"Time",v.Local.fRun,"Length",v.Local.iLengthCalc)
			f.Intrinsic.Control.Else
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				GUI.FormMain.txtCutBillRate.Text(V.Local.sRet(1))
				GUI.FormMain.txtCutSetRate.Text(V.Local.sRet(2))
				f.Intrinsic.String.split(v.Local.sRet(11),"#$#",V.Local.sCutSetup)
				gui.FormMain.txtCutSetupTime.Text(v.Local.sCutSetup(0))
				f.Intrinsic.Control.If(v.DataTable.dtTempFeat.Exists)
					f.Data.DataTable.Close("dtTempFeat")
				f.Intrinsic.Control.EndIf
				f.Data.DataTable.CreateFromSQL("dtTempFeat","con",v.Local.ssql)
				f.Intrinsic.Control.For(v.Local.i2,0,v.DataTable.dtTempFeat.RowCount--,1)
					F.Data.DataTable.AddRow("dtFeaturesTable","PostFloat",v.DataTable.dt(v.Local.i).POST_FLOAT!Fieldval,"Feature",v.DataTable.dtTempFeat(v.Local.i2).Feature!fieldvaltrim,"Qty",v.DataTable.dtTempFeat(v.Local.i2).Feature_qty!fieldval,"Dim1",v.DataTable.dtTempFeat(v.Local.i2).len!fieldval,"Dim2",v.DataTable.dtTempFeat(v.Local.i2).wid!fieldval,"Pierce",v.DataTable.dtTempFeat(v.Local.i2).diameter_pierce!fieldval,"Speed",v.DataTable.dtTempFeat(v.Local.i2).speed!fieldval,"Length",v.DataTable.dtTempFeat(v.Local.i2).len_calc!fieldval,"Time",v.DataTable.dtTempFeat(v.Local.i2).est_time!fieldval)
				f.Intrinsic.Control.Next(v.local.i2)
			f.Intrinsic.Control.EndIf
		'This is a component
		f.Intrinsic.Control.ElseIf(V.DataTable.dt(V.Local.i).LMO!FieldValTrim,=,"M")
		f.Intrinsic.Control.AndIf(v.DataTable.dt(v.Local.i).SORT_CODE!FIELDVALTRIM,<>,"MATERIAL")
		f.Intrinsic.Control.AndIf(v.DataTable.dt(v.Local.i).SORT_CODE!FIELDVALTRIM,<>,"NOMATERIAL")
		f.Intrinsic.Control.AndIf(v.DataTable.dt(v.Local.i).SORT_CODE!FIELDVALTRIM,<>,"MATERIALCUST")
			f.Intrinsic.String.Build("SELECT * FROM GAB_6595_MEMO_COMP WHERE PART='{0}' AND COMP_CODE='{1}'",v.Local.sPart.Trim,v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,v.local.sSQL)
			F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sRet)
			
			f.Intrinsic.String.Build("SELECT TEXT FROM RTR_SEQ_COMMENTS WHERE RTR_NUMBER='{0}' AND RTR_SEQ='{1}'",v.Local.sPart.Trim,v.DataTable.dt(v.Local.i).LINE_ROUTER!FIELDVALTRIM,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sExtraText)
			
			f.Intrinsic.Math.Mult(v.DataTable.dt(v.Local.i).RUN_TIME!FIELDVAL,v.DataTable.dt(v.Local.i).RATE!FIELDVAL,v.Local.fTemp1)
			f.Intrinsic.Math.Mult(v.DataTable.dt(v.Local.i).SET_UP!FIELDVAL,v.DataTable.dt(v.Local.i).RATE!FIELDVAL,v.Local.ftemp2)
			f.Intrinsic.Math.Add(v.Local.fTemp1,v.Local.ftemp2,v.Local.fExtCost)
			v.Local.fTemp1.Set(0)
			v.Local.ftemp2.Set(0)
				
			F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"")			
				f.Intrinsic.Math.Mult(v.Global.fMatMarkup,.01,v.Local.fTemp1)
				f.Intrinsic.Math.Mult(v.Local.fExtCost,v.Local.fTemp1,v.Local.ftemp2)
				f.Intrinsic.Math.Add(v.Local.ftemp2,v.Local.fExtCost,v.Local.fExtSell)
				f.Data.DataTable.AddRow("dtMaterials","SortCode",v.DataTable.dt(v.Local.i).SORT_CODE!Fieldvaltrim,"Omit",v.DataTable.dt(v.Local.i).OMIT_FROM_WO!FIELDVALTRIM,"Code",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,"Descr",v.DataTable.dt(v.Local.i).DESC_RT_LINE!FIELDVALTRIM,"UM",v.DataTable.dt(v.Local.i).UM_INVENTORY!FIELDVALTRIM,"QTY",v.DataTable.dt(v.Local.i).RUN_TIME!FIELDVAL,"SetQty",v.DataTable.dt(v.Local.i).SET_UP!Fieldval,"UNITCOST",v.DataTable.dt(v.Local.i).RATE!FIELDVAL,"MARKUP",V.Global.fMatMarkup,"Notes",v.Local.sExtraText,"ExtSell",V.Local.fExtSell,"EXTcOST",V.Local.fExtCost)
			F.Intrinsic.Control.Else				
				F.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
				f.Intrinsic.Math.Mult(v.Local.sRet(1),.01,v.Local.fTemp1)
				f.Intrinsic.Math.Mult(v.Local.fExtCost,v.Local.fTemp1,v.Local.ftemp2)
				f.Intrinsic.Math.Add(v.Local.ftemp2,v.Local.fExtCost,v.Local.fExtSell)
				f.Data.DataTable.AddRow("dtMaterials","SortCode",v.DataTable.dt(v.Local.i).SORT_CODE!Fieldvaltrim,"Omit",v.DataTable.dt(v.Local.i).OMIT_FROM_WO!FIELDVALTRIM,"Code",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,"Descr",v.DataTable.dt(v.Local.i).DESC_RT_LINE!FIELDVALTRIM,"UM",v.DataTable.dt(v.Local.i).UM_INVENTORY!FIELDVALTRIM,"QTY",v.DataTable.dt(v.Local.i).RUN_TIME!FIELDVAL,"SetQty",v.DataTable.dt(v.Local.i).SET_UP!Fieldval,"UNITCOST",v.DataTable.dt(v.Local.i).RATE!FIELDVAL,"MARKUP",v.Local.sRet(1),"Notes",v.Local.sExtraText,"ExtSell",V.Local.fExtSell,"EXTcOST",V.Local.fExtCost)
			F.Intrinsic.Control.EndIf
			
			f.Intrinsic.String.Build("SELECT USER1, USER2 FROM GAB_4912_USER_FIELDS WHERE PART='{0}'",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.String.split(v.Local.sret,"*!*",v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
				f.Data.DataTable.AddRow("dtLaserMaterials","Code",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,"Descr",v.DataTable.dt(v.Local.i).DESC_RT_LINE!FIELDVALTRIM,"Pierce",v.Local.sret(0),"Speed",v.Local.sret(1))
			f.Intrinsic.Control.EndIf
			
		'This is an outside process
		f.Intrinsic.Control.ElseIf(v.DataTable.dt(v.Local.i).LMO!fieldvaltrim,=,"O")
			f.Intrinsic.Math.ConvertToLong(v.DataTable.dt(v.Local.i).LINE_ROUTER!Fieldval,v.Local.iSeq)
			f.Intrinsic.String.Build("SELECT TEXT FROM RTR_SEQ_COMMENTS WHERE RTR_NUMBER='{0}' AND RTR_SEQ='{1}'",v.Local.sPart.Trim,v.DataTable.dt(v.Local.i).LINE_ROUTER!FIELDVALTRIM,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sExtraText)
			f.Intrinsic.String.Build("SELECT SETUP, SETUP_RATE, PROCESS, PROCESS_RATE, UM, TIME_UNIT, P, SUBCONTRACT, VENDOR, LMO, OPERATION, DURATION FROM GAB_6595_STEPS WHERE PART='{0}' AND WC='{1}' AND P='{2}'",v.Local.sPart.Trim,v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,v.Local.iSeq,v.local.sSQL)
			F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sRet)
			f.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
				f.Intrinsic.String.Concat("1.",v.Global.fOutMarkup,v.Local.sOutMarkup)
				f.Data.DataTable.AddRow("dtWorkSelection","ExtraDesc",v.Local.sExtraText,"L",v.DataTable.dt(v.Local.i).LEAD_TIME!FIELDVAL,"Omit",v.DataTable.dt(v.Local.i).OMIT_FROM_WO!FIELDVALTRIM,"CostRate",v.DataTable.dt(v.Local.i).RATE!Fieldvaltrim,"WC",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,"WCBase",v.DataTable.dt(v.Local.i).DESC_RT_LINE!FIELDVALTRIM,"Setup",v.DataTable.dt(v.Local.i).SET_UP!FIELDVAL,"SetupRate",v.DataTable.dt(v.Local.i).AMT_MINIMUM!FIELDVAL,"Process",v.DataTable.dt(v.Local.i).RUN_TIME!FIELDVAL,"ProcessRate",V.local.sOutMarkup,"UM",v.DataTable.dt(v.Local.i).UM_INVENTORY!FIELDVALTRIM,"T","","P",0,"Vend",v.DataTable.dt(v.Local.i).OPERATION!FIELDVAL,"LMO","O","Operation","","Duration","")		
			f.Intrinsic.Control.Else
				F.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
				f.Data.DataTable.AddRow("dtWorkSelection","ExtraDesc",v.Local.sExtraText,"L",v.DataTable.dt(v.Local.i).LEAD_TIME!FIELDVAL,"Omit",v.DataTable.dt(v.Local.i).OMIT_FROM_WO!FIELDVALTRIM,"CostRate",v.DataTable.dt(v.Local.i).RATE!Fieldvaltrim,"WC",v.DataTable.dt(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,"WCBase",v.DataTable.dt(v.Local.i).DESC_RT_LINE!FIELDVALTRIM,"Setup",v.Local.sRet(0),"SetupRate",v.Local.sRet(1),"Process",v.Local.sRet(2),"ProcessRate",v.Local.sRet(3),"UM",v.Local.sRet(4),"T",v.Local.sREt(5),"P",v.Local.sRet(6),"Vend",v.Local.sRet(8),"LMO",v.Local.sRet(9),"Operation",v.Local.sRet(10),"Duration",v.Local.sRet(11))		
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Set value / disable controls at end to avoid calculating too soon
	f.Intrinsic.Control.If(v.Local.sSpecial.Trim,=,"NOMATERIAL")
		gui.FormMain.chkNoMaterial.Value(1)
		f.Intrinsic.Control.CallSub(disableMaterialFields)
	f.Intrinsic.Control.ElseIf(v.Local.sSpecial.Trim,=,"MATERIALCUST")
		gui.FormMain.chkCustomerSupply.Value(1)
		f.Intrinsic.Control.CallSub(enableMaterialFields)
	f.Intrinsic.Control.ElseIf(v.Local.sSpecial.Trim,=,"MATERIAL")
		gui.FormMain.chkCustomerSupply.Value(0)
		f.Intrinsic.Control.CallSub(enableMaterialFields)
	f.Intrinsic.Control.Else
		gui.FormMain.chkNoMaterial.Value(1)
		gui.FormMain.chkCustomerSupply.value(0)
		f.Intrinsic.Control.CallSub(disableMaterialFields)
	f.Intrinsic.Control.EndIf
	
	f.Data.DataTable.DeleteRow("dtPriceBuildupPart")
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
	v.Global.bLoading.Set(False)
		
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.OpenSelectPartAction.End

Program.Sub.CalculatePrice.Start
f.Intrinsic.Control.Try
	
		'''start here, work on labour hours next'''
	v.Local.sret.Declare
	v.Local.sRet2.Declare
	v.Local.ssql.Declare
	v.Local.fSellEA.Declare
	v.Local.fLabPrice.Declare
	
	v.Local.sMaterialUser.Declare
	f.Intrinsic.String.Concat("USER",v.Global.sMatUser,v.Local.sMaterialUser)
	v.Local.sDescMat.Declare
	v.Local.sMaterialThickUser.Declare
	f.Intrinsic.String.Concat("USER",v.Global.sMatThickUser,v.Local.sMaterialThickUser)
	v.Local.iMatThick.Declare
	
	v.Local.sPartNumber.Declare
	v.Local.sPartNumber.Set(v.Args.Part)
	
	v.Local.sPartDescription.Declare
	v.Local.sPartDescription.Set(v.Args.Description)
	v.Local.sSwitch.Declare
	v.Local.sSwitch.Set(v.Args.Switch)
	v.Local.fRunLaser.Declare
	v.Local.fRunLab.Declare
	v.Local.fMatCost.Declare
	v.Local.fPartsPerSheet.Declare
	v.Local.fPartsPerSheetCalc.Declare
	v.Local.fRunMat.Declare
	v.Local.fSum.Declare
	v.Local.fTotalSellPriceEA.Declare
	v.Local.iSeq.Declare
	v.Local.iSeq.Set(200)
	v.Local.i.Declare
	v.Local.iCompSeq.Declare
	v.Local.iCompSeq.Set(50)
	v.Local.sCompSeq.Declare
	v.Local.sProcess.Declare
	v.Local.sSeq.Declare
	v.Local.sColName.Declare
	v.Local.sSpecial.Declare
	v.Local.sqty.Declare
	v.Local.sTimeUnit.Declare
	v.Local.sTempMarkup.Declare
	v.Local.fQty.Declare
	v.Local.iWork.Declare
	v.Local.iComp.Declare
		
	f.Intrinsic.Control.CallSub(getRouterLineData,"Part",v.Args.Part,"Description",v.Args.Description,"Switch",v.Args.Switch)
	
	F.Intrinsic.Control.If(V.Args.QtyOverride.Trim,=,"","or",v.Args.qtyoverride.Trim,=,"BOM")
		f.Intrinsic.Variable.ArgToVar("rQtyBreak",v.Local.sqty)
		f.Intrinsic.Control.If(v.Args.QuickAdd,<>,"")
			v.Local.sqty.Set(v.Args.QuickAdd)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		v.Local.sqty.Set(v.Args.QtyOverride)
	F.Intrinsic.Control.EndIf
	
	
	
	'check if the part is a bom at this point
	f.Intrinsic.String.SplitCSV(v.Local.sQty,v.Local.sQty)
	
	f.Intrinsic.Control.If(v.Local.sqty.Trim,<>,"")	
		'Begin Price Buildup Table Creation
		f.Intrinsic.Control.If(v.DataTable.dtPriceBuildup.Exists)
			f.Data.DataTable.Close("dtPriceBuildup")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.Create("dtPriceBuildup")
		f.Data.DataTable.AddColumn("dtPriceBuildup","PartNumber","String")
		f.Data.DataTable.AddColumn("dtPriceBuildup","PartDescription","String")
		f.Data.DataTable.AddColumn("dtPriceBuildup","Qty",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","SellPriceEA",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatName",String)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatPPS",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatMinChg",String)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatRunQty",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatCostPerSheet",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatMarkup",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatSellPerPart",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatQtyToOrder",String)
		f.Data.DataTable.AddColumn("dtPriceBuildup","LabHoursUnit",Float)
		f.Data.DataTable.AddExpressionColumn("dtPriceBuildup","LabHoursExt","Float","Qty*LabHoursUnit")
		f.Data.DataTable.AddColumn("dtPriceBuildup","User1",String)
		f.Data.DataTable.AddColumn("dtPriceBuildup","User2",String)
		f.Intrinsic.Control.If(v.Screen.FormMain!chkFixedPrice.value,=,"1")
			f.Data.DataTable.AddColumn("dtPriceBuildup","User3",String,"Y")
		f.Intrinsic.Control.Else
			f.Data.DataTable.AddColumn("dtPriceBuildup","User3",String)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Global.sUserMarkup,=,"1")
			f.Intrinsic.String.Concat("1.",v.Global.fMatMarkup,v.Local.sTempMarkup)
			f.Data.DataTable.AddColumn("dtPriceBuildup","User4",String,v.local.sTempMarkup)
			f.Intrinsic.String.Concat("1.",v.Global.fOutMarkup,v.Local.sTempMarkup)
			f.Data.DataTable.AddColumn("dtPriceBuildup","User5",String,v.local.sTempMarkup)
		f.Intrinsic.Control.Else
			f.Data.DataTable.AddColumn("dtPriceBuildup","User4",String)
			f.Data.DataTable.AddColumn("dtPriceBuildup","User5",String)
		f.Intrinsic.Control.EndIf

		'Materials / Components
		'''''start here
		'''''NEED TO ADD IN COST CALCULATION FOR SETUP
		v.Local.sLeftMaterial.Declare
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtRouterLineData.RowCount--,1)
			f.Intrinsic.String.Left(V.DataTable.dtRouterLineData(V.Local.I).Tag!fieldvaltrim,8,v.Local.sLeftMaterial)
			F.Intrinsic.Control.If(v.Local.sLeftMaterial.UCase,<>,"MATERIAL","and",v.DataTable.dtRouterLineData(v.Local.i).LMO!Fieldvaltrim,=,"M")
				f.Intrinsic.String.Concat("CompCol",v.Local.iComp,v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"string")
				
				f.Intrinsic.String.Concat("CompCol",v.Local.iComp,"Qty",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat("CompCol",v.Local.iComp,"Cost",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat("CompCol",v.Local.iComp,"Markup",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat("CompCol",v.Local.iComp,"Price",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				f.Intrinsic.Math.Add(v.Local.iComp,1,v.Local.iComp)
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
		v.Local.iComp.Set(0)
		
		'Laser
		f.Data.DataTable.AddColumn("dtPriceBuildup","LasrTime",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","LasrPrice",Float)
		
		'Add in all secondary Labour / Outside
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtRouterLineData.RowCount--,1)
			F.Intrinsic.Control.If(V.DataTable.dtRouterLineData(V.Local.I).Tag!fieldvaltrim,<>,"Cutting","and",v.DataTable.dtRouterLineData(v.Local.i).LMO!Fieldvaltrim,=,"L")
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"Setup",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"SetupRate",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"SetupSell",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"Run",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"RunRate",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"RunSell",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"TotalSell",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				
				f.Intrinsic.Math.Add(v.Local.iWork,1,v.Local.iWork)
			f.Intrinsic.Control.ElseIf(v.DataTable.dtRouterLineData(v.Local.i).LMO!Fieldvaltrim,=,"O")	
			
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"Cost",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")	
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"Markup",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")	
				f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!Fieldvaltrim,V.Local.iWork,"Sell",v.Local.sColName)
				f.Data.DataTable.AddColumn("dtPriceBuildup",v.Local.sColName,"float")
				f.Intrinsic.Math.Add(v.Local.iWork,1,v.Local.iWork)
				
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
		v.Local.iWork.Set(0)
		f.Data.DataTable.AddColumn("dtPriceBuildup","MatPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","LabPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","SubPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","LastPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","LabMarkup",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildup","SubCont",Float)
		
		''''''''''''''''''''''''''''''''''
		'This is where all the math starts
		''''''''''''''''''''''''''''''''''
		v.Local.j.Declare(long)
		v.Local.sMinCharge.Declare
		v.Local.sFirstCharCheck.Declare
		v.Local.sProper.Declare
		v.Local.fMatCostPerPart.Declare
		v.Local.fMatSellPrice.Declare
		v.Local.fMatRun.Declare
		v.Local.fMatRunMinCharge.Declare
		v.Local.fMatTotal.Declare
		v.Local.fCompCostExt.Declare
		V.Local.fCompCostSetup.Declare
		v.Local.fCompCostSetupSell.Declare
		v.Local.fCompSellPrice.Declare
		v.Local.fCompMarkup.Declare
		v.Local.fLasTime.Declare
		v.Local.fLasrBill.Declare
		v.Local.fLasrRunRate.Declare
		v.Local.fLasrSetRate.Declare
		v.Local.fLasSetTime.Declare
		v.Local.fLasrSetSell.Declare
		v.Local.fLasrSell.Declare
		v.Local.fSet.Declare
		v.Local.fRun.Declare
		v.Local.fTot.Declare
		v.Local.fBill.Declare
		v.Local.fSell.Declare
		v.Local.fSetSell.Declare
		v.Local.fSetRate.Declare
		v.Local.fRunRate.Declare
		v.Local.fRunSell.Declare
		v.Local.fOutCost.Declare
		v.Local.fOutMinCharge.Declare
		v.Local.fOutSell.Declare
		v.Local.fOutTotSell.Declare
		v.Local.fOutQty.Declare
		v.Local.fOutUnitCost.Declare
		v.Local.fMatMarkup.Declare
		v.Local.fOutMarkup.Declare
		v.Local.fOutExtCost.Declare
		v.Local.iOutSeqTemp.Declare
		v.Local.fTotalHours.Declare
			
		'Loop through all quantities
		f.Intrinsic.Control.For(v.local.i,0,v.Local.sqty.UBound,1)
			v.Local.fQty.Set(v.Local.sqty(v.Local.i))

			f.Data.DataTable.AddRow("dtPriceBuildup","PartNumber",v.Local.sPartNumber,"PartDescription",v.Local.sPartDescription,"Qty",v.Local.fQty)

			f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtRouterLineData.RowCount--,1)
			
				f.Intrinsic.Control.SelectCase(v.DataTable.dtRouterLineData(v.Local.j).LMO!Fieldvaltrim)
					f.Intrinsic.Control.Case("M")
						f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.j).Tag!Fieldvaltrim,=,"MATERIAL","or",v.DataTable.dtRouterLineData(v.Local.j).Tag!Fieldvaltrim,=,"MATERIALCUST",v.DataTable.dtRouterLineData(v.Local.j).Tag!Fieldvaltrim,=,"NOMATERIAL")
							f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.j).PPS!Fieldval,<>,0)
								f.Intrinsic.Control.If(v.Global.sSquares,=,"1")
									v.Local.fMatRun.Set(v.DataTable.dtRouterLineData(v.Local.j).PPS!fieldval)
								f.Intrinsic.Control.Else
									f.Intrinsic.Math.Div(1,v.DataTable.dtRouterLineData(v.Local.j).PPS!Fieldval,v.Local.fMatRun)
								f.Intrinsic.Control.EndIf
								
								'If None, calculate no cost
								f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.j).Tag!fieldvaltrim,=,"NOMATERIAL")
									v.Local.fMatRun.Set(0)
									V.Local.fMatMarkup.Set(0)
									v.Local.fMatSellPrice.Set(0)
								F.Intrinsic.Control.Else
									'Caculate Material Cost
									f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.j).RATE!Fieldval,=,0,"or",v.DataTable.dtRouterLineData(v.Local.j).PPS!Fieldval,=,0)
										v.Local.fMatCostPerPart.Set(0)
									f.Intrinsic.Control.Else
										f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.j).MinCharge!fieldvaltrim,<>,"")
											'Patch to help with end user experience in case they enter /nn
											f.Intrinsic.String.Left(v.DataTable.dtRouterLineData(v.Local.j).MinCharge!fieldvaltrim,1,v.Local.sFirstCharCheck)
											f.Intrinsic.Control.If(v.Local.sFirstCharCheck,=,"/")
												f.Intrinsic.String.Concat("1",v.DataTable.dtRouterLineData(v.Local.j).MinCharge!fieldvaltrim,v.Local.sProper)
												f.Data.DataTable.SetValue("dtRouterLineData",v.Local.j,"MinCharge",v.Local.sproper)
											f.Intrinsic.Control.EndIf
											
											f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.j).MinCharge!fieldvaltrim,=,"1/")
												f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.j).MinCharge!fieldvaltrim,v.DataTable.dtRouterLineData(v.Local.j).PPS!Fieldval,v.Local.sMinCharge)
												f.Intrinsic.Math.Evaluate(v.Local.sMinCharge,v.Local.fMatRunMinCharge)
											f.Intrinsic.Control.Else
												f.Intrinsic.Math.Evaluate(v.DataTable.dtRouterLineData(v.Local.j).MinCharge!fieldvaltrim,v.Local.fMatRunMinCharge)
											f.Intrinsic.Control.EndIf
											
											F.Intrinsic.Math.Mult(V.Local.fMatRunMinCharge,v.DataTable.dtRouterLineData(v.Local.j).RATE!Fieldval,V.Local.fMatCostPerPart)
										F.Intrinsic.Control.Else
											f.Intrinsic.Math.Mult(v.DataTable.dtRouterLineData(v.Local.j).RATE!Fieldval,v.DataTable.dtRouterLineData(v.Local.j).PPS!Fieldval,v.Local.fMatCostPerPart)
										f.Intrinsic.Control.EndIf
										
									f.Intrinsic.Control.EndIf
									
									'Calc Sell Price
									f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.local.j).TAG!fieldvaltrim,=,"MATERIALCUST")
										v.Local.fMatSellPrice.Set(0)
									f.Intrinsic.Control.else
										f.Intrinsic.String.Concat("1.",v.DataTable.dtRouterLineData(v.Local.j).Markup!fieldval,v.Local.fMatMarkup)
										f.Intrinsic.Math.Mult(v.Local.fMatCostPerPart,v.Local.fMatMarkup,v.Local.fMatSellPrice)
										f.Intrinsic.Math.Round(v.Local.fMatSellPrice,2,v.Local.fMatSellPrice)
										f.Intrinsic.Math.Add(v.Local.fSellEA,v.Local.fMatSellPrice,v.Local.fSellEA)
										f.Intrinsic.Math.Add(v.Local.fMatTotal,v.Local.fMatSellPrice,v.Local.fMatTotal)
									
									f.Intrinsic.Control.EndIf
								f.Intrinsic.Control.EndIf
								
								'Add Description of material and thickness to user fields
								f.Intrinsic.Control.If(v.Local.sMaterialUser.Trim,<>,"USER")
									f.Intrinsic.String.Build("SELECT DESCRIPTION FROM INVENTORY_MSTR WHERE PART='{0}'",v.DataTable.dtRouterLineData(v.local.j).PART_WC_OUTSIDE!Fieldvaltrim,v.Local.ssql)
									f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sDescMat)
									F.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sMaterialUser,v.Local.sDescMat)
								f.Intrinsic.Control.EndIf
								f.Intrinsic.Control.If(v.Local.sMaterialThickUser.Trim,<>,"USER")
									f.Intrinsic.String.Build("SELECT THICKNESS FROM INVENTORY_MST3 WHERE PART='{0}'",v.DataTable.dtRouterLineData(v.local.j).PART_WC_OUTSIDE!Fieldvaltrim,v.Local.ssql)
									f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.iMatThick)
									F.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sMaterialThickUser,v.Local.iMatThick)
								f.Intrinsic.Control.EndIf
								
								f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,"MatName",v.DataTable.dtRouterLineData(v.local.j).PART_WC_OUTSIDE!Fieldvaltrim,"MatPPS",v.DataTable.dtRouterLineData(v.Local.j).PPS!Fieldval,"MatMinChg",v.DataTable.dtRouterLineData(v.Local.j).MinCharge!fieldval,"MatRunQty",v.Local.fMatRun,"MatCostPerSheet",v.DataTable.dtRouterLineData(v.Local.j).RATE!Fieldval,"MatMarkup",v.Local.fMatMarkup,"MatSellPerPart",v.Local.fMatSellPrice)
							f.Intrinsic.Control.EndIf
						
						F.Intrinsic.Control.Else
						
							'Caculate Comp Cost and sell price	
							'Calculate the setup price
							f.Intrinsic.Math.Mult(v.DataTable.dtRouterLineData(v.Local.j).SET_UP!Fieldval,v.DataTable.dtRouterLineData(v.Local.j).RATE!Fieldval,v.Local.fCompCostSetup)
							f.Intrinsic.Control.If(v.Local.fCompCostSetup,<>,0)
								f.Intrinsic.Math.Div(v.Local.fCompCostSetup,v.Local.fQty,v.Local.fCompCostSetup)
							f.Intrinsic.Control.Else
								v.Local.fCompCostSetup.Set(0)
							f.Intrinsic.Control.EndIf
							
							'Calculate the run price
							F.Intrinsic.Math.Mult(V.DataTable.dtRouterLineData(V.Local.J).run_time!fieldval,v.DataTable.dtRouterLineData(v.Local.j).RATE!Fieldval,v.Local.fCompCostExt)
							f.Intrinsic.String.Concat("1.",v.DataTable.dtRouterLineData(v.Local.j).Markup!fieldval,v.Local.fcompmarkup)
							f.Intrinsic.Math.Mult(v.Local.fCompCostExt,v.Local.fCompMarkup,v.Local.fCompSellPrice)
							f.Intrinsic.Math.Mult(v.Local.fCompCostSetup,v.Local.fCompMarkup,v.Local.fCompCostSetupSell)
							
							'Add together
							f.Intrinsic.Math.Add(v.Local.fCompSellPrice,v.Local.fCompCostSetupSell,v.Local.fCompSellPrice)
							f.Intrinsic.Math.Round(v.Local.fCompSellPrice,2,v.Local.fCompSellPrice)
							f.Intrinsic.Math.Add(v.Local.fSellEA,v.Local.fCompSellPrice,v.Local.fSellEA)
							f.Intrinsic.Math.Add(v.Local.fMatTotal,v.Local.fCompSellPrice,v.Local.fMatTotal)
							
							f.Intrinsic.String.Concat("CompCol",v.Local.iComp,v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,V.Local.sColName,v.DataTable.dtRouterLineData(v.local.j).PART_WC_OUTSIDE!Fieldvaltrim)
							f.Intrinsic.String.Concat("CompCol",v.Local.iComp,"Qty",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,V.Local.sColName,V.DataTable.dtRouterLineData(V.Local.J).run_time!fieldval)
							f.Intrinsic.String.Concat("CompCol",v.Local.iComp,"Cost",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,V.Local.sColName,V.DataTable.dtRouterLineData(V.Local.J).RATE!fieldval)
							f.Intrinsic.String.Concat("CompCol",v.Local.iComp,"Markup",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,V.Local.sColName,V.DataTable.dtRouterLineData(V.Local.J).Markup!fieldval)
							f.Intrinsic.String.Concat("CompCol",v.Local.iComp,"Price",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,V.Local.sColName,v.Local.fCompSellPrice)
							f.Intrinsic.Math.Add(v.Local.iComp,1,v.Local.iComp)
						f.Intrinsic.Control.EndIf
						F.Intrinsic.Control.If(V.Local.sSwitch,=,"M")
							f.Data.DataTable.AddRow("dtMaterialTakeoff","FGPart",v.Local.sPartNumber,"FGPartDesc",v.Local.sPartDescription,"FGQty",v.Local.fQty,"Material",v.DataTable.dtRouterLineData(v.local.j).PART_WC_OUTSIDE!Fieldvaltrim,"MaterialRunQty",V.DataTable.dtRouterLineData(V.Local.J).run_time!fieldval,"MaterialSetQty",v.DataTable.dtRouterLineData(v.Local.j).SET_UP!Fieldval)
						F.Intrinsic.Control.EndIf
						
					f.Intrinsic.Control.Case("L")
						
						f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.j).TAG!Fieldvaltrim,=,"Cutting")

							
							'Next is laser, this is always in seconds
							v.Local.fLasTime.Set(v.DataTable.dtRouterLineData(v.Local.j).RUN_TIME!Fieldval)
							v.Local.fLasSetTime.Set(v.DataTable.dtRouterLineData(v.Local.j).SET_UP!fieldval)
							v.Local.fLasrRunRate.Set(v.DataTable.dtRouterLineData(v.Local.j).ProcessRate!fieldval)
							v.Local.fLasrSetRate.Set(v.DataTable.dtRouterLineData(v.Local.j).SetupRate!fieldval)
							f.Intrinsic.Control.If(v.Local.fLasSetTime,<>,0)
								f.Intrinsic.Math.Div(v.Local.fLasSetTime,v.Local.fQty,v.Local.fLasSetTime)
								f.Intrinsic.Math.Div(v.Local.fLasSetTime,60,v.Local.fLasSetTime)
							f.Intrinsic.Control.EndIf
							f.Intrinsic.Math.Mult(v.Local.fLasSetTime,v.Local.fLasrSetRate,v.Local.fLasrSetSell)
							
							'Calculate Sell Price
							f.Intrinsic.Math.Mult(v.Local.fLasTime,v.Local.fLasrRunRate,v.Local.fLasrSell)
							f.Intrinsic.Math.Add(v.Local.fLasrSell,v.Local.fLasrSetSell,v.Local.fLasrSell)
							f.Intrinsic.Math.Round(v.Local.fLasrSell,2,v.Local.fLasrSell)
							f.Intrinsic.Math.Add(v.Local.fLabPrice,v.Local.fLasrSell,v.Local.fLabPrice)
							f.Intrinsic.Math.Add(v.Local.fSellEA,v.Local.fLasrSell,v.Local.fSellEA)
							
							f.Intrinsic.Math.Add(v.Local.fTotalHours,v.local.fLasTime,v.Local.fTotalHours)
							f.Intrinsic.Math.Mult(v.Local.fLasTime,60,v.Local.fLasTime)
							f.Intrinsic.Math.Mult(v.Local.fLasTime,60,v.Local.fLasTime)
							f.Intrinsic.Math.Round(v.Local.fLasTime,2,v.Local.fLasTime)
							
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,"LasrTime",v.Local.fLasTime)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,"LasrPrice",v.Local.fLasrSell)
							
						f.Intrinsic.Control.Else
						
							'Regular Labour		
							'This should always be in hours
							
							
							'Setup Sell Price
							v.Local.fSet.Set(v.DataTable.dtRouterLineData(v.Local.j).Set_up!fieldval)
							v.Local.fSetRate.Set(v.DataTable.dtRouterLineData(v.Local.j).SetupRate!fieldval)
							f.Intrinsic.Control.If(v.Local.fSet,<>,0)
								f.Intrinsic.Math.Div(v.Local.fSet,v.Local.fQty,v.Local.fSet)
								f.Intrinsic.Math.Div(v.Local.fSet,60,v.Local.fset)
								f.Intrinsic.Math.Add(v.Local.fTotalHours,v.Local.fSet,v.Local.fTotalHours)
							f.Intrinsic.Control.EndIf
							f.Intrinsic.Math.Mult(v.Local.fSet,v.Local.fSetRate,v.Local.fSetSell)
							
							'Run Sell Price
							v.Local.sTimeUnit.Set(v.DataTable.dtRouterLineData(v.Local.j).TimeUnit!fieldval)
							v.Local.fRun.Set(v.DataTable.dtRouterLineData(v.Local.j).RUN_TIME!fieldval)
							f.Intrinsic.Control.If(v.Local.sTimeUnit,<>,"H")
								f.Intrinsic.Control.CallSub(convertToHours,"MyTime",v.Local.fRun,"TimeUnit",v.Local.sTimeUnit)
							f.Intrinsic.Control.EndIf
							f.Intrinsic.Variable.ArgToVar("rRunTime",v.Local.fRun)
							f.Intrinsic.Math.Add(v.Local.fTotalHours,v.Local.fRun,v.Local.fTotalHours)
							
							v.Local.fRunrate.Set(v.DataTable.dtRouterLineData(v.Local.j).ProcessRate!fieldval)
							f.Intrinsic.Control.If(v.Local.fRun,<>,0)
								f.Intrinsic.Math.Mult(v.Local.fRun,v.Local.fRunRate,v.Local.fRunSell)
							F.Intrinsic.Control.Else
								v.Local.fRunSell.set(0)
							f.Intrinsic.Control.EndIf
							
							f.Intrinsic.math.Mult(v.Local.fSetSell,v.Local.fRunSell,v.Local.fSell)
							
							f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.j).PART_WC_OUTSIDE!fieldvaltrim,v.Local.iWork,"Setup",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sColName,v.Local.fSet)
							f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.j).PART_WC_OUTSIDE!fieldvaltrim,v.Local.iWork,"SetupRate",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sColName,v.Local.fSetRate)
							f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.j).PART_WC_OUTSIDE!fieldvaltrim,v.Local.iWork,"SetupSell",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sColName,v.Local.fSetSell)
							
							f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.j).PART_WC_OUTSIDE!fieldvaltrim,v.Local.iWork,"Run",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sColName,v.Local.fRun)
							f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.j).PART_WC_OUTSIDE!fieldvaltrim,v.Local.iWork,"RunRate",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sColName,v.Local.fRunRate)
							f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.j).PART_WC_OUTSIDE!fieldvaltrim,v.Local.iWork,"RunSell",v.Local.sColName)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sColName,v.Local.fRunSell)
							
							f.Intrinsic.String.Concat(v.DataTable.dtRouterLineData(v.Local.j).PART_WC_OUTSIDE!fieldvaltrim,v.Local.iWork,"TotalSell",v.Local.sColName)
							f.Intrinsic.Math.Add(v.Local.fRunSell,v.Local.fSetSell,v.Local.fSell)
							f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,v.Local.sColName,v.Local.fSell)
							f.Intrinsic.Math.Add(v.Local.fSellEA,v.Local.fSell,v.Local.fSellEA)
							f.Intrinsic.Math.Add(v.Local.fLabPrice,v.Local.fSell,v.Local.fLabPrice)
							f.Intrinsic.Math.Add(v.Local.iWork,1,v.Local.iWork)
							F.Intrinsic.Control.If(V.Local.sSwitch,=,"M")
								F.Intrinsic.Math.Round(V.Local.fSet,4,V.Local.fSet)
								F.Intrinsic.Math.Round(V.Local.fRun,4,V.Local.fRun)
								
								f.Data.DataTable.AddRow("dtLabourTakeoff","FGPart",v.Local.sPartNumber,"FGPartDesc",v.Local.sPartDescription,"FGQty",v.Local.fQty,"Labour",v.DataTable.dtRouterLineData(v.local.j).PART_WC_OUTSIDE!Fieldvaltrim,"LabourRunQty",v.Local.fRun,"LabourSetQty",v.Local.fSet,"LabourSetSell",v.Local.fSetRate,"LabourRunSell",v.Local.fRunRate)
							F.Intrinsic.Control.EndIf
							v.Local.fRunSell.Set(0)
							v.Local.fSetSell.Set(0)
							v.Local.fSell.Set(0)
						f.Intrinsic.Control.EndIf
						
						
					f.Intrinsic.Control.Case("O")
						V.Local.fOutQty.Set(v.DataTable.dtRouterLineData(v.Local.j).RUN_TIME!fieldval)
						v.Local.fOutCost.Set(v.DataTable.dtRouterLineData(v.Local.j).Rate!fieldval)
						v.Local.fOutMarkup.Set(v.DataTable.dtRouterLineData(v.Local.j).ProcessRate!fieldval)
						v.Local.fOutMinCharge.Set(v.DataTable.dtRouterLineData(v.Local.j).SetupRate!fieldval)
						f.Intrinsic.Math.Mult(v.Local.fOutQty,v.Local.fOutCost,v.Local.fOutUnitCost)
						f.Intrinsic.Math.Mult(v.Local.fQty,v.Local.fOutUnitCost,V.Local.fOutExtCost)						
						f.Intrinsic.math.Mult(v.Local.fOutUnitCost,v.Local.fOutMarkup,v.Local.fOutSell)
						f.Intrinsic.Control.If(v.Local.fOutExtCost,<,v.Local.fOutMinCharge)
							F.Intrinsic.Math.Mult(V.Local.fOutMinCharge,V.Local.fOutMarkup,V.Local.fOutSell)
							F.Intrinsic.Math.Div(V.Local.fOutSell,v.Local.fQty,v.Local.fOutSell)
						f.Intrinsic.Control.EndIf
						
						
						'If there is an override, use it
						f.Intrinsic.Math.ConvertToLong(v.DataTable.dtRouterLineData(v.Local.j).Seq!fieldval,v.Local.iOutSeqTemp)
						f.Intrinsic.String.Build("SELECT AMT FROM GAB_6595_OVERRIDE WHERE PART='{0}' AND QTY={1} AND SEQUENCE={2}",v.Local.sPartNumber,v.Local.fQty,v.Local.iOutSeqTemp,v.Local.ssql)
						f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
						f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
							v.Local.fOutCost.Set(v.Local.sret)
							v.Local.fOutMarkup.Set(v.DataTable.dtRouterLineData(v.Local.j).ProcessRate!fieldval)
							f.Intrinsic.math.Mult(v.Local.fOutCost,v.Local.fOutMarkup,v.Local.fOutSell)
						f.Intrinsic.Control.EndIf
						
						f.Intrinsic.Math.Add(v.Local.fSellEA,v.Local.fOutSell,v.Local.fSellEA)
						f.Intrinsic.Math.Add(v.Local.fOutTotSell,v.Local.fOutSell,v.Local.fOutTotSell)
						f.Intrinsic.Math.Add(v.Local.iWork,1,v.Local.iWork)
				f.Intrinsic.Control.EndSelect
			f.Intrinsic.Control.Next(v.Local.j)
			
			f.Intrinsic.Math.Round(v.Local.fSellEA,2,v.Local.fSellEA)
			f.Intrinsic.Math.Round(v.Local.fLabPrice,2,v.Local.fLabPrice)
			f.Intrinsic.Math.Round(v.Local.fTotalHours,2,v.Local.fTotalHours)
			f.Data.DataTable.SetValue("dtPriceBuildup",v.Local.i,"SellPriceEA",v.Local.fSellEA,"LabPrice",v.Local.fLabPrice,"MatPrice",v.Local.fMatTotal,"SubCont",v.Local.fOutTotSell,"LabHoursUnit",v.Local.fTotalHours)
			
			v.Local.fSellEA.Set(0)
			v.Local.fLabPrice.Set(0)
			v.Local.fMatTotal.Set(0)
			v.Local.fOutTotSell.Set(0)
			V.Local.fOutSell.Set(0)
			v.Local.fMatSellPrice.Set(0)
			v.Local.fLasrSell.Set(0)
			v.Local.iComp.Set(0)
			v.Local.iWork.Set(0)
			v.Local.fTotalHours.Set(0)
			
		f.Intrinsic.Control.Next(v.Local.i)
		
		v.Local.sFileSaved.Declare
		v.Local.sTimeStamp.Declare
		f.Intrinsic.String.Format(v.Ambient.Now,"YYYYMMDD HHNNSS",v.Local.sTimeStamp)
		f.Intrinsic.String.Concat(v.Caller.TempDir,"\",v.Caller.User,"_",v.Local.sTimeStamp,".csv",v.Local.sFileSaved)
		f.Data.DataTable.SaveToCSV("dtPriceBuildup",v.Local.sFileSaved,true)
		
		f.Intrinsic.Control.If(v.Local.sPartDescription.Trim,<>,"N/A")
			f.Data.DataTable.Merge("dtPriceBuildup","dtPriceBuildupMaster",false,4)
		f.Intrinsic.Control.Else
		
			'Individual Buildup
			F.Intrinsic.Control.If(v.Args.QtyOverride,=,"")
				f.Data.DataTable.DeleteRow("dtPriceBuildupPart")
				f.Data.DataTable.Merge("dtPriceBuildup","dtPriceBuildupPart",false,4)
				
			F.Intrinsic.Control.ElseIf(V.Args.QtyOverride,=,"BOM")
				f.Data.DataTable.DeleteRow("dtPriceBuildupPart")
				f.Data.DataTable.Merge("dtPriceBuildup","dtPriceBuildupPart",false,4)
			F.Intrinsic.Control.ElseIf(V.Args.QtyOverride,=,"BOM")
			f.Intrinsic.Control.AndIf(v.Args.Switch,=,"M")
				f.Data.DataTable.Merge("dtPriceBuildup","dtPriceBuildupPart",false,4)
			F.Intrinsic.Control.Else
				F.Data.DataTable.Merge("dtPriceBuildup","dtPriceBuildupBOM",false,4)
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CalculatePrice.End

Program.Sub.loadCustomerParts.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	
	f.Intrinsic.Control.If(v.Global.sViewInv.Trim,<>,"1")
		f.Data.DataTable.DeleteRow("dtCustomerParts")
		'f.Intrinsic.String.Build("SELECT TOP 50 CAST(0 AS BIT) AS 'SelectPart', ROUTER, DESCRIPTION_ROUTER, PROD_LINE, PART_CUSTOMER,(SELECT DISTINCT IF(PARENT<>'','Y','N') FROM BOM_MSTR WHERE PARENT=ROUTER AND CATEGORY='' AND PART<>'') AS 'BOMKit', (SELECT TOP 1 PART_WC_OUTSIDE AS 'Material' FROM V_ROUTER_LINE WHERE V_ROUTER_HEADER.ROUTER=V_ROUTER_LINE.ROUTER AND (SORT_CODE='MATERIAL' OR SORT_CODE='MATERIALCUST')), DATE_LAST_ACCESSED, (SELECT IF (INVENTORY_MSTR .TIME_LAST_CHG > '000000' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,1 ,2 )<= '24' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,3 ,2 )< '60' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,5 ,2 )< '60' ,CONVERT (SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,1 ,2 )+':' +SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,3 ,2 )+':' +SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,5 ,2 ),SQL_TIME ),CONVERT ('00:00:00' ,SQL_TIME ))TIME_LAST_CHG FROM INVENTORY_MSTR WHERE INVENTORY_MSTR.PART=V_ROUTER_HEADER.ROUTER AND INVENTORY_MSTR.LOCATION='') AS 'TimeChange', (SELECT WHO_CHG_LAST AS 'USERCHANGED' FROM INVENTORY_MSTR  WHERE INVENTORY_MSTR.PART=V_ROUTER_HEADER.ROUTER AND INVENTORY_MSTR.LOCATION=''), (SELECT TOP 1 CAST(RATE AS FLOAT) AS 'MaterialCost' FROM V_ROUTER_LINE WHERE V_ROUTER_HEADER.ROUTER=V_ROUTER_LINE.ROUTER AND (SORT_CODE='MATERIAL' OR SORT_CODE='MATERIALCUST'))  FROM V_ROUTER_HEADER  WHERE CUSTOMER='{0}' order by DATE_LAST_ACCESSED Desc, TIME_LAST_CHG desc",v.Args.Customer,v.Local.sSQL)
		f.Intrinsic.String.Build("SELECT TOP 200 CAST(0 AS BIT) AS 'SelectPart', V_ROUTER_HEADER.ROUTER, DESCRIPTION_ROUTER, PROD_LINE, PART_CUSTOMER,(SELECT DISTINCT IF(PARENT<>'','Y','N') FROM BOM_MSTR WHERE PARENT=ROUTER AND CATEGORY='' AND PART<>'') AS 'BOMKit', V_GAB_6595_MATERIAL.PART_WC_OUTSIDE AS 'Material', (SELECT IF (SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,1 ,2 )<= '99' AND SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,1 ,2 )>= '00' AND SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,3 ,2 )<= '12' AND SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,3 ,2 )>= '01' AND SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,5 ,2 )<= '31' AND SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,5 ,2 )>= '01' ,IF (SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,1 ,2 )< '80' ,CONVERT ('20' +SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,1 ,2 )+'-' +SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,3 ,2 )+'-' +SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,5 ,2 ),SQL_DATE ),CONVERT ('19' +SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,1 ,2 )+'-' +SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,3 ,2 )+'-' +SUBSTRING (INVENTORY_MSTR .DATE_LAST_CHG ,5 ,2 ),SQL_DATE )),CONVERT ('1900-01-01' ,SQL_DATE ))DATE_LAST_CHG FROM INVENTORY_MSTR WHERE INVENTORY_MSTR.PART=V_ROUTER_HEADER.ROUTER AND INVENTORY_MSTR.LOCATION='' ) AS 'DATE_LAST_ACCESSED', (SELECT IF (INVENTORY_MSTR .TIME_LAST_CHG > '000000' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,1 ,2 )<= '24' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,3 ,2 )< '60' AND SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,5 ,2 )< '60' ,CONVERT (SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,1 ,2 )+':' +SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,3 ,2 )+':' +SUBSTRING (INVENTORY_MSTR .TIME_LAST_CHG ,5 ,2 ),SQL_TIME ),CONVERT ('00:00:00' ,SQL_TIME ))TIME_LAST_CHG FROM INVENTORY_MSTR WHERE INVENTORY_MSTR.PART=V_ROUTER_HEADER.ROUTER AND INVENTORY_MSTR.LOCATION='') AS 'TimeChange', (SELECT WHO_CHG_LAST AS 'USERCHANGED' FROM INVENTORY_MSTR  WHERE INVENTORY_MSTR.PART=V_ROUTER_HEADER.ROUTER AND INVENTORY_MSTR.LOCATION=''), CAST (IFNULL(V_GAB_6595_MATERIAL.RATE,0) AS FLOAT) as 'MaterialCost'  FROM V_ROUTER_HEADER LEFT JOIN V_GAB_6595_MATERIAL ON V_ROUTER_HEADER.ROUTER = V_GAB_6595_MATERIAL.ROUTER WHERE CUSTOMER='{0}' order by DATE_LAST_ACCESSED Desc, TIME_LAST_CHG desC",v.Args.Customer,v.Local.sSQL)
		f.Data.DataTable.CreateFromSQL("dtTempCustomerParts","con",v.Local.sSQL)
		F.Data.DataView.Create("dtTempCustomerParts","dvTempCustomerParts",22,"","DATE_LAST_ACCESSED Desc")
		f.Data.DataView.ToDataTable("dtTempCustomerParts","dvTempCustomerParts","dtTempTempCustomerParts")
		f.Data.DataTable.Merge("dtTempTempCustomerParts","dtCustomerParts",false,1)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.loadCustomerParts.End

Program.Sub.LoadDataTables.Start
f.Intrinsic.Control.Try	
	'Check if DB Table exists
	v.Local.ssql.Declare
	v.Local.bCheck.Declare
	V.Local.I.Declare
	v.Local.sret.Declare
	v.Local.sRight.Declare
	
	'Get Sales Rep
	v.Local.sFullName.Declare
	f.Global.Security.GetFullName(v.Caller.User,v.Caller.CompanyCode,v.Local.sFullName)
	f.Intrinsic.String.build("SELECT ID FROM SALESPERSONS WHERE NAME='{0}'",v.Local.sFullName.PSQLFriendly,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
	gui.FormQuote.txtSalesRep.Text(v.Local.sret)
	
	'Default to rectangle
	gui.FormMain.optCircleCalc.Value(False)
	gui.FormMain.optRectangleCalc.Value(True)
	
	'Grab the markups from bill rate
	F.ODBC.Connection!CON.EXECUTEANDRETURN("SELECT MATERIAL_6, OUTSIDE_6, LABOR_6 FROM V_MARKUP_PCT",V.Local.sret)
	F.Intrinsic.String.Split(V.Local.sret,"*!*",V.Local.sret)
	f.Intrinsic.String.Split(v.Local.sret(0),".",v.Local.sRight)
	v.global.fMatMarkup.Set(v.Local.sRight(1))
	f.Intrinsic.String.Split(v.Local.sret(1),".",v.Local.sRight)
	v.global.fOutMarkup.Set(v.Local.sRight(1))
	f.Intrinsic.String.Split(v.Local.sret(2),".",v.Local.sRight)
	v.global.fLabmarkup.Set(v.Local.sret(2))
	
	f.ODBC.Connection!con.tableExists("GAB_6595_CUST_REF",V.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		v.Local.ssql.Set("CREATE TABLE GAB_6595_CUST_REF ( Customer CHAR(6), Prefix VARCHAR(4), Last_Number INTEGER);")
		f.ODBC.Connection!con.execute(v.Local.ssql)
		V.Local.ssql.Set("CREATE VIEW V_GAB_6595_MATERIAL AS SELECT ROUTER_LINE .router ,ROUTER_LINE .part_wc_outside ,ROUTER_LINE .rate FROM ROUTER_LINE ROUTER_LINE WHERE ROUTER_LINE .SORT_CODE = 'MATERIAL' OR ROUTER_LINE .SORT_CODE = 'MATERIALCUST'")
		F.ODBC.Connection!Con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con.tableExists("GAB_6595_MEMO_COMP",V.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		v.Local.ssql.Set("CREATE TABLE GAB_6595_MEMO_COMP ( PART VARCHAR(20), MARKUP DOUBLE, ID INTEGER, COMP_CODE VARCHAR(20),  SEQUENCE INTEGER,  PERSHEET INTEGER, MINCHARGE VARCHAR(20), SPECIAL VARCHAR(50), VENDNOTE VARCHAR(255), TYPE VARCHAR(1) );")
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con.tableExists("GAB_6595_MEMO_CUT",V.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		v.Local.ssql.Set("CREATE TABLE GAB_6595_MEMO_CUT (PART VARCHAR(20), RUN_RATE DOUBLE, SET_RATE DOUBLE, SPEED DOUBLE, FEATURE VARCHAR(20), DIAMETER_PIERCE DOUBLE, FEATURE_QTY DOUBLE, EST_TIME DOUBLE, LEN DOUBLE, WID CHAR(50), LEN_CALC CHAR(50), SET_TIME DOUBLE, SEQUENCE INTEGER   );")
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con.tableExists("GAB_6595_MEMO_MAT",V.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		v.Local.ssql.Set("CREATE TABLE GAB_6595_MEMO_MAT ( PART VARCHAR(20),PER_SHEET INTEGER,MARKUP DOUBLE,MIN_CHARGE VARCHAR(10),SPECIAL VARCHAR(20),VEND_NOTE VARCHAR(150), SEQUENCE INTEGER  )")
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!CON.TableExists("GAB_6595_STEPS",v.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		v.Local.ssql.Set("CREATE TABLE GAB_6595_STEPS  ( PART VARCHAR(20), WC VARCHAR(20), SETUP DOUBLE, SETUP_RATE DOUBLE, PROCESS DOUBLE, PROCESS_RATE DOUBLE, UM VARCHAR(2), TIME_UNIT VARCHAR(1), p INTEGER, SUBCONTRACT BIT NOT NULL, VENDOR VARCHAR(6), LMO VARCHAR(1), OPERATION VARCHAR(100), DURATION VARCHAR(100), MAT_SEQUENCE INTEGER, ID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0 );")
		f.ODBC.Connection!con.execute(v.Local.ssql)
		v.Local.ssql.Set("ALTER TABLE GAB_6595_STEPS IN DICTIONARY ADD CONSTRAINT PK_ID PRIMARY KEY  ( ID ) USING 0;")
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!CON.TableExists("GAB_6595_POWDER",v.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		v.Local.ssql.Set("CREATE TABLE GAB_6595_POWDER  ( PID IDENTITY DEFAULT '0' CONSTRAINT UK_PID UNIQUE USING 0, PART VARCHAR(20), COLOUR CHAR(30), PROD_LENGTH DOUBLE, PROD_WIDTH DOUBLE, POWD_THICK DOUBLE, POWD_PRICE DOUBLE, POWD_COST DOUBLE, CHEM_COST DOUBLE, CALC_PRICE DOUBLE, PRICE_PER_UNIT DOUBLE, MARKUP DOUBLE, GAP DOUBLE, MAN_POWER DOUBLE, LABOUR_RATE DOUBLE, SETUP_COST DOUBLE, LINE_SPEED DOUBLE, LABOUR_COST DOUBLE, NET_PRICE DOUBLE, MIN_CHARGE DOUBLE, WAIVE CHAR(1),  SEQUENCE INTEGER );")
		f.ODBC.Connection!con.execute(v.Local.ssql)
		v.Local.ssql.Set("ALTER TABLE GAB_6595_POWDER IN DICTIONARY ADD CONSTRAINT PK_PID PRIMARY KEY  ( PID ) USING 0;")
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!CON.TableExists("GAB_6595_OVERRIDE",v.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		v.Local.ssql.Set("CREATE TABLE GAB_6595_OVERRIDE  ( STEP VARCHAR(50), SEQUENCE INTEGER, QTY DOUBLE, AMT DOUBLE, PART VARCHAR(20), LMO VARCHAR(1) );")
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!CON.TableExists("GAB_6595_FIXED_PRICE",v.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		v.Local.ssql.Set("CREATE TABLE GAB_6595_FIXED_PRICE (PART VARCHAR(20),FIXED_PRICE BIT NOT NULL );")
		f.ODBC.Connection!con.Execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtAllBOMParts.Exists)
		f.Data.DataTable.DeleteRow("dtAllBOMParts")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtAllBOMParts",True)
		f.Data.DataTable.AddColumn("dtAllBOMParts","Part","string")
		f.Data.DataTable.AddColumn("dtAllBOMParts","Qty","Float")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtKitParts.Exists)
		f.Data.Datatable.DeleteRow("dtKitParts")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtKitParts",TRUE)
		f.Data.DataTable.AddColumn("dtKitParts","Qty","Float")
		f.Data.DataTable.AddColumn("dtKitParts","Part","String")
		f.Data.DataTable.AddColumn("dtKitParts","Desc","String")
		f.Data.DataTable.AddColumn("dtKitParts","Seq","String")
		f.Data.DataTable.AddColumn("dtKitParts","Parent","String")
		f.Data.DataTable.AddColumn("dtKitParts","Source","String")
		gui.FormMain.gsgcKitParts.DataSource("dtKitParts")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtFeaturesTable.Exists)
		f.Data.Datatable.DeleteRow("dtFeaturesTable")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtFeaturesTable",TRUE)
		f.Data.DataTable.AddColumn("dtFeaturesTable","Feature","String")
		f.Data.DataTable.AddColumn("dtFeaturesTable","Dim1","String")
		f.Data.DataTable.AddColumn("dtFeaturesTable","Dim2","String")
		f.Data.DataTable.AddColumn("dtFeaturesTable","Pierce","String")
		f.Data.DataTable.AddColumn("dtFeaturesTable","Qty","String")
		f.Data.DataTable.AddColumn("dtFeaturesTable","Length","String")
		f.Data.DataTable.AddColumn("dtFeaturesTable","Time","Float")
		f.Data.DataTable.AddColumn("dtFeaturesTable","Speed","String")
		f.Data.DataTable.AddColumn("dtFeaturesTable","PostFloat","Float")
		f.Data.DataTable.AddColumn("dtFeaturesTable","Sequence","String")
		gui.FormMain.GSGCFeatures.DataSource("dtFeaturesTable")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtLaserFeatures.Exists)
		f.Data.Datatable.DeleteRow("dtLaserFeatures")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtLaserFeatures",TRUE)
		f.Data.DataTable.AddColumn("dtLaserFeatures","Feature","String")
		f.Data.DataTable.AddColumn("dtLaserFeatures","Dim1","String")
		f.Data.DataTable.AddColumn("dtLaserFeatures","Dim2","String")
		f.Data.DataTable.AddColumn("dtLaserFeatures","Pierce","String")
		f.Data.DataTable.AddColumn("dtLaserFeatures","Qty","String")
		f.Data.DataTable.AddColumn("dtLaserFeatures","Length","String")
		f.Data.DataTable.AddColumn("dtLaserFeatures","Time","Float")
		f.Data.DataTable.AddColumn("dtLaserFeatures","Speed","String")
		f.Data.DataTable.AddColumn("dtLaserFeatures","PostFloat","Float")
		f.Data.DataTable.AddColumn("dtLaserFeatures","Sequence","String")
		gui.frmLaserCutter.gsgcLaserFeatures.DataSource("dtLaserFeatures")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtLaserOpCodes.Exists)
		f.Data.DataTable.DeleteRow("dtLaserOpCodes")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtLaserOpCodes",True)
		f.Data.DataTable.AddColumn("dtLaserOpCodes","Description","String")
		f.Data.DataTable.AddColumn("dtLaserOpCodes","Opcode","string")
		f.Data.DataTable.AddColumn("dtLaserOpCodes","RunRate","Float")
		f.Data.DataTable.AddColumn("dtLaserOpCodes","SetRate","Float")
		f.Data.DataTable.AddColumn("dtLaserOpCodes","SetupTime","Float")
		f.Data.DataTable.AddColumn("dtLaserOpCodes","WC","String")
		gui.frmLaserCutter.gsgcCuttingOpCodes.DataSource("dtLaserOpCodes")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtOverride.Exists)
		f.Data.DataTable.DeleteRow("dtOverride")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtOverride",true)
		f.Data.DataTable.AddColumn("dtOverride","Qty","Float")
		f.Data.DataTable.AddColumn("dtOverride","Amt","Float")
		gui.frmOverride.GsGridControl1.DataSource("dtOverride")
	f.Intrinsic.Control.EndIf
			
	f.Intrinsic.Control.If(v.DataTable.dtDocuments.Exists)
		f.Data.Datatable.DeleteRow("dtDocuments")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtDocuments",TRUE)
		f.Data.DataTable.AddColumn("dtDocuments","File","String")
		f.Data.DataTable.AddColumn("dtDocuments","Browse","String","BROWSE")
		f.Data.DataTable.AddColumn("dtDocuments","Descr","String")
		f.Data.DataTable.AddColumn("dtDocuments","Group","String")
		f.Data.DataTable.AddColumn("dtDocuments","Path","String")
		f.Data.DataTable.AddColumn("dtDocuments","FullPath","String")
		f.Data.DataTable.AddColumn("dtDocuments","OpenFile","String")
		gui.FormMain.gsgcDocControl.DataSource("dtDocuments")
	f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.If(v.DataTable.dtMaterials.Exists)
		f.Data.Datatable.DeleteRow("dtMaterials")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtMaterials",TRUE)
		f.Data.DataTable.AddColumn("dtMaterials","Code","String")
		f.Data.DataTable.AddColumn("dtMaterials","Descr","String")
		f.Data.DataTable.AddColumn("dtMaterials","Notes","String")
		f.Data.DataTable.AddColumn("dtMaterials","UM","String")
		f.Data.DataTable.AddColumn("dtMaterials","SetQty","Float")
		f.Data.DataTable.AddColumn("dtMaterials","Qty","Float")
		f.Data.DataTable.AddColumn("dtMaterials","UnitCost","Float")
		f.Data.DataTable.AddColumn("dtMaterials","ExtCost","Float")
		f.Data.DataTable.AddColumn("dtMaterials","Markup","Float")
		f.Data.DataTable.AddColumn("dtMaterials","ExtSell","Float")
		f.Data.DataTable.AddColumn("dtMaterials","Omit","String")
		f.Data.DataTable.AddColumn("dtMaterials","MinCharge","String")
		f.Data.DataTable.AddColumn("dtMaterials","Sequence","String")
		f.Data.DataTable.AddColumn("dtMaterials","Tag","String")
		f.Data.DataTable.AddColumn("dtMaterials","SortCode","String")
		gui.FormMain.gsgccomponents.DataSource("dtMaterials")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtLaserMaterials.Exists)
		f.Data.Datatable.DeleteRow("dtLaserMaterials")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtLaserMaterials",TRUE)
		f.Data.DataTable.AddColumn("dtLaserMaterials","Code","String")
		f.Data.DataTable.AddColumn("dtLaserMaterials","Descr","String")
		f.Data.DataTable.AddColumn("dtLaserMaterials","Pierce","Float")
		f.Data.DataTable.AddColumn("dtLaserMaterials","Speed","Float")
		gui.frmLaserCutter.gsgcLaserMaterials.DataSource("dtLaserMaterials")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtWorkSelection.Exists)
		f.Data.Datatable.DeleteRow("dtWorkSelection")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtWorkSelection",TRUE)
		f.Data.DataTable.AddColumn("dtWorkSelection","Wc","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","WcBase","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","ExtraDesc","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","Setup","Float")
		f.Data.DataTable.AddColumn("dtWorkSelection","SetupRate","Float")
		f.Data.DataTable.AddColumn("dtWorkSelection","Process","Float")
		f.Data.DataTable.AddColumn("dtWorkSelection","ProcessRate","Float")
		f.Data.DataTable.AddColumn("dtWorkSelection","UM","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","Operation","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","Duration","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","T","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","P","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","S","Boolean")
		f.Data.DataTable.AddColumn("dtWorkSelection","CostRate","Float")
		f.Data.DataTable.AddExpressionColumn("dtWorkSelection","ExtCost","Float","IIF(T='H',Process*CostRate + Setup*CostRate, iif(T='M',Process*CostRate/60 + Setup*CostRate/60,  IIF(T='S', Process*CostRate/60/60 + Setup*CostRate/60/60, Process*CostRate )))")
		f.Data.DataTable.AddExpressionColumn("dtWorkSelection","ExtSell","Float","IIF(T='H',Process*ProcessRate + Setup*SetupRate, iif(T='M',Process*ProcessRate/60 + Setup*SetupRate/60, IIF(T='S', Process*ProcessRate/60/60 + Setup*SetupRate/60/60, Process*CostRate*ProcessRate)))")
		f.Data.DataTable.AddColumn("dtWorkSelection","Vend","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","L","String")
		f.Data.DataTable.AddColumn("dtWorkSelection","PostFloat","Float",0)
		f.Data.DataTable.AddColumn("dtWorkSelection","LMO","String","L")
		f.Data.DataTable.AddColumn("dtWorkSelection","Omit","String","")
		f.Data.DataTable.AddColumn("dtWorkSelection","Override","String","Override")
		f.Data.DataTable.AddColumn("dtWorkSelection","MAT_Sequence","String","")
		f.Data.DataTable.AddColumn("dtWorkSelection","Up","String","^")
		f.Data.DataTable.AddColumn("dtWorkSelection","Down","String","v")
		gui.FormMain.GSGCWorkSelection.DataSource("dtWorkSelection")
	f.Intrinsic.Control.EndIf
	
	'WC = OUTSIDE CODE
	'WCBase = Description Code
	'Vend = Outside Vendor

	f.Intrinsic.Control.If(v.DataTable.dtQuickPriceBuildup.Exists)
		f.Data.DataTable.DeleteRow("dtQuickPriceBuildup")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtQuickPriceBuildup",TRUE)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","PartNumber","String")
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","PartDescription","String")
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","PL","String")
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","Qty",Float)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","SellPriceEA",Float)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","CalcSellPriceEA",Float)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","User1",String)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","User2",String)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","User3",String)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","User4",String)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","User5",String)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","BOMKIT",String)
		f.Data.DataTable.AddColumn("dtQuickPriceBuildup","Extension",Float)
		gui.FormMain.gsgcPartsAdd.DataSource("dtQuickPriceBuildup")
	f.Intrinsic.Control.EndIf

	f.Intrinsic.Control.If(v.DataTable.dtPriceBuildupMaster.Exists)
		f.Data.DataTable.DeleteRow("dtPriceBuildupMaster")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtPriceBuildupMaster",TRUE)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","SelectPart","Boolean")
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","PartNumber","String")
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","PartDescription","String")
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","Qty",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","SellPriceEA",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","MatPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","LabPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","SubCont",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","ProgTime",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","ProgPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","LasrTime",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","LasrPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","MatMarkup",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","User1",String)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","User2",String)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","User3",String)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","User4",String)
		f.Data.DataTable.AddColumn("dtPriceBuildupMaster","User5",String)
		GUI.FormQuote.gsgcMasterPriceBuildup.DataSource("dtPriceBuildupMaster")
		
		'Grab User Field Titles
		f.Data.Datatable.CreateFromSQL("dtUserHeader","con","select KEY_ID, LABEL, VALIDATE, REQUIRED from V_OE_USER_FLDS_HDR",true)
		f.Intrinsic.Control.For(v.Local.I,0,v.DataTable.dtUserHeader.RowCount--,1)
			f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).KEY_ID!Fieldvaltrim,=,"01")
				gui.FormQuote.lblUserHeader1.Caption(v.DataTable.dtUserHeader(v.Local.i).LABEL!fieldvaltrim)
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).REQUIRED!Fieldval,=,"1")
					gui.FormQuote.lbluserhead1req.Caption("1")
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).VALIDATE!Fieldval,=,"1")
					gui.FormQuote.lbluserhead1val.Caption("1")
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.ElseIf(v.DataTable.dtUserHeader(v.Local.i).KEY_ID!Fieldvaltrim,=,"02")
				gui.FormQuote.lblUserHeader2.Caption(v.DataTable.dtUserHeader(v.Local.i).LABEL!Fieldvaltrim)
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).REQUIRED!Fieldval,=,"1")
					gui.FormQuote.lbluserhead2req.Caption("1")
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).VALIDATE!Fieldval,=,"1")
					gui.FormQuote.lbluserhead2val.Caption("1")
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.ElseIf(v.DataTable.dtUserHeader(v.Local.i).KEY_ID!Fieldvaltrim,=,"03")
				gui.FormQuote.lblUserHeader3.Caption(v.DataTable.dtUserHeader(v.Local.i).LABEL!Fieldvaltrim)
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).REQUIRED!Fieldval,=,"1")
					gui.FormQuote.lbluserhead3req.Caption("1")
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).VALIDATE!Fieldval,=,"1")
					gui.FormQuote.lbluserhead3val.Caption("1")
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.ElseIf(v.DataTable.dtUserHeader(v.Local.i).KEY_ID!Fieldvaltrim,=,"04")
				gui.FormQuote.lblUserHeader4.Caption(v.DataTable.dtUserHeader(v.Local.i).LABEL!Fieldvaltrim)
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).REQUIRED!Fieldval,=,"1")
					gui.FormQuote.lbluserhead4req.Caption("1")
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).VALIDATE!Fieldval,=,"1")
					gui.FormQuote.lbluserhead4val.Caption("1")
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.ElseIf(v.DataTable.dtUserHeader(v.Local.i).KEY_ID!Fieldvaltrim,=,"05")
				gui.FormQuote.lblUserHeader5.Caption(v.DataTable.dtUserHeader(v.Local.i).LABEL!Fieldvaltrim)
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).REQUIRED!Fieldval,=,"1")
					gui.FormQuote.lbluserhead5req.Caption("1")
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtUserHeader(v.Local.i).VALIDATE!Fieldval,=,"1")
					gui.FormQuote.lbluserhead5val.Caption("1")
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Next(V.Local.I)
	f.Intrinsic.Control.EndIf
	
	
	f.Intrinsic.Control.If(v.DataTable.dtBuildupKit.Exists)
		f.Data.DataTable.DeleteRow("dtBuildupKit")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtBuildupKit",TRUE)
		f.Data.DataTable.AddColumn("dtBuildupKit","PartNumber","String")
		f.Data.DataTable.AddColumn("dtBuildupKit","Rev","String")
		f.Data.DataTable.AddColumn("dtBuildupKit","Description","String")
		f.Data.DataTable.AddColumn("dtBuildupKit","UM","String")
		f.Data.DataTable.AddColumn("dtBuildupKit","Category","String")
		f.Data.DataTable.AddColumn("dtBuildupKit","Source","String")
		f.Data.DataTable.AddColumn("dtBuildupKit","Qty",Float)
		f.Data.DataTable.AddColumn("dtBuildupKit","Parent","String")
		GUI.frmCreateKit.gsgcKit.DataSource("dtBuildupKit")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtPriceBuildupPart.Exists)
		f.Data.DataTable.DeleteRow("dtPriceBuildupPart")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtPriceBuildupPart",true)
		f.Data.DataTable.AddColumn("dtPriceBuildupPart","Qty",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupPart","SubCont",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupPart","MatPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupPart","LabPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupPart","SellPriceEA",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupPart","KitPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupPart","LabHoursUnit",Float)
		f.Data.DataTable.AddExpressionColumn("dtPriceBuildupPart","LabHoursExt",Float,"Qty*LabHoursUnit")
		gui.FormMain.gsgcPriceBuildupPart.DataSource("dtPriceBuildupPart")
		GUI.FormMain.ddlWCRunUnit.AddItem("S","0")
		GUI.FormMain.ddlWCRunUnit.AddItem("M","1")
		GUI.FormMain.ddlWCRunUnit.AddItem("H","2")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtPriceBuildupBOM.Exists)
		f.Data.DataTable.DeleteRow("dtPriceBuildupBOM")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtPriceBuildupBOM",true)
		f.Data.DataTable.AddColumn("dtPriceBuildupBOM","Part",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupBOM","Qty",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupBOM","SellPriceEA",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupBOM","MatPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupBOM","LabPrice",Float)
		f.Data.DataTable.AddColumn("dtPriceBuildupBOM","SubCont",Float)
		f.Data.DataTable.AddExpressionColumn("dtPriceBuildupBOM","Ext",float,"Qty*SellPriceEA")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtCustomerParts.Exists)
		f.Intrinsic.Control.If(v.Global.sViewInv.Trim,<>,"1")
			f.Data.DataTable.DeleteRow("dtCustomerParts")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtCustomerParts",true)
		f.Data.DataTable.AddColumn("dtCustomerParts","Router","String")
		f.Data.DataTable.AddColumn("dtCustomerParts","Description_Router","String")
		f.Data.DataTable.AddColumn("dtCustomerParts","QuickAdd","String","Quick Add")
		f.Data.DataTable.AddColumn("dtCustomerParts","Prod_line","String")
		f.Data.DataTable.AddColumn("dtCustomerParts","Part_Customer","String")
		f.Data.DataTable.AddColumn("dtCustomerParts","BOMKit","String")
		f.Data.DataTable.AddColumn("dtCustomerParts","Material","String")
		f.Data.DataTable.AddColumn("dtCustomerParts","MaterialCost","Float")
		f.Data.DataTable.AddColumn("dtCustomerParts","Date_Last_Accessed","Date")
		f.Data.DataTable.AddColumn("dtCustomerParts","timechange","String")
		f.Data.DataTable.AddColumn("dtCustomerParts","UserChanged","String")
		gui.FormMain.gsgcCustomerParts.DataSource("dtCustomerParts")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtMaterialTakeoff.Exists)
		f.Data.DataTable.DeleteRow("dtMaterialTakeoff")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtMaterialTakeoff",true)
		f.Data.DataTable.AddColumn("dtMaterialTakeoff","FGPart","String")
		f.Data.DataTable.AddColumn("dtMaterialTakeoff","FGPartDesc","String")
		f.Data.DataTable.AddColumn("dtMaterialTakeoff","Material","string")
		f.Data.DataTable.AddColumn("dtMaterialTakeoff","MaterialDesc","string")
		f.Data.DataTable.AddColumn("dtMaterialTakeoff","FGQty","Float")
		f.Data.DataTable.AddColumn("dtMaterialTakeoff","MaterialSetQty","Float")
		f.Data.DataTable.AddColumn("dtMaterialTakeoff","MaterialRunQty","Float")
		f.Data.DataTable.AddExpressionColumn("dtMaterialTakeoff","ExtQty","Float","(FGQty*MaterialRunQty)+MaterialSetQty")
		gui.FormQuote.gsgcMaterialTakeoff.DataSource("dtMaterialTakeoff")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtLabourTakeoff.Exists)
		f.Data.DataTable.DeleteRow("dtLabourTakeoff")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtLabourTakeoff",true)
		f.Data.DataTable.AddColumn("dtLabourTakeoff","FGPart","String")
		f.Data.DataTable.AddColumn("dtLabourTakeoff","FGPartDesc","String")
		f.Data.DataTable.AddColumn("dtLabourTakeoff","Labour","string")
		f.Data.DataTable.AddColumn("dtLabourTakeoff","LabourDesc","string")
		f.Data.DataTable.AddColumn("dtLabourTakeoff","FGQty","Float")
		f.Data.DataTable.AddColumn("dtLabourTakeoff","LabourSetQty","Float")
		f.Data.DataTable.AddColumn("dtLabourTakeoff","LabourRunQty","Float")
		f.Data.DataTable.AddColumn("dtLabourTakeoff","LabourSetSell","Float")
		f.Data.DataTable.AddColumn("dtLabourTakeoff","LabourRunSell","Float")
		f.Data.DataTable.AddExpressionColumn("dtLabourTakeoff","ExtQty","Float","(FGQty*LabourRunQty)+LabourSetQty")
		f.Data.DataTable.AddExpressionColumn("dtLabourTakeoff","ExtSell","Float","(FGQty*LabourRunQty*LabourRunSell)+(LabourSetQty*LabourSetSell)")
		gui.FormQuote.gsgcLabourTakeoff.DataSource("dtLabourTakeoff")
	f.Intrinsic.Control.EndIf
	
	'Check if the config file exists
	v.Local.bFileCheck.Declare
	v.Local.sFileLocat.Declare
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_CONFIG_",V.Caller.CompanyCode,".xml",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.Control.If(v.DataTable.dtConfig.Exists)
			f.Data.DataTable.Close("dtConfig")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromXML("dtConfig",v.Local.sFileLocat,true)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Config File not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if the material file exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_MAT_SORT_CODES_",V.Caller.CompanyCode,".xml",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.Control.If(v.DataTable.dtMatSortCodes.Exists)
			f.Data.DataTable.Close("dtMatSortCodes")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromXML("dtMatSortCodes",v.Local.sFileLocat,true)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Sort code material file not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if the component file exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_COMP_SORT_CODES_",V.Caller.CompanyCode,".xml",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.Control.If(v.DataTable.dtCompSortCodes.Exists)
			f.Data.DataTable.Close("dtCompSortCodes")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromXML("dtCompSortCodes",v.Local.sFileLocat,true)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Sort code component file not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if Default Packing Exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_PACK_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sPack)
		f.Intrinsic.Control.If(v.Global.sPack,<>,0)
		f.Intrinsic.Control.AndIf(v.Global.sPack,<>,"")
			f.Data.DataTable.AddRow("dtMaterials","Code","PACKING","Descr","PACKING","UM","EA","SetQty",1,"UnitCost",V.Global.sPack,"Markup",v.Global.fMatMarkup)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("File not found for packing option, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf


	'Check if Default Profit Centre
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_PROFITCENTRE_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sProfitCentre)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("File not found for profit centre option, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Global.sProfitCentre,<>,"1")
		gui.FormQuote.frame1.Visible(false)
	f.Intrinsic.Control.EndIf
	
	'Check if the workcentre file exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_STEPS_",V.Caller.CompanyCode,".xml",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.Control.If(v.DataTable.dtSteps.Exists)
			f.Data.DataTable.Close("dtSteps")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromXML("dtSteps",v.Local.sFileLocat,true)
		f.Data.DataView.Create("dtSteps","dvSteps",22,"","WC_DESCRIPTION ASC")
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Workcentre File not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	v.Local.fCostRate.Declare
	v.Local.fPostFloat.Declare
	f.Intrinsic.Control.For(v.Local.i,0,v.DataView.dtSteps!dvSteps.RowCount--,1)

		f.Intrinsic.String.Build("SELECT IFNULL(STANDARD_COST,0) FROM V_WORKCENTERS WHERE MACHINE='{0}'",v.DataView.dtSteps!dvSteps(v.Local.i).WORKCENTRE!Fieldvaltrim,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fCostRate)
		f.Intrinsic.String.Build("SELECT IFNULL(FLOAT,0) FROM V_WORKCENTERS WHERE MACHINE='{0}'",v.DataView.dtSteps!dvSteps(v.Local.i).WORKCENTRE!Fieldvaltrim,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fPostFloat)
		gui.FormMain.ddlWorkCenter.AddItem(v.DataView.dtSteps!dvSteps(v.Local.i).WC_DESCRIPTION!Fieldvaltrim)
		gui.frmMassAdd.ddlProcess.AddItem(v.DataView.dtSteps!dvSteps(v.Local.i).WC_DESCRIPTION!Fieldvaltrim)
		gui.frmMassAdd.ddlProcess2.AddItem(v.DataView.dtSteps!dvSteps(v.Local.i).WC_DESCRIPTION!Fieldvaltrim)
		gui.frmMassAdd.ddlProcess3.AddItem(v.DataView.dtSteps!dvSteps(v.Local.i).WC_DESCRIPTION!Fieldvaltrim)
		gui.frmMassAdd.ddlProcess4.AddItem(v.DataView.dtSteps!dvSteps(v.Local.i).WC_DESCRIPTION!Fieldvaltrim)
		gui.frmMassAdd.ddlProcess5.AddItem(v.DataView.dtSteps!dvSteps(v.Local.i).WC_DESCRIPTION!Fieldvaltrim)
		F.Intrinsic.Control.If(v.DataView.dtSteps!dvSteps(v.Local.i).OpCode!Fieldvaltrim,<>,"")
			F.Data.DataTable.AddRow("dtLaserOpCodes","WC",v.DataView.dtSteps!dvSteps(v.Local.i).WORKCENTRE!Fieldvaltrim, "OpCode",v.DataView.dtSteps!dvSteps(v.Local.i).OpCode!fieldvaltrim,"Description",v.DataView.dtSteps!dvSteps(v.Local.i).WC_DESCRIPTION!fieldvaltrim,"RunRate",v.DataView.dtSteps!dvSteps(v.Local.i).DEFAULT_RUN_RATE!Fieldval,"SetRate",v.DataView.dtSteps!dvSteps(v.Local.i).DEFAULT_SETUP_RATE!Fieldval,"SetupTime",v.DataView.dtSteps!dvSteps(v.Local.i).DEFAULT_SETUP_TIME!Fieldval)
		F.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.If(v.DataView.dtSteps!dvSteps(v.Local.i).WORKCENTRES_DISPLAY!Fieldval)
			f.Data.DataTable.AddRow("dtWorkSelection","PostFloat",v.Local.fPostFloat, "Vend",v.DataView.dtSteps!dvSteps(v.Local.i).OpCode!fieldvaltrim,"WC",v.DataView.dtSteps!dvSteps(v.Local.i).WORKCENTRE!Fieldvaltrim,"WCBase",v.DataView.dtSteps!dvSteps(v.Local.i).WC_DESCRIPTION!Fieldvaltrim,"Setup",v.DataView.dtSteps!dvSteps(v.Local.i).DEFAULT_SETUP_TIME!Fieldval,"SetupRate",v.DataView.dtSteps!dvSteps(v.Local.i).DEFAULT_SETUP_RATE!Fieldval,"ProcessRate",v.DataView.dtSteps!dvSteps(v.Local.i).DEFAULT_RUN_RATE!Fieldval,"UM",v.DataView.dtSteps!dvSteps(v.Local.i).COST_UNIT!Fieldval,"T",v.DataView.dtSteps!dvSteps(v.Local.i).DEFAULT_RUN_TYPE!Fieldval,"P",v.DataView.dtSteps!dvSteps(v.Local.i).WORKCENTRES_ORDER!Fieldval,"CostRate",v.Local.fCostRate)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	gui.FormMain.ddlWorkCenter.AddItem("")

	gui.frmMassAdd.ddlProcess.AddItem("")
	gui.frmMassAdd.ddlProcess2.AddItem("")
	gui.frmMassAdd.ddlProcess3.AddItem("")
	gui.frmMassAdd.ddlProcess4.AddItem("")
	gui.frmMassAdd.ddlProcess5.AddItem("")
	
	'Check Increment Option
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_INC_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sInc)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("File not found for increment option, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check Increment Number Option
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_INCNUMB_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.iIncNumb)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("File not found for increment number option, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Global.sInc,=,"1")
		F.Intrinsic.Math.Add(V.Global.iIncNumb,1,V.Global.iIncNumb)
		F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Global.iIncNumb)
		GUI.FormMain.txtClientPartNumber.Text(V.Global.iIncNumb)
		GUI.FormMain.txtPartCode.Text(V.Global.iIncNumb)
	f.Intrinsic.Control.EndIf
	
	'Check Customer Part/Part ID Disable Option
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_PARTDISABLE_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret,=,"1")
			gui.FormMain.txtClientPartNumber.Enabled(false)
		f.Intrinsic.Control.Else
			gui.FormMain.txtClientPartNumber.Enabled(true)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("File not found for part disable option, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
		
	'Check Customer Part / Part ID Label Option
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_PARTID_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sCustomerPartID)
		f.Intrinsic.Control.If(v.global.sCustomerPartID,=,"1")
			gui.FormMain.lblClientPartNo.Caption("ID#")
		f.Intrinsic.Control.Else
			gui.FormMain.lblClientPartNo.Caption("Customer Part#")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("File not found for part disable option, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if Default Squares
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_SQUARES_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Global.sSquares)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Squares not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Global.sSquares.Trim,=,"1")
		gui.FormMain.lblMainPerSheet.Caption("SM")
		GUI.FormMain.txtSheetMinCharge.Visible(false)
		gui.FormMain.lblSheetMinCharge.Visible(false) 
		gui.FormMain.txtFullSheetBordX.Visible(false)
		gui.FormMain.txtFullSheetBordY.Visible(false)
		gui.FormMain.txtFullSheetLength.Visible(false)
		gui.FormMain.txtFullSheetWidth.Visible(false)
		gui.FormMain.txtCutPieceSpacing.Visible(false)
		gui.FormMain.lblFullSheet.Visible(false)
		gui.FormMain.lblWidth.Visible(false)
		gui.FormMain.lblLength.Visible(false)
		gui.FormMain.lblSpacing.Visible(false)
		gui.FormMain.cmdPartLengthWidthSwap.Visible(false)
		gui.FormMain.optRectangleCalc.Visible(false)
		gui.FormMain.optCircleCalc.Visible(false)
	f.Intrinsic.Control.EndIf
	
	'Check if Default Material
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_MATERIAL_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Global.sMatUser)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Material User Field not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if Thickness
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_MATERIALTHICK_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Global.sMatThickUser)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Material Thickness User Field not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	'Check if Default Packing exists
'	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_ALLROUTINGS_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
'	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
'	f.Intrinsic.Control.If(v.Local.bFileCheck)
'		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Global.sAllRoutings)
'	f.Intrinsic.Control.EndIf
		

	'Check if Default PL exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_MARKUP_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Global.sUserMarkup)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default User Markup not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if Default PL exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_PL_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Global.sPL)
		gui.FormMain.txtPartPL.Text(v.Global.sPL)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default PL not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if Default UM exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_UM_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sUM)
		GUI.FormMain.txtPartUM.Text(v.Global.sUM)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default UM not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if AutoSave exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_AUTOSAVE_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sAutoSave)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Auto Save not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if Inventory View exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_VIEWINV_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sViewInv)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Inventory View not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	'Check if Powder Coating Calc exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_POWDER_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sPowder)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Powder Coating Calc setting not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Global.sPowder,=,"1")
		gui.FormMain.cmdPowderCalculator.Visible(true)
		F.Intrinsic.Control.If(v.DataTable.dtPowderTemp.Exists)
			f.Data.DataTable.Close("dtPowderTemp")
		F.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromSQL("dtPowderTemp","con","SELECT CONCAT(RTRIM(DESCRIPTION), CONCAT('-',PART)) AS DESCRIPTION FROM V_INVENTORY_MSTR WHERE CODE_SORT='POWDER' ORDER BY DESCRIPTION")
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPowderTemp.RowCount--,1)
			gui.SS_FORM.ddlColour.AddItem(v.DataTable.dtPowderTemp(v.Local.i).DESCRIPTION!FIELDVALTRIM)
		f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.EndIf
	
	'Check if Powder Coating Calc exists
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_MULTIPLE_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sMultiple)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Multiple material setting not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Global.sMultiple,=,"1")
		'Show the optoins
		gui.FormMain.optMaterial.Visible(true)
		gui.FormMain.optComponent.Visible(true)
		gui.FormMain.lblComponentMinCharge.Visible(true)
		gui.FormMain.optMaterial.Value(true)
		
		Gui.FormMain.splitContainerSubLabourTop.SplitterPosition(2500)
		
		'Move Piece Calculator info over
		Gui.FormMain.lblCutLengthWidth.Position(6200,1400)
		gui.FormMain.txtCutPieceLength.Position(6200,1600)
		gui.FormMain.txtCutPieceWidth.Position(7000,1600)
		Gui.FormMain.cmdEstimationCalculate.Position(6200,1900)
		gui.FormMain.gsgcDocControl.size(12000,2500)
		Gui.FormMain.optRectangleCalc.Position(11475,3660)
		Gui.FormMain.optCircleCalc.Position(11475,3360)
		Gui.FormMain.txtFullSheetWidth.Position(15040,3630)
		Gui.FormMain.txtFullSheetLength.Position(15775,3630)
		Gui.FormMain.txtCutPieceSpacing.Position(16450,3630)
		Gui.FormMain.lblFullSheet.Position(15640,3285)
		Gui.FormMain.cmdPartLengthWidthSwap.Position(14130,3350)
		Gui.FormMain.lblSpacing.Position(16450,3475)
		Gui.FormMain.lblLength.Position(15775,3475)
		Gui.FormMain.lblWidth.Position(15055,3475)
		gui.FormMain.txtCutPieceLength.Visible(false)
		gui.FormMain.txtCutPieceWidth.Visible(false)
		gui.FormMain.cmdEstimationCalculate.Visible(false)
		gui.FormMain.lblCutLengthWidth.Visible(false)
		
		'Primary Cutting Features
		gui.FormMain.GSGCFeatures.visible(false)
		gui.FormMain.ddlWorkCenterLaser.Visible(false)
		gui.FormMain.lblCuttingWorkcenter.Visible(false)
		gui.FormMain.txtCutSetupTime.Visible(false)
		gui.FormMain.lblCutSetupTime.Visible(false)
		gui.FormMain.txtCutSetRate.Visible(false)
		gui.FormMain.lblCutSetRate.Visible(false)
		gui.FormMain.txtCutBillRate.Visible(false)
		gui.FormMain.lblCutBillRate.Visible(false)
		gui.FormMain.txtSpeed.Visible(false)
		gui.FormMain.lblSpeed.Visible(false)
		gui.FormMain.ddlFeature.Visible(false)
		gui.FormMain.lblFeature.Visible(false)
		gui.FormMain.txtDiamiterMM.Visible(false)
		gui.FormMain.lblDiamiterMM.Visible(false)
		gui.FormMain.txtFeatureQty.Visible(false)
		gui.FormMain.lblFeatureQty.Visible(false)
		gui.FormMain.cmdAddFeature.Visible(false)
		gui.FormMain.lblEstProTimes.Visible(false)
		gui.FormMain.txtEstProTimes.Visible(false)
		gui.FormMain.txtVendQuoteNote.Visible(false)
		gui.FormMain.ddlVendQuote.Visible(false)
		
		'Material section
		gui.FormMain.txtMainMM.Visible(false)
		gui.FormMain.lblMainMM.Visible(false)
		gui.FormMain.txtMainLength.Visible(false)
		gui.FormMain.lblMainLength.Visible(false)
		gui.FormMain.txtMainWidth.Visible(false)
		gui.FormMain.lblMainWidth.Visible(false)
		gui.FormMain.txtMainBord.Visible(false)
		gui.FormMain.lblMainBord.Visible(false)
		gui.FormMain.txtMainSpace.Visible(false)
		gui.FormMain.lblMainspace.Visible(false)
		gui.FormMain.txtMainPierce.Visible(false)
		gui.FormMain.lblMainPierce.Visible(false)
		gui.FormMain.txtSheetCost.Visible(false)
		gui.FormMain.lblSheetCost.Visible(false)
		gui.FormMain.txtSheetUM.Visible(false)
		gui.FormMain.lblSheetUM.Visible(false)
		gui.FormMain.txtSheetMarkup.Visible(false)
		gui.FormMain.lblSheetMarkup.Visible(false)
		gui.FormMain.txtSheetMinCharge.Visible(false)
		gui.FormMain.lblSheetMinCharge.Visible(false)
		gui.FormMain.txtMainPerSheet.Visible(false)
		gui.FormMain.lblMainPerSheet.Visible(false)
		gui.FormMain.txtMaterialName.Visible(false)
		gui.FormMain.cmdMaterialLookupCORE.Visible(false)
		gui.FormMain.cmdQuickAddDescription.Visible(false)
		gui.FormMain.cmdBrowseMaterial.Visible(false)
		gui.formmain.txtMaterialDesc.Visible(false)
		gui.FormMain.chkCustomerSupply.Visible(false)
		gui.FormMain.chkNoMaterial.Visible(false)
		gui.formmain.lblMaterial.Visible(false)
		
		'Move the materials/component grid
'		Gui.FormMain.gsgcComponents.Size(17805,1800)
'		Gui.FormMain.gsgcComponents.Position(0,0)
		'gui.FormMain.gsgcComponents.Position(225,4000)
		'gui.FormMain.gsgcComponents.Size(18500,2800)
		gui.FormMain.gsgcComponents.Dock(5)
		gui.FormMain.SplitContainerMain.splitterPosition(30000)
		
		'Gui.FormMain.gsgcPriceBuildupPart.Size(18000,1905)
		'gui.FormMain.gsgcPriceBuildupPart.anchor(15)
		
		gui.FormMain.txtComponentCode.Position(225,3630)
		gui.FormMain.cmdBrowseComponent.Position(2275,3630)
		gui.FormMain.txtComponentDesc.Position(2825,3630)
		gui.FormMain.txtComponentUM.Position(4870,3630)
		gui.FormMain.txtComponentSetQty.Position(5400,3630)
		gui.FormMain.txtComponentQty.Position(6050,3630)
		gui.FormMain.txtComponentCost.Position(6900,3630)
		gui.FormMain.txtComponentMarkup.Position(7900,3630)
		gui.FormMain.txtComponentOmit.Position(8650,3630)
		gui.FormMain.txtComponentMin.Position(9200,3630)
		GUI.FormMain.txtComponentSortCode.Position(9200,3630)
		gui.FormMain.cmdAddComponent.Position(10500,3630)
		
		gui.FormMain.lblComponent.Position(225,3400)
		gui.FormMain.lblComponentDesc.Position(2825,3400)
		gui.FormMain.lblComponentUM.Position(4870,3400)
		gui.FormMain.lblComponentSetQty.Position(5400,3400)
		gui.FormMain.lblComponentQty.Position(6050,3400)
		gui.FormMain.lblComponentCost.Position(6900,3400)
		gui.FormMain.lblComponentMarkup.Position(7900,3400)
		gui.FormMain.lblComponentOmit.Position(8650,3400)
		gui.FormMain.lblComponentMinCharge.Position(9200,3400)
		GUI.FormMain.lblComponentMinCharge.Visible(False)
		GUI.FormMain.lblComponentCodeSort.Position(9200,3400)
		
		'Turn them off on a 2nd thought...
		gui.FormMain.txtComponentCode.visible(false)
		gui.FormMain.cmdBrowseComponent.visible(false)
		gui.FormMain.txtComponentDesc.visible(false)
		gui.FormMain.txtComponentUM.visible(false)
		gui.FormMain.txtComponentSetQty.visible(false)
		gui.FormMain.txtComponentQty.visible(false)
		gui.FormMain.txtComponentCost.visible(false)
		gui.FormMain.txtComponentMarkup.visible(false)
		gui.FormMain.txtComponentOmit.visible(false)
		gui.FormMain.txtComponentMin.visible(false)
		GUI.FormMain.txtComponentSortCode.visible(false)
		gui.FormMain.cmdAddComponent.visible(false)
		
		gui.FormMain.lblComponent.visible(false)
		gui.FormMain.lblComponentDesc.visible(false)
		gui.FormMain.lblComponentUM.visible(false)
		gui.FormMain.lblComponentSetQty.visible(false)
		gui.FormMain.lblComponentQty.visible(false)
		gui.FormMain.lblComponentCost.visible(false)
		gui.FormMain.lblComponentMarkup.visible(false)
		gui.FormMain.lblComponentOmit.visible(false)
		gui.FormMain.lblComponentMinCharge.visible(false)
		GUI.FormMain.lblComponentMinCharge.Visible(False)
		GUI.FormMain.lblComponentCodeSort.visible(false)
		
		gui.FormMain.optMaterial.Visible(false)
		gui.FormMain.optComponent.Visible(false)
		
	f.Intrinsic.Control.EndIf
	
		
	'Check Customer Part / Part ID Label Option
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_LARGELABOUR_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,V.Local.sret)
		f.Intrinsic.Control.If(V.Local.sret,=,"1")
			gui.FormMain.SplitContainerMaster.SplitterPosition(11415)
			gui.FormMain.SplitContainerLabour.SplitterPosition(5565)
			gui.FormMain.splitContainerSubLabourTop.SplitterPosition(3450)
			gui.FormMain.splitContainerSubLabour.SplitterPosition(2400)
			
		f.Intrinsic.Control.Else
			F.Intrinsic.UI.SleepMS(1)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("File not found for Large Labour, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	
	
	'Check if Powder Coating Valuesa exists
	v.Local.sTempPowderValues.Declare
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_POWDERVALUES_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.local.sTempPowderValues)
		f.Intrinsic.String.Split(v.Local.sTempPowderValues,"*!*",v.Local.sTempPowderValues)
		v.Global.sPowderGap.Set(v.Local.sTempPowderValues(0))
		v.Global.sPowderMan.Set(v.Local.sTempPowderValues(1))
		v.Global.sPowderLab.Set(v.Local.sTempPowderValues(2))
		v.Global.sPowderSet.Set(v.Local.sTempPowderValues(3))
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Powder Coating Calc setting not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
	
	'Create drop down list for document control group
	v.Local.sDocGroup.Declare
	F.Intrinsic.Control.If(v.DataTable.dtDocGrp.Exists)
		f.Data.DataTable.Close("dtDocGrp")
	F.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtDocGrp","con","SELECT GRP_NAME FROM ATG_DOC_GRP")
	f.Intrinsic.Control.For(v.Local.I,0,v.DataTable.dtDocGrp.RowCount--,1)
		gui.FormMain.ddlDocGroup.AddItem(v.DataTable.dtDocGrp(v.Local.i).GRP_NAME!Fieldvaltrim)
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Cutting Workcentres
	v.Local.sWCs.Declare
	V.Local.sWCs.Set(v.DataTable.dtConfig(1).Workcentre!fieldvaltrim)
	f.Intrinsic.String.SplitCSV(v.Local.sWCs,v.Local.sWCs)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.sWCs.UBound,1)
		gui.FormMain.ddlWorkCenterLaser.AddItem(v.local.sWCs(v.Local.i),v.Local.i)
		gui.frmLaserCutter.ddlWorkCenterLaser.AddItem(v.Local.sWCs(v.Local.i),v.Local.i)
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Check if Default Cutting exists
	v.Local.fBIll.Declare
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_DEFAULT_CUT_",V.Caller.CompanyCode,".txt",v.Local.sFileLocat)
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.global.sCut)
		GUI.FormMain.ddlWorkCenterLaser.Text(v.Global.sCut)
		gui.FormMain.txtCutSetupTime.Text(0)
		f.Intrinsic.String.Build("SELECT IFNULL(STANDARD_BILL,0) FROM V_WORKCENTERS WHERE MACHINE='{0}'",V.Global.sCut,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fBill)
		gui.FormMain.txtCutBillRate.Text(v.Local.fBIll)
		gui.FormMain.txtCutSetRate.Text(v.Local.fBIll)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Default Cutting centre not found, please setup under Estimating/Routing > Admin > Estimating Setup [6595]")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadDataTables.End

Program.Sub.LoadInventory.Start
f.Intrinsic.Control.Try
	v.Local.sCacheFile.Declare
	v.Local.sContent.Declare
	v.Local.bCacheFile.Declare

	'ADD, Part, Description, QTY, Price, Due Date, UM, Code Sort, M or P
	
	'Check if the temp file exists, create inventory grid
	f.Intrinsic.String.Concat(v.Caller.LocalGSSTempDir,v.Caller.CompanyCode,"_",v.Caller.User,"_RTR.xml",v.Local.sCacheFile)
	f.Intrinsic.File.Exists(v.Local.sCacheFile,v.Local.bCacheFile)
	f.Intrinsic.Control.If(v.Local.bCacheFile)
		f.Data.DataTable.CreateFromXML("dtINV",v.Local.sCacheFile,true)
		gui.frmQuickRouter.chkCache.Value(1)
	f.Intrinsic.Control.Else
		f.Data.DataTable.CreateFromSQL("dtINV","con","SELECT DISTINCT '+' as 'Add', Inventory_MSTR.PART as 'GSSPart', IF(INV_LXR.DISPLAY_PART is null, RTRIM(SUBSTRING(INVENTORY_MSTR.PART, 1, 17)), RTRIM(INV_LXR.DISPLAY_PART)) AS 'PartNumber', RTRIM(INVENTORY_MSTR.DESCRIPTION) AS 'Description', 0.00 as SetupQTY, 0.00 as RunQTY, INVENTORY_MSTR.AMT_ALT_COST AS 'Cost', INVENTORY_MSTR.UM_INVENTORY AS 'UoM', INVENTORY_MSTR.CODE_SORT AS 'SortCode', INVENTORY_MSTR.PRODUCT_LINE AS 'ProductLine', INVENTORY_MST2.CODE_SOURCE AS 'MFPJ',  INVENTORY_MST2.NAME_VENDOR AS 'Vendor', '' as 'Notes', 'M' as 'LMO', '0' as 'Minimum' from INVENTORY_MSTR LEFT OUTER JOIN INVENTORY_MST2 ON INVENTORY_MSTR.PART = INVENTORY_MST2.PART AND INVENTORY_MSTR.LOCATION = INVENTORY_MST2.LOCATION LEFT OUTER JOIN INV_LXR ON INVENTORY_MSTR.PART = INV_LXR.GSS_PART ORDER BY 'PartNumber'",true)
	f.Intrinsic.Control.EndIf
	gui.frmQuickRouter.gsgcInventory.DataSource("dtINV")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadInventory.End

Program.Sub.setProperties.Start
f.Intrinsic.Control.Try
	v.Local.sTimes.Declare
	v.Local.sTimes.Set("H*!*M*!*S")
	
	'Document Control
	gui.FormMain.gsgcDocControl.AddGridviewFromDatatable("gvDoc","dtDocuments")
	GUI.FormMain.gsgcDocControl.SetGridviewProperty("gvDoc","AllowDeleteRows","true")
	GUI.FormMain.gsgcDocControl.SetGridviewProperty("gvDoc","AllowAddRows","true")
	gui.FormMain.gsgcDocControl.ColumnEdit("gvDoc","OpenFile","EditorButton","Open")
	v.Local.sDocGroup.Declare
	F.Intrinsic.Control.If(v.DataTable.dtDocGrp.Exists)
		f.Data.DataTable.Close("dtDocGrp")
	F.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtDocGrp","con","SELECT GRP_NAME FROM ATG_DOC_GRP")
	f.Intrinsic.Control.For(v.Local.I,0,v.DataTable.dtDocGrp.RowCount--,1)
		f.Intrinsic.String.Concat(v.Local.sDocGroup,v.DataTable.dtDocGrp(v.Local.i).GRP_NAME!fieldvaltrim,"*!*",v.Local.sDocGroup)
	f.Intrinsic.Control.Next(v.Local.i)
	gui.FormMain.gsgcDocControl.columnEdit("gvDoc","Group","Dropdownlist",v.local.sDocGroup)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Group","AllowEdit", True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Group","ReadOnly", False)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Group","HeaderHAlignment","Center")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Group","ReadOnly", False)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Group","Width","200")
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Group","HeaderFontBold",True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "File","AllowEdit", False)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "File","ReadOnly", True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "File","HeaderHAlignment","Center")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "File","ReadOnly", False)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "File","Width","200")
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "File","HeaderFontBold",True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Browse","Icon","BROWSE")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Browse","AllowEdit", False)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Browse","ReadOnly", True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Browse","HeaderHAlignment","Center")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Browse","ReadOnly", False)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Browse","Width","50")
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Browse","HeaderFontBold",True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Descr","AllowEdit", True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Descr","ReadOnly", False)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Descr","HeaderHAlignment","Center")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Descr","ReadOnly", False)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Descr","Width","400")
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Descr","HeaderFontBold",True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Path","AllowEdit", False)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Path","ReadOnly", True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Path","HeaderHAlignment","Center")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Path","ReadOnly", False)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Path","Width","200")
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Path","HeaderFontBold",True)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "Path","Visible",False)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "FullPath","AllowEdit", False)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "FullPath","ReadOnly", True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "FullPath","HeaderHAlignment","Center")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "FullPath","ReadOnly", False)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "FullPath","Width","200")
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "FullPath","HeaderFontBold",True)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "FullPath","Visible",False)	
	gui.FormMain.gsgcDocControl.ColumnEdit("gvDoc","OpenFile","EditorButton","Open")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "OpenFile","AllowEdit", False)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "OpenFile","ReadOnly", True)
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "OpenFile","HeaderHAlignment","Center")
	gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "OpenFile","ReadOnly", False)
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "OpenFile","Width","400")
	Gui.FormMain.gsgcDocControl.SetColumnProperty("gvDoc", "OpenFile","HeaderFontBold",True)
	
	'Op Codes
	gui.frmLaserCutter.gsgcCuttingOpCodes.AddGridviewFromDatatable("gvLaserOpCodes","dtLaserOpCodes")
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "WC","AllowEdit", False)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "WC","ReadOnly", True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "WC","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "WC","ReadOnly", True)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "WC","Width","50")
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "WC","HeaderFontBold",True)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "WC","Visible",False)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "OpCode","AllowEdit", False)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "OpCode","ReadOnly", True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "OpCode","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "OpCode","ReadOnly", True)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "OpCode","Width","75")
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "OpCode","HeaderFontBold",True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "Description","AllowEdit", False)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "Description","ReadOnly", True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "Description","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "Description","ReadOnly", True)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "Description","Width","200")
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "Description","HeaderFontBold",True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "RunRate","AllowEdit", False)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "RunRate","ReadOnly", True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "RunRate","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "RunRate","ReadOnly", True)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "RunRate","Width","75")
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "RunRate","HeaderFontBold",True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetRate","AllowEdit", False)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetRate","ReadOnly", True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetRate","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetRate","ReadOnly", True)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetRate","Width","75")
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetRate","HeaderFontBold",True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetupTime","AllowEdit", False)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetupTime","ReadOnly", True)
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetupTime","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetupTime","ReadOnly", True)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetupTime","Width","75")
	Gui.frmLaserCutter.gsgcCuttingOpCodes.SetColumnProperty("gvLaserOpCodes", "SetupTime","HeaderFontBold",True)
	
	'Laser Materials
	gui.frmLaserCutter.gsgcLaserMaterials.AddGridviewFromDatatable("gvLaserMaterials","dtLaserMaterials")
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Code","AllowEdit", False)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Code","ReadOnly", True)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Code","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Code","ReadOnly", False)
	Gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Code","Width","200")
	Gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Code","HeaderFontBold",True)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Descr","AllowEdit", False)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Descr","ReadOnly", True)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Descr","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Descr","ReadOnly", False)
	Gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Descr","Width","300")
	Gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Descr","HeaderFontBold",True)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Pierce","AllowEdit", False)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Pierce","ReadOnly", True)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Pierce","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Pierce","ReadOnly", False)
	Gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Pierce","Width","50")
	Gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Pierce","HeaderFontBold",True)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Speed","AllowEdit", False)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Speed","ReadOnly", True)
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Speed","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Speed","ReadOnly", False)
	Gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Speed","Width","50")
	Gui.frmLaserCutter.gsgcLaserMaterials.SetColumnProperty("gvLaserMaterials", "Speed","HeaderFontBold",True)
	
	'Inventory
	gui.frmQuickRouter.gsgcInventory.AddGridviewFromDatatable("gvINV","dtINV")
	gui.frmQuickRouter.gsgcInventory.setgridviewproperty("gvINV","OptionsViewShowGroupPanel",True)
	gui.frmQuickRouter.gsgcInventory.setgridviewproperty("gvINV","OptionsFindAlwaysVisible",True)
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Add","MinWidth","5")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","SetupQTY","MinWidth","20")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","RunQTY","MinWidth","20")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Cost","MinWidth","20")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Description","MinWidth","130")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","SetupQTY","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","RunQTY","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Cost","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Add","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","PartNumber","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Description","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","UoM","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","SortCode","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","ProductLine","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","MFPJ","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Vendor","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Notes","HeaderFontBold","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","PartNumber","Caption","Part")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","SortCode","Caption","Sort Code")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","ProductLine","Caption","Product Line")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","MFPJ","Caption","Manufactured / Purchase")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","RunQTY","ReadOnly","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","SetupQTY","ReadOnly","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Cost","ReadOnly","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Add","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","PartNumber","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Description","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","UoM","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","SortCode","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","ProductLine","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","MFPJ","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Vendor","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Notes","ReadOnly","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","RunQTY","AllowEdit","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","SetupQTY","AllowEdit","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Cost","AllowEdit","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Add","AllowEdit","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","PartNumber","AllowEdit","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Description","AllowEdit","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","UoM","AllowEdit","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","SortCode","AllowEdit","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","ProductLine","AllowEdit","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","MFPJ","AllowEdit","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Vendor","AllowEdit","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Notes","AllowEdit","True")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","GSSPart","Visible","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Notes","Visible","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","LMO","Visible","False")
	gui.frmQuickRouter.gsgcInventory.SetColumnProperty("gvINV","Minimum","Visible","False")
	gui.frmQuickRouter.gsgcInventory.anchor(15)
	
	'Quote
	gui.FormQuote.gsgcMaterialTakeoff.AddGridviewFromDatatable("gvMaterialTakeoff","dtMaterialTakeoff")
	gui.FormQuote.gsgcMaterialTakeoff.SetColumnProperty("gvMaterialTakeoff","Material","GroupIndex",0)	
	GUI.FormQuote.gsgcMaterialTakeoff.AddgridGroupSummaryItem("gvMaterialTakeoff","ExtQty","ExtQty","SUM","| Qty Total: ","   ","n2")

	gui.FormQuote.gsgcLabourTakeoff.AddGridviewFromDatatable("gvLabourTakeoff","dtLabourTakeoff")
	gui.FormQuote.gsgcLabourTakeoff.SetColumnProperty("gvLabourTakeoff","Labour","GroupIndex",0)	
	GUI.FormQuote.gsgcLabourTakeoff.AddgridGroupSummaryItem("gvLabourTakeoff","ExtQty","ExtQty","SUM","| Qty Total: ","   ","n2")
	gui.FormQuote.gsgcLabourTakeoff.SetColumnProperty("gvLabourTakeoff","LabourRunSell","Visible","False")
	gui.FormQuote.gsgcLabourTakeoff.SetColumnProperty("gvLabourTakeoff","LabourSetSell","Visible","False")
	gui.FormQuote.gsgcLabourTakeoff.SetColumnProperty("gvLabourTakeoff","ExtSell","Visible","False")
	
	'Wc WcBase Description Setup Process P S L
	gui.FormMain.GSGCWorkSelection.AddGridviewFromDatatable("gvWorkSelection","dtWorkSelection")
	gui.FormMain.gsgcCustomerParts.AddGridviewFromDatatable("gvCustomerParts","dtCustomerParts")
	Gui.FormMain.gsgcCustomerParts.SetGridViewProperty("gvCustomerParts","OptionsViewShowGroupPanel",True)
	gui.FormMain.gsgcPriceBuildupPart.AddGridviewFromDatatable("gvPriceBuildup","dtPriceBuildupPart")
	gui.FormMain.gsgcKitParts.AddGridviewFromDatatable("gvKitParts","dtKitParts")
	gui.FormMain.GSGCFeatures.AddGridviewFromDatatable("gvFeaturesTable","dtFeaturesTable")
	gui.FormMain.gsgcComponents.AddGridviewFromDatatable("gvMaterials","dtMaterials")
	gui.FormMain.gsgcPartsAdd.AddGridviewFromDatatable("gvQuickPriceBuildup","dtQuickPriceBuildup")
	gui.frmCreateKit.gsgcKit.AddGridviewFromDatatable("gvBuildupKit","dtBuildupKit")
	gui.FormQuote.gsgcMasterPriceBuildup.AddGridviewFromDatatable("gvMasterPriceBuildup","dtPriceBuildupMaster")
	GUI.FormQuote.gsgcMasterPriceBuildup.SetGridviewProperty("gvMasterPriceBuildup","OptionsViewRowAutoHeight",true)
	gui.frmOverride.GsGridControl1.AddGridviewFromDatatable("gvOverride","dtOverride")
	
	GUI.FormMain.GSGCWorkSelection.SetGridviewProperty("gvWorkSelection","AllowDeleteRows","true")
	GUI.FormMain.gsgcPartsAdd.SetGridviewProperty("gvQuickPriceBuildup","AllowDeleteRows","true")
	
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "T", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "T", "ReadOnly", False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "T","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "T","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "T","Width","2")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "T","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.columnEdit("gvWorkSelection","T","Dropdownlist",v.local.sTimes)
	
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Wc", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Wc","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Wc","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Wc","Width","35")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Wc","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "WcBase", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "WcBase","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "WcBase","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "WcBase","Width","80")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "WcBase","Caption", "Base Desc.")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "WcBase","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtraDesc", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtraDesc","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtraDesc","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtraDesc","Width","110")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtraDesc","Caption", "Extra Desc.")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtraDesc","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Setup", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Setup","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Setup","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Setup","Width","50")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Setup","Caption","Setup Time")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Setup","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "SetupRate", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "SetupRate","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "SetupRate","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "SetupRate","Width","50")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "SetupRate","Caption","Setup Sell")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "SetupRate","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtSell", "AllowEdit", False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtSell","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtSell","ReadOnly", True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtSell","Width","50")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtSell","Caption","Ext. Sell")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtSell","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtSell","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Process", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Process","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Process","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Process","Width","50")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Process","Caption","Run Time")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Process","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ProcessRate", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ProcessRate","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ProcessRate","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ProcessRate","Width","50")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ProcessRate","Caption","Run Sell")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ProcessRate","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "P", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "P","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "P","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "P","Width","2")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "P","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "S", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "S","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "S","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "S","Width","2")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "S","Visible","False")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "S","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "L", "AllowEdit", False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "L","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "L","ReadOnly", True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "L","Width","2")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "L","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Omit", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Omit","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Omit","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Omit","Width","2")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Omit","HeaderFontBold",True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "UM","HeaderFontBold",True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "UM","Width","15")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Vend","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Vend", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Vend","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Vend","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Vend","Width","15")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Vend","Caption","Vend/Op")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "LMO","HeaderFontBold",True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "LMO","Width","15")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Override", "AllowEdit", False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Override","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Override","ReadOnly", True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Override","HeaderFontBold",True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Override","Visible",False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "PostFloat", "AllowEdit", True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "PostFloat","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "PostFloat","ReadOnly", False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "PostFloat","Width","15")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "PostFloat","Caption","Float")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "PostFloat","HeaderFontBold",True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "PostFloat","Visible",False)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Operation","Visible","False")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Operation","HeaderFontBold",True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Duration","Visible","False")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Duration","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "CostRate", "AllowEdit", False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "CostRate", "ReadOnly", True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "CostRate","HeaderFontBold",True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "CostRate","Width",40)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtCost", "AllowEdit", False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtCost","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtCost","ReadOnly", True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtCost","Width","50")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtCost","Caption","Ext. Cost")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtCost","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "ExtCost","DisplayCustomNumeric","$###,###,###.00")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "MAT_Sequence","Visible",False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Up", "AllowEdit", False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Up","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Up","ReadOnly", True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Up","Width","2")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Up","HeaderFontBold",True)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Down", "AllowEdit", False)
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Down","HeaderHAlignment","Center")
	gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Down","ReadOnly", True)
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Down","Width","2")
	Gui.FormMain.GSGCWorkSelection.SetColumnProperty("gvWorkSelection", "Down","HeaderFontBold",True)
	Gui.FormMain.GSGCWorkSelection.AddSummaryItem("gvWorkSelection", "ExtSell","SUM_ExtSell","Sum","","","n")
	Gui.FormMain.GSGCWorkSelection.AddSummaryItem("gvWorkSelection", "ExtCost","SUM_ExtCost","Sum","","","n")
	
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartNumber","AllowEdit", False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartNumber","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartNumber","MinWidth","60")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartNumber","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartNumber","Caption","Part")
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartDescription","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartDescription","ReadOnly", False)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartDescription","MinWidth","80")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartDescription","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PartDescription","Caption","Desc.")
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PL","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PL","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PL","MinWidth","80")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PL","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","PL","Visible",False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Qty","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Qty","ReadOnly", False)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Qty","MinWidth","15")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Qty","HeaderFontBold",True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","SellPriceEA","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","SellPriceEA","ReadOnly", False)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","SellPriceEA","MinWidth","50")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","SellPriceEA","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","SellPriceEA","Caption","Sell")
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","CalcSellPriceEA","AllowEdit", False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","CalcSellPriceEA","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","CalcSellPriceEA","MinWidth","50")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","CalcSellPriceEA","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","CalcSellPriceEA","Caption","Calc.")
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Extension","AllowEdit", False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Extension","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Extension","MinWidth","50")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Extension","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Extension","Caption","Ext.")
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User1","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User1","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User1","MinWidth","80")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User1","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User1","Visible",False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User2","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User2","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User2","MinWidth","80")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User2","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User2","Visible",False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User3","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User3","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User3","MinWidth","80")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User3","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User3","Visible",False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User4","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User4","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User4","MinWidth","80")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User4","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User4","Visible",False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User5","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User5","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User5","MinWidth","80")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User5","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","User5","Visible",False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","BOMKit","AllowEdit", True)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","BOMKit","ReadOnly", True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","BOMKit","MinWidth","80")
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","BOMKit","HeaderFontBold",True)
	Gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","BOMKit","Visible",False)
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","SellPriceEA","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","CalcSellPriceEA","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.gsgcPartsAdd.SetColumnProperty("gvQuickPriceBuildup","Extension","DisplayCustomNumeric","$###,###,###.00")
	Gui.FormMain.gsgcPartsAdd.AddSummaryItem("gvQuickPriceBuildup", "Extension","SUM_Extension","Sum","","","n")
	
	gui.FormMain.gsgcCustomerParts.ColumnEdit("gvCustomerParts","QuickAdd","EditorButton","Quick Add")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Router","AllowEdit", False)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Router","HeaderHAlignment","Center")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Router","ReadOnly", True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Router","MinWidth","80")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Router","HeaderFontBold",True)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Description_Router","AllowEdit", False)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Description_Router","HeaderHAlignment","Center")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Description_Router","ReadOnly", True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Description_Router","MinWidth","80")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Description_Router","Caption","Description")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Description_Router","HeaderFontBold",True)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","QuickAdd","AllowEdit", False)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","QuickAdd","HeaderHAlignment","Center")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","QuickAdd","ReadOnly", True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","QuickAdd","MinWidth","80")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","QuickAdd","Caption","Quick Add")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","QuickAdd","HeaderFontBold",True)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Prod_line","AllowEdit", False)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Prod_line","HeaderHAlignment","Center")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Prod_line","ReadOnly", True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Prod_line","MinWidth","80")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Prod_line","Caption","Product Line")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Prod_line","HeaderFontBold",True)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Part_Customer","AllowEdit", False)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Part_Customer","HeaderHAlignment","Center")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Part_Customer","ReadOnly", True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Part_Customer","MinWidth","80")
	f.Intrinsic.Control.If(v.global.sCustomerPartID,=,"1")
		Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Part_Customer","Caption","ID #")
	f.Intrinsic.Control.Else
		Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Part_Customer","Caption","Customer Part#")
	f.Intrinsic.Control.EndIf
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Part_Customer","HeaderFontBold",True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","MaterialCost","Caption","Material Cost")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","MaterialCost","DisplayCustomnumeric","$###,###,###.00")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","MaterialCost","HeaderFontBold",True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Material","HeaderFontBold",True)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Date_Last_Accessed","AllowEdit", False)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Date_Last_Accessed","HeaderHAlignment","Center")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Date_Last_Accessed","ReadOnly", True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Date_Last_Accessed","MinWidth","80")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Date_Last_Accessed","Caption","Date Last Accessed")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Date_Last_Accessed","DisplayCustomDatetime","d")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","Date_Last_Accessed","HeaderFontBold",True)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","UserChanged","AllowEdit", False)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","UserChanged","HeaderHAlignment","Center")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","UserChanged","ReadOnly", True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","UserChanged","MinWidth","80")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","UserChanged","Caption","Last User Changed")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","UserChanged","HeaderFontBold",True)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","BOMKit","AllowEdit", False)
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","BOMKit","HeaderHAlignment","Center")
	gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","BOMKit","ReadOnly", True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","BOMKit","MinWidth","80")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","BOMKit","Caption","BOM/Kit")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","BOMKit","HeaderFontBold",True)
	
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","TimeChange","Caption","Time Changed")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","TimeChange","HeaderHAlignment","Center")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","TimeChange","ReadOnly",True)
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","TimeChange","MinWidth","80")
	Gui.FormMain.gsgcCustomerParts.SetColumnProperty("gvCustomerParts","TimeChange","HeaderFontBold",True)
	
	
	gui.frmCreateKit.gsgcKit.SetColumnProperty("gvBuildupKit","QTY","AllowEdit","True")
	gui.frmCreateKit.gsgcKit.SetColumnProperty("gvBuildupKit","QTY","ReadOnly","False")

	
	f.Data.Datatable.CreateFromSQL("dtUserLines","con","SELECT * FROM V_OE_USER_FLDS_LN")
	v.Local.i.Declare
	F.Intrinsic.Control.For(V.Local.i,0,v.DataTable.dtUserLines.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtUserLines(v.Local.i).KEY_ID!Fieldvaltrim,=,"01")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User1","Caption",v.DataTable.dtUserLines(v.Local.i).LABEL!Fieldvaltrim)
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User1","AllowEdit","True")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User1","ReadOnly","False")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User1","CellBackColor","LightYellow")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User1","HeaderFontBold","True")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtUserLines(v.Local.i).KEY_ID!Fieldval,=,"02")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User2","Caption",v.DataTable.dtUserLines(v.Local.i).LABEL!Fieldvaltrim)
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User2","AllowEdit","True")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User2","ReadOnly","False")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User2","CellBackColor","LightYellow")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User2","HeaderFontBold","True")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtUserLines(v.Local.i).KEY_ID!Fieldval,=,"03")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User3","Caption",v.DataTable.dtUserLines(v.Local.i).LABEL!Fieldvaltrim)
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User3","AllowEdit","True")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User3","ReadOnly","False")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User3","CellBackColor","LightYellow")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User3","HeaderFontBold","True")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtUserLines(v.Local.i).KEY_ID!Fieldval,=,"04")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User4","Caption",v.DataTable.dtUserLines(v.Local.i).LABEL!Fieldvaltrim)
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User4","AllowEdit","True")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User4","ReadOnly","False")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User4","CellBackColor","LightYellow")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User4","HeaderFontBold","True")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtUserLines(v.Local.i).KEY_ID!Fieldval,=,"05")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User5","Caption",v.DataTable.dtUserLines(v.Local.i).LABEL!Fieldvaltrim)
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User5","AllowEdit","True")
			gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User5","ReadOnly","False")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User5","CellBackColor","LightYellow")
			Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","User5","HeaderFontBold","True")
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(v.Local.i)
	
'	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","WOComments","AllowEdit", True)
'	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","WOComments","ReadOnly", False)
'	Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","WOComments","MinWidth","180")
'	Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","WOComments","HeaderFontBold",True)
'	Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","WOComments","CellBackColor","LightYellow")
'	Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","WOComments","Visible",true)
'	Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","WOComments","CellWordWrap","Wrap")
	
	f.Data.Datatable.Close("dtUserLines")

	'Anchors
	'0 - None
	'1 - Top
	'2 - Bottom
	'4 - Left
	'8 - Right

	gui.FormQuote.gsgcMasterPriceBuildup.Anchor(15)
	gui.FormQuote.cmdGenerateQuote.Anchor(6)
	gui.FormQuote.gsgcMaterialTakeoff.anchor(11)
	gui.FormQuote.gsgcLabourTakeoff.anchor(11)

	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","SellPriceEA","DisplayCustomNumeric","$###,###,###.00")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","LabPrice","DisplayCustomNumeric","$###,###,###.00")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","MatPrice","DisplayCustomNumeric","$###,###,###.00")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","SubCont","DisplayCustomNumeric","$###,###,###.00")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","SubCont","DisplayCustomNumeric","$###,###,###.00")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","LasrPrice","DisplayCustomNumeric","$###,###,###.00")
	
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","QTY","AllowEdit","True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","QTY","ReadOnly","False")
	Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","QTY", "CellBackColor","LightYellow")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","SellPriceEA","AllowEdit","True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","SellPriceEA","ReadOnly","False")
	Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup","SellPriceEA", "CellBackColor","LightYellow")
			
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "MatMarkup", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SelectPart", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartNumber", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartNumber", "AllowEdit", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartNumber", "ReadOnly", "False")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SelectPart", "Caption", "Select")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartNumber", "Caption", "Part")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartDescription", "Caption", "Description")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartDescription", "AllowEdit", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartDescription", "ReadOnly", "False")
	Gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartDescription", "CellBackColor","LightYellow")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SellPriceEA", "Caption", "Sell Price")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "MatPrice", "Caption", "Material Price")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "LabPrice", "Caption", "Labour Price")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SubCont", "Caption", "Outside Price")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "ProgTime", "Caption", "Programming Time")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "ProgPrice", "Caption", "Programming Price")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "LasrTime", "Caption", "Cut Time")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "LasrPrice", "Caption", "Cut Price")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "PartDescription", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "QTY", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SellPriceEA", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "MatPrice", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "LabPrice", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SubCont", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "ProgTime", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "ProgPrice", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "LasrTime", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "LasrPrice", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "MatMarkup", "HeaderFontBold", "True")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SelectPart", "Visible", "False")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "MatMarkup", "Visible", "False")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "ProgTime", "Visible", "False")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "ProgPrice", "Visible", "False")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "LasrTime", "Visible", "False")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "LasrPrice", "Visible", "False")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SelectPart", "Visible", "False")
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SelectPart", "Visible", "False")
	
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SellPriceEA", "AllowEdit", True)
	gui.FormQuote.gsgcMasterPriceBuildup.SetColumnProperty("gvMasterPriceBuildup", "SellPriceEA", "ReadOnly", False)
	
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","Qty","HeaderFontBold","True")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","SellPriceEA","HeaderFontBold","True")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","MatPrice","HeaderFontBold","True")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabPrice","HeaderFontBold","True")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","SubCont","HeaderFontBold","True")	
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","KitPrice","HeaderFontBold","True")	
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabHoursUnit","HeaderFontBold","True")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabHoursExt","HeaderFontBold","True")
	
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","Qty","Caption","Qty")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","SellPriceEA","Caption","Sell Price EA")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","MatPrice","Caption","Material Sell")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabPrice","Caption","Labour Sell")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","SubCont","Caption","Outside Sell")	
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","KitPrice","Caption","Kit Sell")	
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabHoursUnit","Caption","Labour Hrs (EA)")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabHoursExt","Caption","Total Lab. Hours")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabHoursUnit","DisplayCustomNumeric","###,###,###.00")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabHoursExt","DisplayCustomNumeric","###,###,###.00")
	
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","SellPriceEA","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","LabPrice","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","MatPrice","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","SubCont","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.gsgcPriceBuildupPart.SetColumnProperty("gvPriceBuildup","KitPrice","DisplayCustomNumeric","$###,###,###.00")
	
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Qty", "HeaderFontBold", True)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Qty", "AllowEdit", True)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Qty","HeaderHAlignment","Center")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Qty","ReadOnly", False)
	Gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Qty","Width","20")
	Gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Qty","MinWidth","20")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Part", "HeaderFontBold", True)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Part", "AllowEdit", False)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Part","HeaderHAlignment","Center")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Part","ReadOnly", True)
	Gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Part","MinWidth","50")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Desc", "HeaderFontBold", True)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Desc", "AllowEdit", False)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Desc","HeaderHAlignment","Center")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Desc","ReadOnly", True)
	Gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Desc","MinWidth","100")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Desc", "Visible", False)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Seq", "HeaderFontBold", True)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Seq", "AllowEdit", False)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Seq","HeaderHAlignment","Center")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Seq","ReadOnly", True)
	Gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Seq","MinWidth","50")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Seq","Visible", False)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Parent", "HeaderFontBold", True)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Parent", "AllowEdit", False)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Parent","HeaderHAlignment","Center")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Parent","ReadOnly", True)
	Gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Parent","MinWidth","50")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Parent","Visible", False)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Source", "Caption", "Src")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Source", "HeaderFontBold", True)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Source", "AllowEdit", True)
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Source", "HeaderHAlignment","Center")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Source", "ReadOnly", False)
	Gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Source", "Width","15")
	Gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Source", "MinWidth","15")
	gui.FormMain.gsgcKitParts.SetColumnProperty("gvKitParts", "Source", "Visible", True)
	
	GUI.frmOverride.GsGridControl1.SetGridviewProperty("gvOverride","AllowDeleteRows","true")
	GUI.frmOverride.GsGridControl1.SetGridviewProperty("gvOverride","AllowAddRows","true")
	gui.frmOverride.GsGridControl1.SetColumnProperty("gvOverride", "Qty", "AllowEdit", True)
	gui.frmOverride.GsGridControl1.SetColumnProperty("gvOverride", "Qty","ReadOnly", False)
	gui.frmOverride.GsGridControl1.SetColumnProperty("gvOverride", "Amt", "AllowEdit", True)
	gui.frmOverride.GsGridControl1.SetColumnProperty("gvOverride", "Amt","ReadOnly", False)

	gui.frmLaserCutter.gsgcLaserFeatures.AddGridviewFromDatatable("gvLaserFeatures","dtLaserFeatures")
	GUI.frmLaserCutter.gsgcLaserFeatures.SetGridviewProperty("gvLaserFeatures","AllowDeleteRows","true")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Feature", "HeaderFontBold", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Feature", "AllowEdit", False)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Feature","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Feature","ReadOnly", True)
	Gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Feature","MinWidth","80")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim1", "HeaderFontBold", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim1", "AllowEdit", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim1","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim1","ReadOnly", False)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim1","Caption", "Dim 1")
	Gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim1","MaxWidth","60")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim1","Caption", "Len(mm)")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim2", "HeaderFontBold", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim2", "AllowEdit", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim2","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim2","ReadOnly", False)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim2","Caption", "Dim 2")
	Gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim2","MaxWidth","60")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Dim2","Caption", "Wid(mm)")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Pierce", "HeaderFontBold", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Pierce", "AllowEdit", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Pierce","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Pierce","ReadOnly", False)
	Gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Pierce","MaxWidth","50")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Qty", "HeaderFontBold", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Qty", "AllowEdit", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Qty","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Qty","ReadOnly", False)
	Gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Qty","MaxWidth","50")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Length", "HeaderFontBold", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Length", "AllowEdit", False)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Length","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Length","ReadOnly", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Length","Caption", "Length(mm)")
	Gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Length","MaxWidth","100")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Time", "HeaderFontBold", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Time", "AllowEdit", False)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Time","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Time","ReadOnly", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Time","Caption", "Time(m)")
	Gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Time","MinWidth","80")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Speed", "HeaderFontBold", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Speed", "AllowEdit", True)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Speed","HeaderHAlignment","Center")
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Speed","ReadOnly", False)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "PostFloat","Visible", False)
	gui.frmLaserCutter.gsgcLaserFeatures.SetColumnProperty("gvLaserFeatures", "Sequence","Visible", False)
	Gui.frmLaserCutter.gsgcLaserFeatures.AddSummaryItem("gvLaserFeatures", "Time","SUM_Time","Sum","","","n")
	
	
	
	GUI.FormMain.GSGCFeatures.SetGridviewProperty("gvFeaturesTable","AllowDeleteRows","true")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Feature", "HeaderFontBold", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Feature", "AllowEdit", False)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Feature","HeaderHAlignment","Center")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Feature","ReadOnly", True)
	Gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Feature","MinWidth","80")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1", "HeaderFontBold", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1", "AllowEdit", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","HeaderHAlignment","Center")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","ReadOnly", False)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","Caption", "Dim 1")
	Gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","MaxWidth","60")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","Caption", "Len(mm)")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2", "HeaderFontBold", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2", "AllowEdit", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","HeaderHAlignment","Center")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","ReadOnly", False)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","Caption", "Dim 2")
	Gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","MaxWidth","60")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","Caption", "Wid(mm)")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce", "HeaderFontBold", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce", "AllowEdit", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","HeaderHAlignment","Center")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","ReadOnly", False)
	Gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","MaxWidth","50")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty", "HeaderFontBold", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty", "AllowEdit", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","HeaderHAlignment","Center")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","ReadOnly", False)
	Gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","MaxWidth","50")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Length", "HeaderFontBold", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Length", "AllowEdit", False)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Length","HeaderHAlignment","Center")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Length","ReadOnly", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Length","Caption", "Length(mm)")
	Gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Length","MaxWidth","100")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Time", "HeaderFontBold", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Time", "AllowEdit", False)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Time","HeaderHAlignment","Center")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Time","ReadOnly", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Time","Caption", "Time(s)")
	Gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Time","MinWidth","80")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Speed", "HeaderFontBold", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Speed", "AllowEdit", True)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Speed","HeaderHAlignment","Center")
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Speed","ReadOnly", False)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "PostFloat","Visible", False)
	gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Sequence","Visible", False)
	Gui.FormMain.GSGCFeatures.AddSummaryItem("gvFeaturesTable", "Time","SUM_Time","Sum","","","n")
	
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Code", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Code", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Code", "Caption","Part")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Code", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Code", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Descr", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Descr", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Descr", "Caption","Description")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Descr", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Descr", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Notes", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Notes", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Notes", "Caption","Extra Notes")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Notes", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Notes", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UM", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UM", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UM", "Caption","UM")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UM", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UM", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "QTY", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "QTY", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "QTY", "Caption","Qty")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "QTY", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "QTY", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SetQTY", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SetQTY", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SetQTY", "Caption","Setup Qty")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SetQTY", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SetQTY", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UnitCost", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UnitCost", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UnitCost", "Caption","Cost")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UnitCost", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "UnitCost", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Markup", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Markup", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Markup", "Caption","Markup")	
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Markup", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Markup", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Omit", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Omit", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Omit", "Caption","Omit")	
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Omit", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Omit", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SortCode", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SortCode", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SortCode", "Caption","Sort Code")	
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SortCode", "AllowEdit","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "SortCode", "ReadOnly","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtCost", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtCost", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtCost", "Caption","Extended Cost")	
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtCost", "AllowEdit","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtCost", "ReadOnly","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtCost", "Visible","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtCost","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtSell", "HeaderFontBold", True)
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtSell", "HeaderHAlignment","Center")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtSell", "Caption","Extended Sell")	
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtSell", "AllowEdit","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtSell", "ReadOnly","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtSell", "Visible","True")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "ExtSell","DisplayCustomNumeric","$###,###,###.00")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "MinCharge", "Visible","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Sequence", "Visible","False")
	gui.FormMain.gsgcComponents.SetColumnProperty("gvMaterials", "Tag", "Visible","False")
	GUI.FormMain.gsgcComponents.SetGridviewProperty("gvMaterials","AllowDeleteRows","true")
	Gui.FormMain.gsgcComponents.AddSummaryItem("gvMaterials", "ExtCost","SUM_ExtCost","Sum","","","n")
	Gui.FormMain.gsgcComponents.AddSummaryItem("gvMaterials", "ExtSell","SUM_ExtSell","Sum","","","n")
	
	'Anchors
	'0 - None
	'1 - Top
	'2 - Bottom
	'4 - Left
	'8 - Right
	f.Intrinsic.Control.If(v.Global.sMultiple,<>,"1")
		gui.FormMain.gsgcComponents.anchor(15)
	f.Intrinsic.Control.EndIf
	
	
	GUI.FormQuote.gsgcMasterPriceBuildup.SetGridviewProperty("gvMasterPriceBuildup","AllowAddRows",True)	
	gui.FormQuote.gsgcMasterPriceBuildup.SetGridViewProperty("gvMasterPriceBuildup","MultiSelect",True)
	gui.FormQuote.gsgcMasterPriceBuildup.Setgridviewproperty("gvMasterPriceBuildup","multiselectmode",2)
	gui.FormQuote.gsgcMasterPriceBuildup.Setgridviewproperty("gvMasterPriceBuildup","CheckBoxSelectorField","SelectPart")
	
	
	gui.FormMain.gsgcCustomerParts.SetGridViewProperty("gvCustomerParts","MultiSelect",True)
	gui.FormMain.gsgcCustomerParts.Setgridviewproperty("gvCustomerParts","multiselectmode",2)
	gui.FormMain.gsgcCustomerParts.Setgridviewproperty("gvCustomerParts","CheckBoxSelectorField","SelectPart")


f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.setProperties.End

Program.Sub.deletePart.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sret.Declare
	V.Local.sPartNumber.Declare
	V.Local.sPartNumber.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.fQtyOnhand.Declare
	V.Local.iRefID.Declare
	f.Global.DocumentControl.GetLinkID(v.Local.sPartNumber,30,v.Local.iRefID)
	
	f.Intrinsic.String.Build("SELECT QTY_ONHAND FROM V_INVENTORY_MSTR WHERE PART='{0}'",v.Local.sPartNumber,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fQtyOnhand)
	
	f.Intrinsic.Control.If(v.Local.fQtyOnhand,>,0)
		f.Intrinsic.UI.Msgbox("Cannot delete, qty onhand exists.")
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("DELETE FROM ATG_DOC_ASSOC WHERE LINK_ID={0}",v.Local.iRefID,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		f.Intrinsic.String.Build("DELETE FROM INVENTORY_MSTR WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		f.Intrinsic.String.Build("DELETE FROM INVENTORY_MST2 WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		f.Intrinsic.String.Build("DELETE FROM INVENTORY_MST3 WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		f.Intrinsic.String.Build("DELETE FROM INV_EXTRA_TEXT WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		F.Intrinsic.String.Build("DELETE FROM ROUTER_HEADER WHERE ROUTER='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		F.Intrinsic.String.Build("DELETE FROM ROUTER_XREF WHERE ROUTER='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		F.Intrinsic.String.Build("DELETE FROM ROUTER_SUPP_HDR WHERE RTR_NUM='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		F.Intrinsic.String.Build("DELETE FROM BOM_MSTR WHERE parent='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		F.Intrinsic.String.Build("DELETE FROM BOM_ENG WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		F.Intrinsic.String.Build("DELETE FROM INV_CROSS_REF WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		
		f.Intrinsic.Control.CallSub(clearAll)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.deletePart.End

Program.Sub.DXFtoPNG.Start
F.Intrinsic.control.try
	v.Local.sFileToCovertPath.Declare
	v.Local.sConfigFileName.Declare
	v.Local.sConfigFileName.Set("dxf_to_png_config.txt")
	v.Local.bbool.Declare
	v.Local.sEXEPath.Declare
	v.Local.sLocation.Declare
	v.Local.sPNGLocationPath.Declare
	v.Local.sPNGLocation.Declare
	v.Local.sConfigLocation.Declare
	v.Local.sCustomerIdFile.Declare
	v.Local.fSleepTime.Declare
	v.Local.fSleepTime.Set(10)
	v.Local.i.Declare
	v.Local.sPNGMade.Declare
	
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\DXF_TO_PNG\dxftopng.exe",v.Local.sEXEPath) 'Path to exe
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\DXF_TO_PNG",v.Local.sLocation) 'Path to folder
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\DXF_TO_PNG\pnglocation.txt",v.Local.sPNGLocationPath) 'Path to where new pdf will be saved in
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\DXF_TO_PNG\dxf_customer_id.txt",v.Local.sCustomerIdFile) 'Path to where new pdf will be saved in
	f.Intrinsic.File.String2File(v.Local.sPNGLocationPath,"")

	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\DXF_TO_PNG\dxf_to_png_config.txt",v.Local.sConfigLocation) 'Path to config folder
	'f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\DXF_TO_PNG\",v.Local.sFileName,v.Local.sFileToCovertPath) 'Path to dxf to convert
	v.Local.sFileToCovertPath.Set(v.Screen.FormMain!txtDXFLocation.Text)
	f.Intrinsic.File.String2File(v.Local.sConfigLocation, v.Args.AllFiles) 'upload settings to txt doc
	f.Intrinsic.File.String2File(v.Local.sCustomerIdFile, v.Args.Customers) 'upload settings to txt doc
	
	F.Intrinsic.Task.ShellExec(0,"",V.Local.sEXEPath,"","",1) 'path to exe and opens it.
	Function.Intrinsic.UI.Sleep(v.Local.fSleepTime)
	'run exe tomas
	'sleep 5sec
	f.Intrinsic.File.File2String(v.Local.sPNGLocationPath,v.Local.sPNGLocation)
	
	f.Intrinsic.Control.For(v.Local.i,0,7,1)
		f.Intrinsic.Control.If(v.Local.sPNGLocation,=,"")
			Function.Intrinsic.UI.Sleep(1)
			f.Intrinsic.File.File2String(v.Local.sPNGLocationPath,v.Local.sPNGLocation)
		f.Intrinsic.Control.Else
			v.Local.sPNGMade.Set("Made")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.Control.If(v.Local.sPNGMade,=,"Made")
		f.Intrinsic.String.Replace(v.Local.sPNGLocation,"/","\",v.Local.sPNGLocation) 'swap slashes to that python runs properly
		'Gui.FormMain.GsWebBrowserThumbnail.loadurl(v.Local.sPNGLocation)
	f.Intrinsic.Control.Else
		F.Intrinsic.ui.msgbox("Unable to load DXF.")
	f.Intrinsic.Control.EndIf
	
F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.DXFtoPNG.End

Program.Sub.clearAll.Start
f.Intrinsic.Control.Try
	v.Global.bLoading.Set(true)
	gui.frmOverride.lblOutside.Caption("")
	gui.frmOverride.lblSeq.Caption("")
	
	Gui.SS_Form.txtProdLength.text("")
	Gui.SS_Form.txtProdWidth.text("")
	Gui.SS_Form.txtPowdThick.text("")
	Gui.SS_Form.txtPowdPrice.text("")
	Gui.SS_Form.txtPowdCost.text("")
	Gui.SS_Form.txtChemCost.text("")
	Gui.SS_Form.txtMarkup.text("")
	Gui.SS_Form.txtGap.text("")
	Gui.SS_Form.txtMan.text("")
	Gui.SS_Form.txtLabourRate.text("")
	Gui.SS_Form.txtSetupCost.text("")
	Gui.SS_Form.txtLineSpeed.text("")
	Gui.SS_Form.txtLabourCost.text("")
	Gui.SS_Form.txtPricePerUnit.text("")
	Gui.SS_Form.ddlColour.text("")
	Gui.SS_Form.lblNetPriceResult.caption("")
	Gui.SS_Form.lblMinChargeResult.caption("")
	Gui.SS_Form.lblID.caption("")
	Gui.SS_Form.lblGT.caption("")
	Gui.SS_Form.lblPart.caption("")
	Gui.SS_Form.lblCalcPriceResult.caption("")
	gui.FormMain.cmdPowderCalculator.backcolor(-2147483633)

	gui.FormMain.TXTRTRSEQCOMMENT.Text("")
	gui.FormMain.txtClientCode.Text("")
	gui.FormMain.txtClientName.Text("")
	gui.FormMain.txtPartCode.Text("")
	gui.FormMain.txtPartRevCode.Text("")
	gui.FormMain.txtPartDescription.Text("")
	gui.FormMain.txtPartDescription2.Text("")
	gui.FormMain.txtPartDescription3.Text("")
	gui.FormMain.txtPartUM.Text("")
	gui.FormMain.txtPartPL.Text("")
	gui.FormMain.txtMainMM.Text("")
	gui.FormMain.txtMainLength.Text("")
	gui.FormMain.txtMainWidth.Text("")
	gui.FormMain.txtMainBord.Text("")
	gui.FormMain.txtMainSpace.Text("")
	gui.FormMain.txtMainPierce.Text("")
	gui.FormMain.txtFullSheetLength.Text("")
	gui.FormMain.txtFullSheetWidth.Text("")
	gui.FormMain.txtFullSheetBord.Text("")
	gui.FormMain.txtMaterialName.Text("")
	gui.FormMain.txtMaterialDesc.Text("")
	gui.FormMain.txtVendQuoteNote.Text("")
	gui.FormMain.txtSheetCost.text("")
	gui.FormMain.txtSheetUM.text("")
	gui.FormMain.txtSheetMarkup.text("")
	gui.FormMain.txtSheetMinCharge.text("")
	gui.FormMain.txtMainPerSheet.text("")
	gui.FormMain.txtCutPieceLength.text("")
	gui.FormMain.txtCutPieceWidth.text("")
	gui.FormMain.txtCutSetupTime.text("")
	gui.FormMain.txtCutSetRate.text("")
	gui.FormMain.txtCutBillRate.text("")
	gui.FormMain.txtSpeed.text("")
	gui.FormMain.txtDiamiterMM.text("")
	gui.FormMain.txtFeatureQty.text("")
	gui.FormMain.txtEstProTimes.text("")
	gui.FormMain.chkNoMaterial.Value(0)
	gui.FormMain.txtFileT.Text("")
	gui.FormMain.trvFile.ClearItems
	gui.FormMain.ddlVendQuote.ClearItems
	gui.FormMain.txtQuantityBrake.Text("")
	
	gui.FormMain.ddlWorkCenter.Text("")
	gui.FormMain.txtWCCode.Text("")
	gui.FormMain.txtWCRunTime.Text("")
	gui.FormMain.ddlWCRunUnit.Text("")
	gui.FormMain.txtWCRunUM.Text("")
	gui.FormMain.txtWCRunRate.Text("")
	gui.FormMain.txtWCSetupTime.Text("")
	gui.FormMain.txtWCSetupRate.Text("")
	gui.FormMain.txtWCOpcode.Text("")
	gui.FormMain.txtWCCost.Text("")
	
	gui.FormMain.txtOut.Text("")
	gui.FormMain.txtOutDesc.Text("")
	gui.FormMain.txtOutMin.Text("")
	gui.FormMain.txtOutQty.Text("")
	gui.FormMain.txtOutRate.Text("")
	gui.FormMain.txtOutUM.Text("")
	gui.FormMain.txtOutVendor.Text("")
	gui.FormMain.txtLeadTime.Text("")
	
	gui.FormUpdatePartsText.txtAddDesc1.Text("")
	gui.FormUpdatePartsText.txtAddDesc2.Text("")
	gui.FormUpdatePartsText.txtAddDesc3.Text("")
	gui.FormMain.GsWebBrowserShowPDF.LoadURL("")
	GUI.FormMain.GsWebBrowserThumbnail.LoadURL("")
	
	gui.frmLaserCutter.txtCutBillRate.Text("")
	gui.frmLaserCutter.txtCutLength.Text("")
	gui.frmLaserCutter.txtCutSetRate.text("")
	gui.frmLaserCutter.txtCutSetupTime.Text("")
	gui.frmLaserCutter.txtCutWidth.text("")
	gui.frmLaserCutter.txtDiamiterMM.Text("")
	gui.frmLaserCutter.txtEstProTimes.Text("")
	gui.frmLaserCutter.txtFeatureQty.Text("")
	gui.frmLaserCutter.txtOpCode.Text("")
	gui.frmLaserCutter.txtSpeed.Text("")
	gui.frmLaserCutter.txtWCDescription.Text("")
	gui.frmLaserCutter.ddlWorkCenterLaser.Text("")
	gui.frmLaserCutter.ddlFeature.Text("")
	F.Intrinsic.Control.CallSub(loadDataTables)
	v.Global.bLoading.Set(false)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.clearAll.End

Program.Sub.NestingCalculateButtonBackup_Click.Start
f.Intrinsic.Control.Try
	
	v.Local.sFileLocat.Declare(string)
	v.Local.sNestingValues.Declare(string)
	v.Local.sEXEPath.Declare
	v.Local.sMainSheetFactor.Declare
	v.Local.sMainPerSheet.Declare
	v.Local.sMainSheetLength.Declare
	v.Local.sMainSheetWidth.Declare
	v.Local.sMainSheetBord.Declare
	v.Local.sPDFFileSaveLocation.Declare
	v.Local.sPDFFileSaveLocationForPY.Declare
	v.Local.sPieceWidth.Declare
	v.Local.sPieceLength.Declare
	v.Local.sPieceSpace.Declare
	v.Local.sPDFFileName.Declare
	v.Local.sPDFFULLPATH.Declare
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sVal.Declare
	v.Local.bFileCheck.Declare(boolean)
	v.Local.sFileLocation.Declare(string)
	v.Local.fSleepTime.Declare
	v.Local.fSleepTime.Set(1.0)
	v.Local.sCheckClicked.Declare
	v.Local.sMainSheetLength.set(v.Screen.FormNestingGUIVisual!txtFullSheetLength.Text)
	v.Local.sMainSheetWidth.set(v.Screen.FormNestingGUIVisual!txtFullSheetWidth.Text)
	v.Local.sMainSheetBord.set(v.Screen.FormNestingGUIVisual!txtFullSheetBord.Text) '
	v.Local.sMainSheetFactor.set(v.Screen.FormNestingGUIVisual!txtSheetFactor.Text)
	v.Local.sMainPerSheet.set(v.Screen.FormNestingGUIVisual!txtTotalItemsPerSheet.Text)
	v.Local.sPieceWidth.set(v.Screen.FormNestingGUIVisual!txtPieceLength.Text)
	v.Local.sPieceLength.set(v.Screen.FormNestingGUIVisual!txtPieceWidth.Text)
	v.Local.sPieceSpace.set(v.Screen.FormNestingGUIVisual!txtPieceSpacing.Text) '
	v.Local.sPDFFileName.Set("TEST")
	v.Local.sCheckClicked.Set(v.Screen.FormNestingGUIVisual!txtFirstOpenCheck.Text)
	
	f.Intrinsic.Control.If(v.Local.sCheckClicked,=,1)
		v.Local.fSleepTime.Set(1.2)	
		gui.FormNestingGUIVisual.txtFirstOpenCheck.Text("2")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\PythonNesting.exe",v.Local.sEXEPath) 'Path to exe
	'Where the file PDF needs to be saved C:\Apps\Global\PLUGINS\6554_Drawings\APG
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Local.sPDFFileSaveLocation) 'path to where new file needs to be saved
	f.Intrinsic.File.CreateDir(v.Local.sPDFFileSaveLocation) 'creates new file
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,v.Local.sFileLocat) 'path to where text file is saved with PDF configurations
	f.Intrinsic.File.CreateDir(v.Local.sFileLocat) 'creates new file
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_Estimating_Program.txt",v.Local.sFileLocat)
	f.Intrinsic.String.Concat(v.local.sPDFFileSaveLocation,v.Caller.CompanyCode,v.Local.sPDFFileSaveLocation) 'path to where new file needs to be
	f.Intrinsic.String.Concat(v.Local.sPDFFileSaveLocation,"\",v.Local.sPDFFileName,".pdf",v.Local.sPDFFULLPATH)
	f.Intrinsic.String.Replace(v.Local.sPDFFileSaveLocation,"\","/",v.Local.sPDFFileSaveLocationForPY) 'swap slashes to that python runs properly
	
	'#0 #R        - Small fitting type x
	'#1 #100      - Large Plate Width x
	'#2 #86       - Large Plate Height x
	'#3 #16       - Small fitting unit width x
	'#4 #10       - Small fitting unit height x
	'#5 #2        - Offset x
	'#6 #3mm Steel- Materials Name x
	'#7 #3mm Steel- Materials Code x
	'#8 #1.25     - Cutting 1mm speed per seccond x
	'#9 #30       - Punch all Hole cycle time sec per part x
	'#10 #20      - Cut all hole cycle Time sec per part   x
	'#11 #PATH    - Location to save
	'#12 #FileName- What you want the files name to be when saved as pdf
	
	f.Intrinsic.String.Concat("R",v.Ambient.NewLine,v.Local.sMainSheetWidth,v.Ambient.NewLine,v.Local.sMainSheetLength,v.Ambient.NewLine,v.Local.sPieceWidth,v.Ambient.NewLine,v.Local.sPieceLength,v.Ambient.NewLine,v.Local.sPieceSpace,v.Ambient.NewLine,"MaterialName",v.Ambient.NewLine,"MaterialCode",v.Ambient.NewLine,"1",v.Ambient.NewLine,"30",v.Ambient.NewLine,"15",v.Ambient.NewLine,v.Local.sPDFFileSaveLocationForPY,v.Ambient.NewLine,v.Local.sPDFFileName,v.Local.sNestingValues)		 
	f.Intrinsic.File.String2File(v.Local.sFileLocat, v.Local.sNestingValues) 'upload settings to txt doc
	'f.Intrinsic.UI.Msgbox("Successfully Updated.")
	F.Intrinsic.Task.ShellExec(0,"",V.Local.sEXEPath,"","",1) 'path to excell and opens it.
	'f.Intrinsic.Debug.ShowCallerInfo
	Function.Intrinsic.UI.Sleep(v.Local.fSleepTime)
	
	gui.FormNestingGUIVisual.GsWebBrowserGUINestingVisual.LoadURL(v.Local.sPDFFULLPATH)
	gui.FormNestingGUIVisual.GsWebBrowserGUINestingVisual.ZoomFactor("0.5")

	'Read text file and populare the GUI's
	'f.Intrinsic.String.Concat(v.Caller.GasDir,"\",V.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sFileLocat) 
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output.txt",v.Local.sFileLocation)
	f.Intrinsic.File.Exists(v.Local.sFileLocation,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.File.File2String(v.Local.sFileLocation,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'f.Intrinsic.Debug.ShowCallerInfo
		gui.FormNestingGUIVisual.txtZoomRatio.Text(v.Local.sZoomRatio)
		gui.FormNestingGUIVisual.txtTotalItemsPerSheet.Text(v.Local.sTotalAmount)
		gui.FormNestingGUIVisual.txtMainSectionAmount.Text(v.Local.sMainSectionAmount)
		gui.FormNestingGUIVisual.txtRightSectionAmount.Text(v.Local.sRightSectionAmount)
		gui.FormNestingGUIVisual.txtTopSectionAmount.Text(v.Local.sTopSectionAmount)
		gui.FormNestingGUIVisual.txtPlateArea.Text(v.Local.sPlateArea)
		gui.FormNestingGUIVisual.txtSingleUnitArea.Text(v.Local.sSingleUnitArea)
		gui.FormNestingGUIVisual.txtTotalUnitArea.Text(v.Local.sTotalUnitArea)
		gui.FormNestingGUIVisual.txtUnittoPlateRatio.Text(v.Local.sUnitToPlateRatio)
		gui.FormNestingGUIVisual.txtSheetFactor.Text(v.Local.sSheetFactor)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.NestingCalculateButtonBackup_Click.End

Program.Sub.NestingCalculateButton_Click.Start
f.Intrinsic.Control.Try
	gui.FormMain.cmdEstimationCalculate.Enabled(False)
	v.Local.sFileLocat.Declare(string)
	v.Local.sNestingValues.Declare(string)
	v.Local.sEXEPath.Declare
	v.Local.sMainSheetFactor.Declare
	v.Local.sMainPerSheet.Declare
	v.Local.sMainSheetLength.Declare
	v.Local.sMainSheetWidth.Declare
	v.Local.sMainSheetBord.Declare
	v.Local.sPDFFileSaveLocation.Declare
	v.Local.sPDFFileSaveLocationForPY.Declare
	v.Local.sPieceWidth.Declare
	v.Local.sPieceLength.Declare
	v.Local.sPieceSpace.Declare
	v.Local.sCutPieceSpacingX.Declare
	v.Local.sCutPieceSpacingY.Declare
	v.Local.sFullSheetBordX.Declare
	v.Local.sFullSheetBordY.Declare
	
	v.Local.sCutPieceSpacingX.Set(v.Screen.FormMain!txtFullSheetBordX.Text)
	v.Local.sCutPieceSpacingY.Set(v.Screen.FormMain!txtFullSheetBordY.Text)
	v.Local.sFullSheetBordX.Set(v.Screen.FormMain!txtCutPieceSpacingX.Text)
	v.Local.sFullSheetBordY.Set(v.Screen.FormMain!txtCutPieceSpacingY.Text)
	
	v.Local.sPDFFileName.Declare
	v.Local.sPDFFULLPATH.Declare
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sVal.Declare
	v.Local.bFileCheck.Declare(boolean)
	v.Local.sFileLocation.Declare(string)
	v.Local.fSleepTime.Declare
	v.Local.fSleepTime.Set(1.5)
	v.Local.sCheckClicked.Declare
	v.Local.sConfigFileName.Declare
	v.Local.sPieceLengthAddSpacing.Declare
	v.Local.sPieceWidthAddSpacing.Declare
	v.Local.sSheetWidthDivTwo.Declare
	v.Local.sSheetLengthDivTwo.Declare
	v.Local.sConfigFileName.Set("GAB_6554_Config.txt")
	v.Local.sMainBoard.Set(v.Screen.FormMain!txtFullSheetBord.Text)
	v.Local.sMainSheetLength.set(v.Screen.FormMain!txtFullSheetLength.Text)
	v.Local.sMainSheetWidth.set(v.Screen.FormMain!txtFullSheetWidth.Text)
	v.Local.sMainSheetBord.set(v.Screen.FormMain!txtFullSheetBord.Text) '
	v.Local.sMainSheetFactor.set(v.Screen.FormMain!txtSheetFactor.Text)
	v.Local.sMainPerSheet.set(v.Screen.FormMain!txtTotalItemsPerSheet.Text)
	v.Local.sPieceWidth.set(v.Screen.FormMain!txtCutPieceWidth.Text)
	v.Local.sPieceLength.set(v.Screen.FormMain!txtCutPieceLength.Text)
	v.Local.sPieceSpace.set(v.Screen.FormMain!txtCutPieceSpacing.Text) 'txtCutPieceWidth
	v.Local.sPDFFileName.Set("TEST")
	v.Local.sCheckClicked.Set(v.Screen.FormMain!txtFirstOpenCheck.Text)
	f.Intrinsic.Math.Add(v.Local.sPieceLength,v.Local.sPieceSpace,v.Local.sPieceLengthAddSpacing)
	f.Intrinsic.Math.Add(v.Local.sPieceWidth,v.Local.sPieceSpace,v.Local.sPieceWidthAddSpacing)
	f.Intrinsic.Math.Div(v.Local.sMainSheetWidth,2,v.Local.sSheetWidthDivTwo)
	f.Intrinsic.Math.Div(v.Local.sMainSheetLength,2,v.Local.sSheetLengthDivTwo)
	v.Local.stempnumber.Declare
	v.Local.sSwapped.Declare


	
	
	f.Intrinsic.Control.If(v.Local.sCheckClicked,=,1)
		v.Local.fSleepTime.Set(2)	
		gui.FormMain.txtFirstOpenCheck.Text("2")
	f.Intrinsic.Control.EndIf
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\PythonNesting.exe",v.Local.sEXEPath) 'Path to exe
	'Where the file PDF needs to be saved C:\Apps\Global\PLUGINS\6554_Drawings\APG
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Local.sPDFFileSaveLocation) 'path to where new file needs to be saved
	f.Intrinsic.File.CreateDir(v.Local.sPDFFileSaveLocation) 'creates new file
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,v.Local.sFileLocat) 'path to where text file is saved with PDF configurations
	f.Intrinsic.File.CreateDir(v.Local.sFileLocat) 'creates new file
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_Estimating_Program.txt",v.Local.sFileLocat)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Local.sConfigFileName,v.Local.sConfigFileName) 'path to where config file is
	f.Intrinsic.File.String2File(v.Local.sConfigFileName, v.Local.sFileLocat) 'upload settings to txt doc
	f.Intrinsic.String.Concat(v.local.sPDFFileSaveLocation,v.Caller.CompanyCode,v.Local.sPDFFileSaveLocation) 'path to where new file needs to be
	f.Intrinsic.String.Concat(v.Local.sPDFFileSaveLocation,"\",v.Local.sPDFFileName,".pdf",v.Local.sPDFFULLPATH)
	f.Intrinsic.String.Replace(v.Local.sPDFFileSaveLocation,"\","/",v.Local.sPDFFileSaveLocationForPY) 'swap slashes to that python runs properly

	'#0 #R        - Small fitting type x
	'#1 #100      - Large Plate Width x
	'#2 #86       - Large Plate Height x
	'#3 #16       - Small fitting unit width x
	'#4 #10       - Small fitting unit height x
	'#5 #2        - Offset x
	'#6 #3mm Steel- Materials Name x
	'#7 #3mm Steel- Materials Code x
	'#8 #1.25     - Cutting 1mm speed per seccond x
	'#9 #30       - Punch all Hole cycle time sec per part x
	'#10 #20      - Cut all hole cycle Time sec per part   x
	'#11 #PATH    - Location to save
	'#12 #FileName- What you want the files name to be when saved as pdf
	'#13 #xBoard  - Not Added yet
	'#14 #yBoard  -Not Added yet
	'#15 #xPartOffset -Not Added yet 
	'#16 #yPartOffset -Not Added yet
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.String.Concat("R",v.Ambient.NewLine,v.Local.sMainSheetWidth,v.Ambient.NewLine,v.Local.sMainSheetLength,v.Ambient.NewLine,v.Local.sPieceWidth,v.Ambient.NewLine,v.Local.sPieceLength,v.Ambient.NewLine,v.Local.sPieceSpace,v.Ambient.NewLine,"MaterialName",v.Ambient.NewLine,"MaterialCode",v.Ambient.NewLine,"1",v.Ambient.NewLine,"30",v.Ambient.NewLine,"15",v.Ambient.NewLine,v.Local.sPDFFileSaveLocationForPY,v.Ambient.NewLine,v.Local.sPDFFileName,v.Ambient.NewLine,v.Local.sCutPieceSpacingX,v.Ambient.NewLine,v.Local.sCutPieceSpacingY,v.Ambient.NewLine,v.Local.sFullSheetBordX,v.Ambient.NewLine,v.Local.sFullSheetBordY,v.Local.sNestingValues)		' sCutPieceSpacingX sCutPieceSpacingY  sFullSheetBordX   sFullSheetBordY                                   	 
	
	f.Intrinsic.File.String2File(v.Local.sFileLocat, v.Local.sNestingValues) 'upload settings to txt doc
	'f.Intrinsic.UI.Msgbox("Successfully Updated.")
	F.Intrinsic.Task.ShellExec(0,"",V.Local.sEXEPath,"","",1) 'path to exe and opens it.
	Function.Intrinsic.UI.Sleep(v.Local.fSleepTime)
	'f.Intrinsic.Debug.ShowCallerInfo
	
	'f.Intrinsic.Debug.ShowCallerInfo
	'Read text file and populare the GUI's
	'f.Intrinsic.String.Concat(v.Caller.GasDir,"\",V.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sFileLocat) 
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output.txt",v.Local.sFileLocation)
	f.Intrinsic.File.Exists(v.Local.sFileLocation,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.File.File2String(v.Local.sFileLocation,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		'f.Intrinsic.Debug.ShowCallerInfo
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'f.Intrinsic.Debug.ShowCallerInfo
		gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
		gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
		gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
		gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
		gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
		gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
		gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
		gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
		gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
		gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
		

		
		gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFFULLPATH)
		gui.FormMain.GsWebBrowserShowPDF.ZoomFactor("0.5")
		gui.FormMain.cmdEstimationCalculate.Enabled(True)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.NestingCalculateButton_Click.End

Program.Sub.CloseNestingVisulisationGUI.Start
f.Intrinsic.Control.Try
	
	v.Local.sFileLocation.Declare(string)
	v.Local.bFileCheck.Declare
	v.Local.sVal.Declare
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sMainPerSheet.Declare
	v.Local.sPieceSpace.Declare
	v.Local.sMainSheetFactor.Declare
	v.Local.sMainPerSheet.set(v.Screen.FormNestingGUIVisual!txtTotalItemsPerSheet.Text)
	v.Local.sMainSheetFactor.set(v.Screen.FormNestingGUIVisual!txtSheetFactor.Text)
	v.Local.sPieceSpace.set(v.Screen.FormNestingGUIVisual!txtPieceSpacing.Text) '
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output.txt",v.Local.sFileLocation)
	f.Intrinsic.File.Exists(v.Local.sFileLocation,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocation,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'gui.FormMain.txtMainLength.Text(v.Local.sPieceLength)
		'gui.FormMain.txtMainWidth.Text(v.Local.sPieceWidth)
		'gui.FormMain.txtMainBord.Text(v.Local.sMainSheetBord)
		'gui.FormMain.txtMainSpace.Text(v.Local.sMainSheetSpace)
		'gui.FormMain.txtspm.Text(v.Local.sSingleUnitArea)
		gui.FormMain.txtMainBord.Text(v.Local.sPieceSpace)
		gui.FormMain.txtMainSpace.Text(v.Local.sPieceSpace)
		gui.FormMain.txtMainSheetFactor.Text(v.Local.sMainSheetFactor)
		gui.FormMain.txtMainPerSheet.Text(v.Local.sMainPerSheet)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
	
	
	gui.FormNestingGUIVisual..Visible(False)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CloseNestingVisulisationGUI.End

Program.Sub.OpenUpdatePartTextGUI.Start
f.Intrinsic.Control.Try
	gui.FormUpdatePartsText..Visible(TRUE)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.OpenUpdatePartTextGUI.End

Program.Sub.CloseUpdatePartTextGUI.Start
f.Intrinsic.Control.Try
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CloseUpdatePartTextGUI.End

Program.Sub.OpenNestingVisulisationGUI.Start
f.Intrinsic.Control.Try

	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.OpenNestingVisulisationGUI.End

Program.Sub.OpenPartDrawingGUI.Start
f.Intrinsic.Control.Try
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.OpenPartDrawingGUI.End

Program.Sub.ClosePartDrawingGUI.Start
f.Intrinsic.Control.Try
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ClosePartDrawingGUI.End

Program.Sub.CloseSelectCustomer.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CloseSelectCustomer.End

Program.Sub.CloseSelectPart.Start
f.Intrinsic.Control.Try

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CloseSelectPart.End

Program.Sub.ConcatQuantityBuild.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Args.Part)
	v.Local.sRet.Declare
	v.Local.sQtyBreak.Declare
	v.Local.sQtyBreakFinal.Declare
	v.Local.i.Declare
	v.Local.iLen.Declare
	
	F.Intrinsic.String.Build("select QUANTITY_1, QUANTITY_2, QUANTITY_3, QUANTITY_4 From V_RTR_PRICE_1_4 WHERE ROUTER='{0}'",V.Local.sPart.Trim,V.Local.SSQL)
	F.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Concat(v.Local.sQtyBreak,v.Local.sRet,v.Local.sQtyBreak)
	F.Intrinsic.String.Build("select QUANTITY_5, QUANTITY_6, QUANTITY_7, QUANTITY_8 From V_RTR_PRICE_5_8 WHERE ROUTER='{0}'",V.Local.sPart.Trim,V.Local.SSQL)
	F.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Concat(v.Local.sQtyBreak,"*!*",v.Local.sRet,v.Local.sQtyBreak)
	F.Intrinsic.String.Build("select QUANTITY_9, QUANTITY_10 From V_RTR_PRICE_9_10 WHERE ROUTER='{0}'",V.Local.sPart.Trim,V.Local.SSQL)
	F.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Concat(v.Local.sQtyBreak,"*!*",v.Local.sRet,v.Local.sQtyBreak)
	f.Intrinsic.String.Replace(v.Local.sQtyBreak,"0.0000","",v.Local.sQtyBreak)
	f.Intrinsic.String.Split(v.Local.sQtyBreak,"*!*",v.Local.sQtyBreak)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.sQtyBreak.UBound,1)
		f.Intrinsic.Control.if(v.Local.sQtyBreak(v.Local.i).trim,<>,"")
			f.Intrinsic.String.Concat(v.Local.sQtyBreakFinal,v.Local.sQtyBreak(v.Local.i),",",v.Local.sQtyBreakFinal)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.String.Len(v.Local.sQtyBreakFinal,v.Local.iLen)
	f.Intrinsic.String.Left(v.Local.sQtyBreakFinal,v.Local.iLen.--,v.Local.sQtyBreakFinal)
	f.Intrinsic.Variable.AddRV("rQtyBreak",v.Local.sQtyBreakFinal)
	
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.ConcatQuantityBuild.End

Program.Sub.disableMaterialFields.Start
f.Intrinsic.Control.Try
	gui.FormMain.txtMaterialName.Enabled(false)
	gui.FormMain.cmdMaterialLookupCORE.Enabled(false)
	gui.FormMain.txtMaterialDesc.Enabled(false)
	gui.FormMain.txtSheetCost.Enabled(false)
	gui.FormMain.txtSheetUM.Enabled(false)
	gui.FormMain.txtSheetMarkup.Enabled(false)
	gui.FormMain.txtSheetMinCharge.Enabled(false)
	gui.FormMain.txtMainPerSheet.Enabled(false)
	gui.FormMain.txtCutPieceLength.Enabled(false)
	gui.FormMain.txtCutPieceWidth.Enabled(false)
	gui.FormMain.ddlWorkCenterLaser.Enabled(false)
	gui.FormMain.txtCutSetupTime.Enabled(false)
	gui.FormMain.txtCutSetRate.Enabled(false)
	gui.FormMain.txtCutBillRate.Enabled(false)
	gui.FormMain.txtSpeed.Enabled(false)
	gui.FormMain.ddlFeature.Enabled(false)
	gui.FormMain.txtDiamiterMM.Enabled(false)
	gui.FormMain.txtFeatureQty.Enabled(false)
	gui.FormMain.txtEstProTimes.Enabled(false)
	gui.FormMain.cmdAddFeature.Enabled(false)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.disableMaterialFields.End

Program.Sub.enableMaterialFields.Start
f.Intrinsic.Control.Try
	gui.FormMain.txtMaterialName.Enabled(true)
	gui.FormMain.cmdMaterialLookupCORE.Enabled(true)
	gui.FormMain.txtMaterialDesc.Enabled(true)
	gui.FormMain.txtSheetCost.Enabled(true)
	gui.FormMain.txtSheetUM.Enabled(true)
	gui.FormMain.txtSheetMarkup.Enabled(true)
	gui.FormMain.txtSheetMinCharge.Enabled(true)
	gui.FormMain.txtMainPerSheet.Enabled(true)
	gui.FormMain.txtCutPieceLength.Enabled(true)
	gui.FormMain.txtCutPieceWidth.Enabled(true)
	gui.FormMain.ddlWorkCenterLaser.Enabled(true)
	gui.FormMain.txtCutSetupTime.Enabled(true)
	gui.FormMain.txtCutSetRate.Enabled(true)
	gui.FormMain.txtCutBillRate.Enabled(true)
	gui.FormMain.txtSpeed.Enabled(true)
	gui.FormMain.ddlFeature.Enabled(true)
	gui.FormMain.txtDiamiterMM.Enabled(true)
	gui.FormMain.txtFeatureQty.Enabled(true)
	gui.FormMain.txtEstProTimes.Enabled(true)
	gui.FormMain.cmdAddFeature.Enabled(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.enableMaterialFields.End

Program.Sub.evalCost.Start
f.Intrinsic.Control.Try
	V.Local.fLength.Declare
	V.Local.fWidth.Declare
	V.Local.lMicron.Declare
	V.Local.fPowdVendPrice.Declare
	V.Local.fChemCost.Declare
	V.Local.fPowderCost.Declare
	V.Local.fResult.Declare
	V.Local.fTemp.Declare	
	V.Local.fLabour.Declare
	V.Local.fMan.Declare
	V.Local.fLineSpeed.Declare
	V.Local.fLabourRate.Declare
	V.Local.fGap.Declare
	
	'Set the product length, exit if 0
	V.Local.fLength.Set(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.SelectCase(V.Local.fLength)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.control.exitsub
	F.Intrinsic.Control.EndSelect
	
	'Divide by 1 metre, exit if 0
	F.Intrinsic.Math.Div(V.Local.fLength,1000,V.Local.fLength)
	V.Local.FWidth.set(V.Screen.SS_Form!txtProdWidth.Text)
	F.Intrinsic.Control.SelectCase(V.Local.fwidth)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.control.exitsub
	F.Intrinsic.Control.EndSelect
	
	'If width > 1600, exit routine
	F.Intrinsic.control.if(V.Screen.SS_Form!txtProdWidth.Text,>,1600)
		F.Intrinsic.ui.msgbox("Width must be less than 1600mm")
		F.Intrinsic.control.exitsub
	F.Intrinsic.control.endif
	F.Intrinsic.Math.Div(V.Local.fwidth,1000,V.Local.fwidth)
	
	'Set microns, powder vendor price, calculate valkue
	V.Local.lMicron.Set(V.Screen.SS_Form!txtPowdThick.Text)
	V.Local.fPowdVendPrice.Set(V.Screen.SS_Form!txtPowdPrice.text)
	F.Intrinsic.Math.Mult(V.Local.fLength,V.Local.fWidth,V.Local.fTemp)
	F.Intrinsic.Math.Mult(V.Local.fTemp,.2,V.Local.fTemp)
	F.Intrinsic.Math.Mult(V.Local.fTemp,V.Local.fPowdVendPrice,V.Local.fTemp)
	F.Intrinsic.Math.Mult(V.Local.fTemp,V.Local.lMicron,V.Local.fTemp)
	F.Intrinsic.Control.SelectCase(V.Local.fTemp)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.control.exitsub
	F.Intrinsic.Control.EndSelect
	
	'Divide by 45 and round up 2, this is the powder cost
	F.Intrinsic.Math.Div(V.Local.fTemp,45,V.Local.fResult)
	F.Intrinsic.Math.Round(V.Local.fResult,2,V.Local.fResult)
	V.Local.fPowderCost.Set(V.Local.fResult)
	gui.SS_Form.txtPowdCost.Text(V.Local.fResult)
	F.Intrinsic.Control.SelectCase(V.Local.fResult)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.control.exitsub
	F.Intrinsic.Control.EndSelect
	
	'If the powder vendor price is 0, then exit 
	F.Intrinsic.Control.SelectCase(V.Local.fPowdVendPrice)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.control.exitsub
	F.Intrinsic.Control.EndSelect
	
	'Powder coating calculation
	F.Intrinsic.Math.Div(V.Local.fResult,V.Local.fPowdVendPrice,V.Local.fResult)
	F.Intrinsic.Math.Mult(V.Local.fResult,1.5,V.Local.fChemCost)
	F.Intrinsic.Math.Round(V.Local.fChemCost,2,V.Local.fChemCost)
	V.Local.lLineHeight.declare(long,1650)
	V.Local.lLessStartHook.declare(long,50)
	V.Local.lAvailableHang.declare(long)
	F.Intrinsic.math.sub(V.Local.lLineHeight,V.Local.lLessStartHook,V.Local.lAvailableHang)
	V.Local.fSpace.declare(float)
	F.Intrinsic.math.sub(V.Local.lAvailableHang,V.Screen.SS_Form!txtProdWidth.Text,V.Local.fspace)
	V.Local.lAddLineHook.declare(long,170)
	V.Local.fAddProdHang.declare(long)
	F.Intrinsic.math.add(V.Screen.SS_Form!txtProdWidth.Text,V.Local.laddlinehook,V.Local.fAddProdHang)
	V.Local.fVertHang.Declare(Float)
	F.Intrinsic.control.if(V.Local.fSpace,=,0)
	F.Intrinsic.control.else
	F.Intrinsic.math.div(V.Local.fSpace,V.Local.fAddProdHang,V.Local.fVertHang)
	F.Intrinsic.control.endif
	F.Intrinsic.math.floor(V.Local.fverthang,V.Local.fverthang)
	F.Intrinsic.math.add(V.Local.fverthang,1,V.Local.fverthang)

	'Set default values, and if 0 then exit
	V.Local.fMan.Set(V.Screen.SS_Form!txtMan.text)
	V.Local.fLabourRate.Set(V.Screen.SS_Form!txtLabourRate.Text)
	V.Local.fLineSpeed.Set(V.Screen.SS_Form!txtLineSpeed.text)
	V.Local.fGap.Set(V.Screen.SS_Form!txtGap.text)
	F.Intrinsic.Control.SelectCase(V.Local.fGap)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.control.exitsub
	F.Intrinsic.Control.EndSelect
	
	'More Calculation work...
	F.Intrinsic.Math.Div(V.Local.fGap,1000,V.Local.fGap)
	V.Local.fSetup.Declare(float)
	V.Local.fSetup.Set(V.Screen.SS_Form!txtSetupCost.Text)
	F.Intrinsic.Math.Mult(V.Local.fSetup,.01,V.Local.fSetup)
	F.Intrinsic.Math.Add(V.Local.fSetup,1,V.Local.fSetup)
	V.Local.FTEMP.Set(0)
	F.Intrinsic.control.if(V.Local.fVertHang,=,0)
		F.Intrinsic.control.exitsub
	F.Intrinsic.control.else
		F.Intrinsic.Math.Div(V.Local.fLength,V.Local.fVertHang,V.Local.FTEMP)
	F.Intrinsic.control.endif
	
	'And more calculation work....
	F.Intrinsic.Math.Add(V.Local.FTEMP,V.Local.fGap,V.Local.FTEMP)
	F.Intrinsic.Math.Mult(V.Local.FTEMP,V.Local.fSetup,V.Local.FTEMP)
	F.Intrinsic.Math.Div(V.Local.FTEMP,V.Local.fLineSpeed,V.Local.FTEMP)
	F.Intrinsic.Math.Mult(V.Local.FTEMP,V.Local.fMan,V.Local.FTEMP)
	F.Intrinsic.Control.SelectCase(V.Local.fTemp)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.control.exitsub
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Math.Div(V.Local.FTEMP,60,V.Local.FTEMP)
	F.Intrinsic.Math.Mult(V.Local.FTEMP,V.Local.fLabourRate,V.Local.fLabour)
	F.Intrinsic.Math.Round(V.Local.fLabour,2,V.Local.fLabour)
	gui.SS_Form.txtLabourCost.Text(V.Local.fLabour)
	gui.SS_Form.txtChemCost.Text(V.Local.fChemCost)
	V.Local.fPrice.Declare(float,0)
	F.Intrinsic.math.Add(V.Local.fLabour,V.Local.fChemCost,V.Local.fPrice)
	F.Intrinsic.Math.Add(V.Local.fPrice,V.Local.fPowderCost,V.Local.fPrice)
	F.Intrinsic.math.Round(V.Local.fPrice,2,V.Local.fPrice)
	gui.SS_Form.txtPricePerUnit.Text(V.Local.fPrice)
	gui.SS_Form.lblCalcPriceResult.Caption(V.Local.fPrice)
	V.Local.fNetPrice.Declare(float)
	V.Local.fmarkup.Declare(float)
	V.Local.fmarkup.Set(V.Screen.SS_Form!txtMarkup.Text)
	F.Intrinsic.Math.Mult(V.Local.fmarkup,.01,V.Local.fmarkup)
	F.Intrinsic.Math.Add(V.Local.fmarkup,1,V.Local.fmarkup)
	F.Intrinsic.Math.Mult(V.Local.FPrice,V.Local.fmarkup,V.Local.fNetPrice)
	V.Local.sResult.Declare(string)
	V.Local.sresult2.Declare(string)
	F.Intrinsic.Math.Round(V.Local.fNetPrice,2,V.Local.fNetPrice)
	F.Intrinsic.String.Format(V.Local.fNetPrice,"$###,###.00",V.Local.sResult)
	gui.SS_Form.lblNetPriceResult.Caption(V.Local.sResult)

	V.Local.fMinimumCharge.Declare(float,45)
	F.Intrinsic.String.Format(V.Local.fMinimumCharge,"$##.00",V.Local.sresult2)
	gui.SS_Form.lblMinChargeResult.Caption(V.Local.sresult2)
	V.Local.fGrandTotal.Declare(float,0)

	'If less than minimum charge, then minimum charge, else price
	F.Intrinsic.Control.SelectCase(V.Local.fNetPrice)
		F.Intrinsic.Control.CaseRange(0,45)
			V.Local.fGrandTotal.Set(V.Local.fMinimumCharge)
		F.Intrinsic.control.caseelse
			V.Local.fGrandTotal.Set(V.Local.fNetPrice)
	F.Intrinsic.Control.EndSelect
	
	gui.SS_Form.lblGT.caption(V.Local.fGrandTotal)
	gui.FormMain.cmdPowderCalculator.backcolor(V.Color.ltgreen)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.evalCost.End

Program.Sub.OPENMaterialLookupCORESYSTEM.Start
'open material info from core system.
f.Intrinsic.Control.Try
	V.Local.sParams.Declare
	v.Local.sMaterialCode.Declare
	v.Local.sMaterialLocation.Declare
	v.Local.sMaterialCode.set(v.Screen.FormMain!txtMaterialName.Text)
	f.Intrinsic.Control.If(v.Local.sMaterialCode,!=,"")
		F.Intrinsic.String.ConcatCallWrapperArgs(v.Caller.CompanyCode,"V","","",v.Local.sMaterialCode.Trim,"",V.Local.sParams)
		F.Global.General.CallWrapperSync("3500",V.Local.sParams)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.OPENMaterialLookupCORESYSTEM.End

Program.Sub.OPENPartInfomationCORESYSTEM.Start
f.Intrinsic.Control.Try
	V.Local.sParams.Declare
	v.Local.sPartCode.Declare
	v.Local.sPartLocation.Declare
	v.Local.sPartCode.set(v.Screen.FormMain!txtPartCode.Text)
	f.Intrinsic.Control.If(v.Local.sPartCode,!=,"")
		F.Intrinsic.String.ConcatCallWrapperArgs(v.Caller.CompanyCode,"V","","",v.Local.sPartCode.Trim,"",V.Local.sParams)
		F.Global.General.CallWrapperSync("3500",V.Local.sParams)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.OPENPartInfomationCORESYSTEM.End

Program.Sub.getAllBOMParts.Start
'f.Intrinsic.Control.CallSub(GetBOM,"Part",v.Args.Part)
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.i.Declare
	f.Intrinsic.String.Build("SELECT * FROM V_BOM_MSTR WHERE PARENT='{0}' and Part<>''",v.Args.Part,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("dtBOMM","con",v.Local.sSQL)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtBOMM.RowCount--,1)
		f.Data.DataTable.AddRow("dtAllBOMParts","Part",v.DataTable.dtBOMM(v.Local.i).PART!FIELDVALTRIM,"Qty",v.DataTable.dtBOMM(v.Local.i).Quantity!FIELDVAL)
		F.Intrinsic.Control.CallSub(getAllBOMParts,"Part",v.DataTable.dtBOMM(v.Local.i).PART!FIELDVALTRIM)
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.getAllBOMParts.End

Program.Sub.getRouterLineData.Start
f.Intrinsic.Control.Try
	v.Local.sret.Declare
	v.Local.sRet2.Declare
	v.Local.ssql.Declare
	v.Local.fSellEA.Declare
	v.Local.fLabPrice.Declare
	v.Local.sPartNumber.Declare
	v.Local.sPartNumber.Set(v.Args.Part)
	v.Local.sPartDescription.Declare
	v.Local.sPartDescription.Set(v.Args.Description)
	v.Local.sSwitch.Declare
	v.Local.sSwitch.Set(v.Args.Switch)
	v.Local.sTimeUnit.Declare
	v.Local.fRunLaser.Declare
	v.Local.fRunLab.Declare
	v.Local.fMatCost.Declare
	v.Local.fPartsPerSheet.Declare
	v.Local.fPartsPerSheetCalc.Declare
	v.Local.fRunMat.Declare
	v.Local.iSeq.Declare
	v.Local.iSeq.Set(200)
	V.Local.iLabSeq.Declare
	v.Local.i.Declare
	v.Local.iCompSeq.Declare
	v.Local.iCompSeq.Set(50)
	v.Local.sCompSeq.Declare
	v.Local.sProcess.Declare
	v.Local.sSeq.Declare
	v.Local.sColName.Declare
	v.Local.sSpecial.Declare
	v.Local.sqty.Declare
	v.Local.sMsg.Declare
	v.Local.fQty.Declare
	v.Local.iWork.Declare
	v.Local.iComp.Declare
	v.Local.fMatMarkup.Declare
	v.Local.fsetLab.Declare
	v.Local.fBillRate.Declare
	v.Local.fSetupRate.Declare
	v.Local.fSetupTime.Declare
	
	
	'''''''START IMPORTANT NOTE''''''''''''''
	'LABOUR MUST ALWAYS BE HOURS
	'LASER CUTTING MUST ALWAYS BE IN SECONDS
	'USERS CAN USE WHATEVER TIME UNIT 
	'THEY WANT, BUT IT MUST BE CONVERTED FOR 
	'THE CALCULATION ROUTINE TO WORK PROPERLY
	'''''''END IMPORTANT NOTE''''''''''''''''
	
	f.Intrinsic.Control.SelectCase(v.Local.sSwitch)
		f.Intrinsic.Control.Case("S")
			'Pull in Router detail
			f.Intrinsic.Control.If(v.DataTable.dtRouterLineData.Exists)
				f.Data.DataTable.Close("dtRouterLineData")
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.Create("dtRouterLineData",true)
			f.Data.DataTable.AddColumn("dtRouterLineData","PART_WC_OUTSIDE","String")
			f.Data.DataTable.AddColumn("dtRouterLineData","LMO","String")
			f.Data.DataTable.AddColumn("dtRouterLineData","TAG","String")
			f.Data.DataTable.AddColumn("dtRouterLineData","SEQ","String")
			f.Data.DataTable.AddColumn("dtRouterLineData","PPS","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","MinCharge","String")
			f.Data.DataTable.AddColumn("dtRouterLineData","SET_UP","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","GSSSETUP","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","RUN_TIME","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","RATE","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","Markup","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","ProcessRate","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","SetupRate","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","GSSMinCharge","Float")
			f.Data.DataTable.AddColumn("dtRouterLineData","LABUM","String")
			f.Data.DataTable.AddColumn("dtRouterLineData","TimeUnit","String")
			f.Data.DataTable.AddColumn("dtRouterLineData","SellPrice","String")
			
			'Material
			v.Local.fMatCost.Set(v.Screen.FormMain!txtSheetCost.text)
			v.Local.fPartsPerSheet.Set(v.Screen.FormMain!txtMainPerSheet.text)
			F.Intrinsic.Control.If(V.Local.fPartsPerSheet,<>,0)
				F.Intrinsic.Math.Div(1,V.Local.fPartsPerSheet,V.Local.fPartsPerSheetCalc)
			F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.If(v.Screen.FormMain!chkNoMaterial.Value,=,"1")
				v.Local.sSpecial.Set("NOMATERIAL")
			f.Intrinsic.Control.ElseIf(v.Screen.FormMain!chkCustomerSupply.Value,=,"1")
				v.Local.sSpecial.Set("MATERIALCUST")
			F.Intrinsic.Control.Else
				V.Local.sSpecial.Set("MATERIAL")
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.If(V.Screen.FormMain!txtSheetMarkup.text,=,"")
				v.Local.fmatMarkup.Set(0)
			f.Intrinsic.Control.Else
				v.Local.fMatMarkup.Set(V.Screen.FormMain!txtSheetMarkup.text)
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.AddRow("dtRouterLineData","PART_WC_OUTSIDE",V.Screen.FormMain!txtMaterialName.text, "LMO","M","TAG",V.Local.sSpecial,"SEQ","000100","PPS",v.Local.fPartsPerSheet,"MinCharge",V.Screen.FormMain!txtSheetMinCharge.TEXT,"SET_UP",0,"RUN_TIME",v.Local.fPartsPerSheetCalc,"RATE",v.Local.fMatCost,"MARKUP",V.Local.fMatMarkup,"ProcessRate",0,"SetupRate",0)
			
			'Components
			f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtMaterials.RowCount--,1)
				f.Intrinsic.Math.Add(v.Local.iCompSeq,1,v.Local.iCompSeq)
				f.Intrinsic.String.LPad(v.Local.iCompSeq,"0",6,v.Local.sCompSeq)
				f.Data.DataTable.AddRow("dtRouterLineData","PART_WC_OUTSIDE",v.DataTable.dtMaterials(v.Local.i).Code!fieldval,"LMO","M","PPS",0,"MinCharge","","SEQ",v.Local.sCompSeq,"SET_UP",v.DataTable.dtMaterials(v.Local.i).SetQty!fieldval,"RUN_TIME",v.DataTable.dtMaterials(v.Local.i).QTY!Fieldval,"RATE",v.DataTable.dtMaterials(v.Local.i).UnitCost!fieldval,"Markup",v.DataTable.dtMaterials(v.Local.i).Markup!fieldval,"ProcessRate",0,"SetupRate",0)
			f.Intrinsic.Control.Next(v.Local.i)
			v.Local.iCompSeq.Set(0)
			
			'Laser, convert seconds into hours
			f.Intrinsic.Control.If(v.Local.sSpecial.Trim,<>,"NOMATERIAL")
				f.Data.DataTable.Compute("dtFeaturesTable","SUM(Time)","",v.Local.fRunLaser)
				f.Intrinsic.Math.Div(v.Local.fRunLaser,60,v.Local.fRunLaser)
				f.Intrinsic.Math.Div(v.Local.fRunLaser,60,v.Local.fRunLaser)
				
				f.Intrinsic.Control.If(v.Screen.FormMain!txtCutSetupTime.TEXT,=,"")
					v.Local.fSetupTime.Set(0)
				f.Intrinsic.Control.Else
					v.Local.fSetupTime.Set(v.Screen.FormMain!txtCutSetupTime.TEXT)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Screen.FormMain!txtCutBillRate.TEXT,=,"")
					v.Local.fBillRate.Set(0)
				f.Intrinsic.Control.Else
					v.Local.fBillRate.Set(v.Screen.FormMain!txtCutBillRate.TEXT)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Screen.FormMain!txtCutSetRate.TEXT,=,"")
					v.Local.fSetupRate.Set(0)
				f.Intrinsic.Control.Else
					v.Local.fSetupRate.Set(v.Screen.FormMain!txtCutSetRate.TEXT)
				f.Intrinsic.Control.EndIf
				
				f.Data.DataTable.AddRow("dtRouterLineData","PART_WC_OUTSIDE",V.Screen.FormMain!ddlWorkCenterLaser.Value,"LMO","L","TAG","Cutting","SEQ","000200","PPS",0,"MinCharge","","SET_UP",v.Local.fSetupTime,"RUN_TIME",v.Local.fRunLaser,"RATE",0,"Markup",0,"ProcessRate",V.Local.fBillRate,"SetupRate",v.Local.fSetupRate)
			f.Intrinsic.Control.EndIf
			
			'Labour
			f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtWorkSelection.RowCount--,1)
				f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).WC!Fieldvaltrim,=,"PROG")
					'Need to pull from file!
					v.Local.sSeq.Set("000050")
				f.Intrinsic.Control.Else
					f.Intrinsic.Math.Add(v.Local.iSeq,100,v.Local.iSeq)
					f.Intrinsic.String.LPad(v.Local.iSeq,"0",6,v.Local.sSeq)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).LMO!Fieldvaltrim,<>,"O")
					'Always in Minutes
					v.Local.sProcess.Set(v.DataTable.dtWorkSelection(v.Local.i).Process!fieldval)
					f.Intrinsic.Control.If(v.Local.sProcess.Trim,<>,"")
						v.Local.fRunLab.Set(v.DataTable.dtWorkSelection(v.Local.i).Process!fieldval)
					f.Intrinsic.Control.Else
						v.Local.frunlab.set(0)
					f.Intrinsic.Control.EndIf
					f.Data.DataTable.AddRow("dtRouterLineData","TimeUnit",v.DataTable.dtWorkSelection(v.Local.i).T!Fieldval,"PART_WC_OUTSIDE",v.DataTable.dtWorkSelection(v.Local.i).WC!Fieldval,"LMO",v.DataTable.dtWorkSelection(v.Local.i).LMO!Fieldval,"SEQ",v.Local.sSeq,"PPS",0,"MinCharge",0,"SET_UP",v.DataTable.dtWorkSelection(v.Local.i).SETup!fieldval,"RUN_TIME",v.Local.fRunLab,"RATE",v.DataTable.dtWorkSelection(v.Local.i).CostRate!fieldval,"Markup",0,"ProcessRate",v.DataTable.dtWorkSelection(v.Local.i).ProcessRate!fieldval,"SetupRate",v.DataTable.dtWorkSelection(v.Local.i).SetupRate!fieldval)
				f.Intrinsic.Control.Else
					v.Local.sProcess.Set(v.DataTable.dtWorkSelection(v.Local.i).Process!fieldval)
					f.Intrinsic.Control.If(v.Local.sProcess.Trim,<>,"")
						v.Local.fRunLab.Set(v.DataTable.dtWorkSelection(v.Local.i).Process!fieldval)
					f.Intrinsic.Control.Else
						v.Local.frunlab.set(0)
					f.Intrinsic.Control.EndIf
					f.Data.DataTable.AddRow("dtRouterLineData","TimeUnit",v.DataTable.dtWorkSelection(v.Local.i).T!Fieldval,"PART_WC_OUTSIDE",v.DataTable.dtWorkSelection(v.Local.i).WC!Fieldval,"LMO",v.DataTable.dtWorkSelection(v.Local.i).LMO!Fieldval,"SEQ",v.Local.sSeq,"PPS",0,"GSSMinCharge",v.DataTable.dtWorkSelection(v.Local.i).SetupRate!fieldval,"SET_UP",v.DataTable.dtWorkSelection(v.Local.i).SETup!fieldval,"RUN_TIME",v.Local.fRunLab,"RATE",v.DataTable.dtWorkSelection(v.Local.i).CostRate!fieldval,"Markup",0,"ProcessRate",v.DataTable.dtWorkSelection(v.Local.i).ProcessRate!fieldval,"SetupRate",v.DataTable.dtWorkSelection(v.Local.i).SetupRate!fieldval)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Next(v.Local.i)
			
			
			'Set quantity
			v.Local.sqty.Set(v.screen.FormMain!txtQuantityBrake.text)
			f.Intrinsic.Variable.AddRV("rQtyBreak",v.Local.sqty)
			
		F.Intrinsic.Control.Case("M")
		
			'Pull in Router detail
			f.Intrinsic.String.Build("SELECT PART_WC_OUTSIDE, LMO, SORT_CODE AS 'TAG', LINE_ROUTER AS 'SEQ', 0.00 AS PPS, ' ' AS 'MinCharge', 0.00 as 'SET_UP', SET_UP AS 'GSSSetup', RUN_TIME, RATE, 0 AS 'Markup', 0.00 as 'ProcessRate', 0.00 as 'SetupRate', ' ' as 'LABUM', AMT_MINIMUM AS 'GSSMinCharge', ' '  as 'TimeUnit', ' ' as 'SellPrice' FROM ROUTER_LINE WHERE ROUTER='{0}' and line_router>'000000' ORDER BY LINE_ROUTER",v.Local.sPartNumber.Trim,v.Local.sSQL)
			
			f.Intrinsic.Control.If(v.DataTable.dtRouterLineData.Exists)
				f.Data.DataTable.Close("dtRouterLineData")
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.CreateFromSQL("dtRouterLineData","con",v.Local.sSQL,true)
						
			'Grab Supplementary Material data
			f.Data.DataTable.Select("dtRouterLineData","TAG='MATERIAL' or TAG='MATERIALCUST'",v.Local.sRet2)
			f.Intrinsic.String.Build("SELECT PER_SHEET, markup, min_charge FROM GAB_6595_MEMO_MAT WHERE PART='{0}' AND SPECIAL<>'NOMATERIAL'",v.Local.sPartNumber.Trim,v.Local.sSQL)
			F.ODBC.Connection!CON.EXECUTEANDRETURN(V.Local.ssql,V.Local.sRet)
			F.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				f.Intrinsic.Control.If(v.Local.sret(0).trim,=,"")
					f.Intrinsic.String.Concat("Catastrophic error, parts per sheet missing for part ",v.Local.sPartNumber,v.Local.sMsg)
					f.Intrinsic.UI.Msgbox(v.Local.sMsg)
				f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(v.Local.sRet(0),<>,0)
				f.Intrinsic.Control.AndIf(v.Local.sret(0).trim,<>,"")
					F.Intrinsic.Math.Div(1,v.Local.sRet(0),V.Local.fRunMat)
				F.Intrinsic.Control.EndIf
				f.Data.DataTable.SetValue("dtRouterLineData",v.Local.sret2,"PPS",v.Local.sRet(0),"Markup",v.Local.sret(1),"MinCharge",v.Local.sret(2),"RUN_TIME",v.local.fRunMat)
			F.Intrinsic.Control.EndIf
			
			'Grab Supplementary Component Data
			f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtRouterLineData.RowCount--,1)
				f.Data.DataTable.SetValue("dtRouterLineData",v.Local.i,"SET_UP",v.DataTable.dtRouterLineData(v.Local.i).GSSSetup!fieldval)
				f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.i).LMO!Fieldvaltrim,=,"M","and",v.DataTable.dtRouterLineData(v.Local.i).Tag!fieldvaltrim,<>,"MATERIAL",v.DataTable.dtRouterLineData(v.Local.i).Tag!fieldvaltrim,<>,"MATERIALCUST")
					f.Intrinsic.String.Build("SELECT MARKUP FROM GAB_6595_MEMO_COMP WHERE PART='{0}' AND COMP_CODE='{1}' AND ID={2}",v.Local.sPartNumber.Trim,v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,v.Local.iComp,v.Local.ssql)
					F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
					f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
						f.Data.Datatable.SetValue("dtRouterLineData",v.Local.i,"Markup",v.GLOBAL.fMatMarkup)
					f.Intrinsic.Control.Else
						f.Data.DataTable.SetValue("dtRouterLineData",v.Local.i,"Markup",v.Local.sret)
					f.Intrinsic.Control.EndIf
					f.Intrinsic.Math.Add(v.Local.iComp,1,v.Local.iComp)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Next(v.Local.i)
			v.Local.iComp.Set(0)
			
			'Grab Supplementary Labour & Outside Process Data
			f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtRouterLineData.RowCount--,1)
				f.Intrinsic.Control.If(v.DataTable.dtRouterLineData(v.Local.i).LMO!Fieldvaltrim,=,"L","and",v.DataTable.dtRouterLineData(v.Local.i).Tag!fieldvaltrim,<>,"Cutting")
					f.Intrinsic.Math.Add(v.Local.iWork,1,v.Local.iWork)
					f.Intrinsic.Math.ConvertToLong(v.DataTable.dtRouterLineData(v.Local.i).SEQ!fieldvaltrim,v.Local.iLabSeq)
					f.Intrinsic.String.Build("SELECT SETUP_RATE, PROCESS_RATE, UM, SETUP, PROCESS, TIME_UNIT FROM GAB_6595_STEPS WHERE PART='{0}' AND WC='{1}' AND P={2}",v.Local.sPartNumber.Trim,v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,v.Local.iLabSeq,v.Local.ssql)
					F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
					F.Intrinsic.Control.If(V.Local.sret.Trim,=,"")
						F.Intrinsic.String.Build("select STANDARD_BILL FROM V_WORKCENTERS WHERE MACHINE='{0}'",v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,v.Local.ssql)
						f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.fBillRate)
						V.Local.fRunLab.Set(V.DataTable.dtRouterLineData(V.Local.I).RUN_TIME!fieldval)
						V.Local.fsetLab.Set(V.DataTable.dtRouterLineData(V.Local.I).GSSSetup!fieldval)
						f.Data.DataTable.SetValue("dtRouterLineData",v.Local.i,"SetupRate",v.Local.fBillrate,"ProcessRate",v.Local.fBillRate,"LABUM","EA","SET_UP",v.Local.fSetLab,"RUN_TIME",v.Local.fRunLab,"TimeUnit","H")
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Split(V.Local.sret,"*!*",V.Local.sret)
						v.Local.sTimeUnit.Set(v.Local.sret(5))
						f.Data.DataTable.SetValue("dtRouterLineData",v.Local.i,"SetupRate",v.Local.sret(0),"ProcessRate",v.Local.sret(1),"LABUM",v.Local.sret(2),"SET_UP",v.Local.sret(3),"RUN_TIME",v.Local.sret(4),"TimeUnit",v.Local.sTimeUnit)
					F.Intrinsic.Control.EndIf
				f.Intrinsic.Control.ElseIf(v.DataTable.dtRouterLineData(v.Local.i).LMO!Fieldvaltrim,=,"O")
					f.Intrinsic.Math.ConvertToLong(v.DataTable.dtRouterLineData(v.Local.i).SEQ!fieldvaltrim,v.Local.iLabSeq)
					f.Intrinsic.String.Build("SELECT SETUP_RATE, PROCESS_RATE, UM, SETUP, PROCESS FROM GAB_6595_STEPS WHERE PART='{0}' AND WC='{1}' AND P={2}",v.Local.sPartNumber.Trim,v.DataTable.dtRouterLineData(v.Local.i).PART_WC_OUTSIDE!FIELDVALTRIM,v.Local.iLabSeq,v.Local.ssql)
					F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
					f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
						f.Data.DataTable.SetValue("dtRouterLineData",v.Local.i,"SetupRate",V.DataTable.dtRouterLineData(V.Local.I).GSSMinCharge!fieldval,"ProcessRate",v.Global.fOutMarkup,"LABUM","EA","SET_UP",V.DataTable.dtRouterLineData(V.Local.i).GSSSetup!fieldval,"RUN_TIME",v.DataTable.dtRouterLineData(v.Local.i).RUN_TIME!Fieldval)
					f.Intrinsic.Control.Else
						f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
						f.Data.DataTable.SetValue("dtRouterLineData",v.Local.i,"SetupRate",v.Local.sret(0),"ProcessRate",v.Local.sret(1),"LABUM",v.Local.sret(2),"SET_UP",v.Local.sret(3),"RUN_TIME",v.local.sret(4))
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Next(v.Local.i)
			v.Local.iWork.Set(0)
			
			
			'Grab Laser Data
			f.Intrinsic.String.Build("SELECT DISTINCT RUN_RATE, SET_RATE, SET_TIME FROM GAB_6595_MEMO_CUT WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				f.Data.DataTable.Select("dtRouterLineData","TAG='Cutting'",v.Local.sRet2)
				
				F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"***NORETURN***")
					f.Data.DataTable.SetValue("dtRouterLineData",v.Local.sret2,"ProcessRate",v.Local.sRet(0),"SetupRate",v.Local.sret(1),"SET_UP",v.Local.sret(2))
		
					f.Intrinsic.String.Build("SELECT IFNULL(sum(EST_TIME),0) FROM GAB_6595_MEMO_CUT WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
					f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fRunLaser)
					F.Intrinsic.Control.If(V.Local.fRunLaser,<>,0)
						f.Intrinsic.Math.Div(v.Local.fRunLaser,60,v.Local.fRunLaser)
						f.Intrinsic.Math.Div(v.Local.fRunLaser,60,v.Local.fRunLaser)
					F.Intrinsic.Control.EndIf
					f.Data.DataTable.SetValue("dtRouterLineData",v.Local.sret2,"RUN_TIME",v.Local.fRunLaser)
				f.Intrinsic.Control.EndIf
				
			f.Intrinsic.Control.EndIf

			'Set Qty
			f.Intrinsic.Control.CallSub(ConcatQuantityBuild,"Part",v.Local.sPartNumber)
			F.Intrinsic.Variable.ArgToVar("rQtyBreak",v.Local.sQty)
			f.Intrinsic.Variable.AddRV("rQtyBreak",v.Local.sqty)
			
	f.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.getRouterLineData.End

Program.Sub.convertToHours.Start
f.Intrinsic.Control.Try
	v.Local.fRunTime.Declare
	
	F.Intrinsic.Control.If(v.Args.TimeUnit.TRIM,=,"M")
		F.Intrinsic.Math.Div(v.Args.MyTime,60,V.Local.fRunTime)
	f.Intrinsic.Control.ElseIf(v.Args.TimeUnit.TRIM,=,"S")
		F.Intrinsic.Math.Div(V.args.MyTime,60,V.Local.fRunTime)
		F.Intrinsic.Math.Div(V.Local.fRunTime,60,V.Local.fRunTime)
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Variable.AddRV("rRunTime",v.Local.fRunTime)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.convertToHours.End

Program.Sub.CalcBOM.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.j.Declare(long)
	v.Local.fNewQty.Declare
	v.Local.fSum.Declare
	v.Local.fTotalSellPriceEA.Declare
	v.Local.fKitPrice.Declare
	v.Local.ssql.Declare
	v.Local.sQty.Declare
	v.Local.sSwitch.Declare
	v.local.sSwitch.Set(v.Args.Switch)
	v.Local.sDescription.Declare
	v.Local.sDescription.Set(v.Args.Description)
	v.Local.sQuickAdd.Declare
	v.Local.sQuickAdd.Set(v.Args.QuickAdd)
	
	'Determine if this is on a screen or a multi build or a quick add
	F.Intrinsic.Control.If(V.Local.sSwitch,=,"M")
		f.Intrinsic.Control.CallSub(getRouterLineData,"Part",v.Args.Part,"Description",v.local.sDescription,"Switch",v.local.sSwitch)
		f.Intrinsic.Variable.ArgToVar("rQtyBreak",v.Local.sqty)
	F.Intrinsic.Control.Else
		v.Local.sQty.Set(v.Screen.FormMain!txtQuantityBrake.text)
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Args.QuickAdd,=,"Y")
		v.Local.sQty.Set(v.Args.QtyOverride)
	f.Intrinsic.Control.EndIf
	
	
	'Clear out the BOM Price Buildup table
	f.Data.DataTable.DeleteRow("dtPriceBuildupBOM")
	f.Data.DataTable.DeleteRow("dtAllBOMParts")
	
	'Create table if it does not exist
	f.Intrinsic.Control.If(v.DataTable.dtKitPrices.Exists)
		f.Data.DataTable.Close("dtKitPrices")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtKitPrices")
		f.Data.DataTable.AddColumn("dtKitPrices","Qty",float)
		f.Data.DataTable.AddColumn("dtKitPrices","Price",float)
	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(getAllBOMParts,"Part",v.Args.Part)
	
	f.Intrinsic.Control.If(v.Local.sQty.Trim,<>,"")
		f.Intrinsic.String.SplitCSV(v.Local.sQty,v.Local.sQty)
	
		f.Intrinsic.Control.For(v.Local.i,0,v.Local.sQty.UBound)	
			'Calculate for the sub parts
			f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtAllBOMParts.RowCount--,1)
				f.Intrinsic.Control.If(v.DataTable.dtAllBOMParts(v.Local.j).RowState,<>,8)
					f.Intrinsic.Math.Mult(v.Local.sQty(v.Local.i),v.DataTable.dtAllBOMParts(v.Local.j).QTY!FIELDVAL,v.Local.fNewQty)
					f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.DataTable.dtAllBOMParts(v.Local.j).PART!Fieldvaltrim,"Description","N/A","Switch","M","QtyOverride",v.Local.fNewQty)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Next(v.Local.j)
			'Calculate for the top level
			f.Intrinsic.Control.If(v.Local.sQuickAdd,=,"Y")
				f.Intrinsic.Control.CallSub(CalculatePrice,"Part",V.Args.PART,"Description","N/A","Switch",V.Local.sSwitch,"QtyOverride","BOM","QuickAdd",v.Local.sQty)
			f.Intrinsic.Control.Else
				f.Intrinsic.Control.CallSub(CalculatePrice,"Part",V.Args.PART,"Description","N/A","Switch",V.Local.sSwitch,"QtyOverride","BOM","QuickAdd","")
			f.Intrinsic.Control.EndIf
			'Sum the Sell Price EA Column
			f.Data.DataTable.Compute("dtPriceBuildupBOM","Sum(ext)","",v.Local.fSum)
			f.Intrinsic.Control.If(v.Local.fSum,<>,0)
			f.Intrinsic.Control.AndIf(v.Local.sQty(v.Local.i),<>,0)
				f.Intrinsic.Math.Div(v.Local.fSum,v.Local.sQty(v.Local.i),v.Local.fSum)
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.AddRow("dtKitPrices","Qty",v.Local.sQty(v.Local.i),"Price",v.Local.fSum)
			f.Data.DataTable.DeleteRow("dtPriceBuildupBOM")
		f.Intrinsic.Control.Next(v.Local.i)
		
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtKitPrices.RowCount--,1)
			V.Local.fKitPrice.Set(v.DataTable.dtKitPrices(v.Local.i).Price!fieldval)
			f.Intrinsic.Math.Add(v.Local.fKitPrice,v.DataTable.dtPriceBuildupPart(v.local.i).SellPriceEA!fieldval,v.Local.fTotalSellPriceEA)
			f.Data.DataTable.SetValue("dtPriceBuildupPart",v.Local.i,"KitPrice",v.Local.fKitPrice,"SellPriceEA",v.Local.fTotalSellPriceEA)
		f.Intrinsic.Control.Next(v.Local.i)
		
		f.Intrinsic.Control.If(v.Local.sSwitch,=,"M")
			f.Data.DataTable.Merge("dtPriceBuildupPart","dtPriceBuildupMaster",false,4)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CalcBOM.End

Program.Sub.calculateRectangleTime.Start
f.Intrinsic.Control.Try
	v.Local.sSelectedFeature.Declare
	v.Local.sSelectedFeature.Set("Rectangle")
	v.Local.iSpeed.Declare
	v.Local.iSpeed.Set(v.Args.Speed)
	
	v.Local.fMath.Declare
	v.Local.sQtyColumnValue.Declare
	v.Local.sQtyColumnValue.Set(v.Args.Qty)
	v.Local.sWidthColumnValue.Declare
	v.Local.sWidthColumnValue.Set(v.Args.Width)
	v.Local.sLengthColumnValue.Declare
	v.Local.sLengthColumnValue.Set(v.Args.Length)
	v.Local.sWidthColumnValuetimestwo.Declare
	v.Local.sLengthColumnValuetimestwo.Declare
	v.Local.sLengthWidthCirc.Declare
	
	v.Local.sDataTable.Declare
	v.Local.sDataTable.Set(v.Args.MyForm)
	
	f.Intrinsic.Control.If(v.Local.sLengthColumnValue,=,"")
		v.Local.sLengthColumnValue.set("0")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sWidthColumnValue,=,"")
		v.Local.sWidthColumnValue.set("0")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sQtyColumnValue,=,"")
		v.Local.sQtyColumnValue.set("1")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.iSpeed,=,"")
		v.Local.iSpeed.set("0")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sLengthColumnValue,>,0, AND, v.Local.sWidthColumnValue,>,0)
		f.Intrinsic.Control.If(v.Local.iSpeed,>,0,AND, v.Local.sQtyColumnValue,>,0)
			f.Intrinsic.Control.If(v.Local.iSpeed.IsNumeric,=,True,AND, v.Local.sQtyColumnValue.IsNumeric,=,True)
				f.Intrinsic.Control.If(v.Local.sLengthColumnValue.IsNumeric,=,True,AND,v.Local.sWidthColumnValue.IsNumeric,=,True)
					f.Intrinsic.Math.Mult(v.Local.sLengthColumnValue,"2",v.Local.sLengthColumnValuetimestwo)
					f.Intrinsic.Math.Mult(v.Local.sWidthColumnValue,"2",v.Local.sWidthColumnValuetimestwo)
					f.Intrinsic.Math.Add(v.Local.sLengthColumnValuetimestwo,v.Local.sWidthColumnValuetimestwo,v.Local.sLengthWidthCirc)
					f.Intrinsic.Math.Mult(v.Local.sLengthWidthCirc,v.Local.sQtyColumnValue,v.Local.sLengthWidthCirc)
					f.Intrinsic.Math.Div(v.Local.sLengthWidthCirc,v.Local.iSpeed,v.Local.fMath)
					f.Intrinsic.Control.If(v.Local.sDataTable.Trim,=,"dtFeatures")
						f.Intrinsic.Math.Mult(v.Local.fMath,"60",v.Local.fMath)
					f.Intrinsic.Control.EndIf
					f.Intrinsic.Math.Round(v.Local.fMath,"2",v.Local.fMath)
					f.Intrinsic.Control.If(v.Args.MyRow,=,-1)
						f.Data.Datatable.AddRow(v.Local.sDataTable,"Feature",v.Local.sSelectedFeature,"Dim1",v.Local.sLengthColumnValue,"Dim2",v.Local.sWidthColumnValue,"Speed",v.Local.iSpeed,"Time",v.Local.fMath,"Qty",v.Local.sQtyColumnValue,"Length",v.Local.sLengthWidthCirc,"Pierce",0)
					f.Intrinsic.Control.Else
						f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.MyRow,"Time",v.Local.fMath)
					f.Intrinsic.Control.EndIf
					
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.calculateRectangleTime.End

Program.Sub.prepBOM.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	V.Local.sLine.Declare
	V.Local.sParent.Declare
	V.Local.sPart.Declare
	V.Local.sSeq.Declare
	V.Local.sDescription.Declare
	V.Local.sCount.Declare
	V.Local.sUM.Declare
	V.Local.sCategory.Declare
	V.Local.sSource.Declare
	V.Local.sMisc.Declare
	V.Local.iFor.Declare
	V.Local.i7.Declare
	V.Local.sRev.Declare
	V.Local.schild.Declare
	V.Local.sqty.Declare
	V.Local.spno.Declare
	V.Local.suom.Declare
	V.Local.sDesc.Declare
	V.Local.spad.Declare
	V.Local.spad1.Declare
	V.Local.spad2.Declare
	V.Local.spad3.Declare
	V.Local.sRMLine.Declare
	V.Local.sRMParent.Declare
	v.Local.ssql.Declare
	V.Local.sVendcode.Declare
	v.Local.sPL.Declare
	V.Local.sTempCategory.Declare
	
	F.Intrinsic.String.RPad(v.Args.Part," ",20,V.Local.sPart)
	F.Intrinsic.String.Left(V.Local.sPart,20,V.Local.sPart)
	
	'F.Intrinsic.String.RPad(v.Args.Rev," ",3,V.Local.sRev)
	'F.Intrinsic.String.Left(V.Local.sRev,3,V.Local.sRev)
	
	'Parent
	F.Intrinsic.String.RPad(V.Args.Parent," ",20,V.Local.sParent)
	F.Intrinsic.String.Concat(v.global.sfileupload,v.Local.sParent,v.global.sfileupload)
	
	'Sequences
	f.Intrinsic.String.LPad(v.args.Seq,"0",4,v.Local.sLine)
	F.Intrinsic.String.Concat(v.global.sfileupload,v.Local.sLine,v.global.sfileupload)
	
	'Quantity
	Function.Intrinsic.String.Format(v.Args.QTY,"####.0000", variable.local.sqty)
	F.Intrinsic.String.LPad(variable.local.sqty,"0",16,V.Local.sqty)
	F.Intrinsic.String.Concat(v.global.sfileupload,V.Local.sqty,v.global.sfileupload)
	
	'Part & Rev put together
	F.Intrinsic.String.GSSPartString(V.Local.sPart,V.Local.sRev,V.Local.sPart)
	f.Intrinsic.String.RPad(v.Local.sPart," ",20,v.Local.sPart)
	F.Intrinsic.String.Concat(v.global.sfileupload,V.Local.sPart,v.global.sfileupload)
	
	'UM
	F.Intrinsic.String.RPad(v.Args.UM," ",2,V.Local.sUM)
	F.Intrinsic.String.Left(V.Local.sUM,2,V.Local.sUM)
	F.Intrinsic.String.Concat(v.global.sfileupload,V.Local.sUM,v.global.sfileupload)
	
	'Descriptions
	F.Intrinsic.String.RPad(V.Args.DESC," ",30,V.Local.sdesc)
	'F.Intrinsic.String.RPad(" "," ",30,V.Local.sdesc)
	F.Intrinsic.String.Left(V.Local.sdesc,30,V.Local.sdesc)
	F.Intrinsic.String.Concat(v.global.sfileupload,V.Local.sdesc,v.global.sfileupload)
	
	'Free Pad
	F.Intrinsic.String.RPad(V.Local.spad1," ",113,V.Local.spad1)
	F.Intrinsic.String.Concat(v.global.sfileupload,V.Local.spad1,v.global.sfileupload)
	
	''Vendor Code
	'F.Intrinsic.String.RPad(v.Args.Vendor," ",6,V.Local.sVendcode)
	'F.Intrinsic.String.Left(V.Local.sVendcode,6,V.Local.sVendcode)
	'F.Intrinsic.String.Concat(v.global.sfileupload,V.Local.svendcode,v.global.sfileupload)
	
	'Free Pad
	'F.Intrinsic.String.RPad(V.Local.spad2," ",48,V.Local.spad2)
	'F.Intrinsic.String.Concat(v.global.sfileupload,V.Local.spad2,v.global.sfileupload)
	
	'Category
	F.Intrinsic.Control.If(V.Args.Category.Trim,=,"Phantom")
		F.Intrinsic.String.Concat(v.global.sfileupload,"P",v.global.sfileupload)
	f.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(v.global.sfileupload," ",v.global.sfileupload)
	F.Intrinsic.Control.EndIf
	
	'Source
	F.Intrinsic.String.Concat(v.global.sfileupload,V.args.Source,v.global.sfileupload)
	
	'Free Pad
	F.Intrinsic.String.RPad(V.Local.spad3," ",90,V.Local.spad3)
	F.Intrinsic.String.Concat(v.global.sfileupload,V.Local.spad3,v.global.sfileupload)
	
	f.Intrinsic.String.Concat(v.Global.sfileupload,v.Ambient.NewLine,v.Global.sfileupload)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.prepBOM.End

Program.Sub.uploadBOMs.Start
f.Intrinsic.Control.Try

	
	F.Global.General.CallWrapperSync(6010,"NS!*!50")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.uploadBOMs.End

Program.Sub.CalculateStandAloneSell.Start
f.Intrinsic.Control.Try
	v.Local.sFinalSell.Declare
	v.Local.fTotal.Declare
	f.Intrinsic.Math.Mult(v.Args.TotalQty,v.Args.Cost,v.Local.fTotal)
	f.Intrinsic.Math.Mult(v.Local.fTotal,v.Args.Markup,v.Local.sFinalSell)
	f.Intrinsic.Variable.AddRV("rSellPrice",v.Local.sFinalSell)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CalculateStandAloneSell.End

Program.Sub.SaveNest.Start
f.Intrinsic.Control.Try
	v.Local.sFileLocat.Declare
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.Caller.CompanyCode,"NEST\",v.Args.ID,"\Nest.xml",v.Local.sFileLocat)
	f.Data.DataTable.SaveToXML("Nest",0,true,v.Local.sFileLocat)
f.Intrinsic.Control.Catch
	f.in.ui.msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SaveNest.End

Program.Sub.chkCache_Click.Start
v.Local.sCacheFile.Declare(string)
v.Local.bCacheFile.Declare(Boolean)
f.Intrinsic.String.Concat(v.Caller.LocalGSSTempDir,v.Caller.CompanyCode,"_",v.Caller.User,"_RTR.xml",v.Local.sCacheFile)
f.Intrinsic.File.Exists(v.Local.sCacheFile,v.Local.bCacheFile)

f.Intrinsic.Control.If(v.Local.bCacheFile)
	f.Intrinsic.Control.If(v.Screen.frmQuickRouter!chkCache.Value,=,0)
		f.Intrinsic.File.DeleteFile(v.Local.sCacheFile)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.else
	'If checked, create the file
	f.Intrinsic.Control.If(v.Screen.frmQuickRouter!chkCache.Value,=,1)
		f.Data.DataTable.savetoxml("dtINV",0,true,v.Local.sCacheFile)	
	f.Intrinsic.Control.Else
		f.Intrinsic.File.DeleteFile(v.Local.sCacheFile)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf
Program.Sub.chkCache_Click.End

Program.Sub.chkCustomerSupply_Change.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.bLoading,=,False)	
		f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
			f.Intrinsic.Control.CallSub(CalcBOM,"Part",,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.chkCustomerSupply_Change.End

Program.Sub.chkNoMaterial_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	
	f.Intrinsic.Control.If(v.Screen.FormMain!chkNoMaterial.Value,=,"1")
		f.Intrinsic.Control.CallSub(disableMaterialFields)
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(enableMaterialFields)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Global.bLoading,=,False)	
		f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
			f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.chkNoMaterial_Click.End

Program.Sub.cmdAddComponent_Click.Start
f.Intrinsic.Control.Try
	v.Local.bExit.Declare
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	v.Local.sSell.Declare
	v.Local.fTotal.Declare
	v.Local.fMarkup.Declare
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	'Component Code
	v.Local.sCompCode.Declare
	v.Local.sCompCode.Set(v.Screen.FormMain!txtComponentCode.text)
	f.Intrinsic.Control.If(v.Local.sCompCode.Trim,=,"")
		gui.FormMain.txtComponentCode.BackColor(red)
		v.Local.bExit.Set(true)
	f.Intrinsic.Control.Else
		gui.FormMain.txtComponentCode.BackColor(white)
	f.Intrinsic.Control.EndIf
	
	'UM
	V.Local.sUM.Declare
	v.Local.sUM.Set(v.Screen.FormMain!txtComponentUM.text)
	f.Intrinsic.Control.If(v.Local.sUM.Trim,=,"")
		gui.FormMain.txtComponentUM.BackColor(red)
		v.Local.bExit.Set(true)
	f.Intrinsic.Control.Else
		gui.FormMain.txtComponentUM.BackColor(white)
	f.Intrinsic.Control.EndIf
	
	'Cost
	v.Local.sCost.Declare
	v.Local.sCost.Set(v.Screen.FormMain!txtComponentCost.text)
	f.Intrinsic.Control.If(v.Local.sCost.Trim,=,"")
		gui.FormMain.txtComponentCost.BackColor(red)
		v.Local.bExit.Set(true)
	f.Intrinsic.Control.Else
		gui.FormMain.txtComponentCost.BackColor(white)
	f.Intrinsic.Control.EndIf
	
	'Markup
	v.Local.sMarkup.Declare
	v.Local.sMarkup.Set(v.Screen.FormMain!txtComponentMarkup.text)
	f.Intrinsic.Control.If(v.Local.sMarkup.Trim,=,"")
		gui.FormMain.txtComponentMarkup.BackColor(red)
		v.Local.bExit.Set(true)
	f.Intrinsic.Control.Else
		gui.FormMain.txtComponentMarkup.BackColor(white)
	f.Intrinsic.Control.EndIf
	
	'Setup Qty
	v.Local.fSetQty.Declare
	f.Intrinsic.Control.If(v.Screen.FormMain!txtComponentSetQty.text,=,"")
		v.Local.fSetQty.Set(0)
	f.Intrinsic.Control.Else
		v.Local.fSetQty.Set(v.Screen.FormMain!txtComponentSetQty.text)
	f.Intrinsic.Control.EndIf
	
	'Run Qty
	v.Local.fRunQty.Declare
	f.Intrinsic.Control.If(v.Screen.FormMain!txtComponentQty.text,=,"")
		v.Local.fRunQty.Set(0)
	f.Intrinsic.Control.Else
		v.Local.fRunQty.Set(v.Screen.FormMain!txtComponentQty.text)
	f.Intrinsic.Control.EndIf
	
	
	f.Intrinsic.Control.If(v.Local.bExit)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Calculate sell price
	f.Intrinsic.String.Concat("1.",v.Local.sMarkup,v.Local.fMarkup)
	f.Intrinsic.Math.Add(v.Local.fRunQty,v.Local.fSetQty,v.Local.fTotal)
	f.Intrinsic.Control.CallSub(CalculateStandAloneSell,"Markup",v.Local.fMarkup,"TotalQty",v.Local.fTotal,"Cost",v.Local.sCost)
	f.Intrinsic.Variable.ArgToVar("rSellPrice",v.Local.sSell)
	f.Intrinsic.String.Concat("$",v.Local.sSell,v.Local.sSell)

	
	f.Intrinsic.Control.If(v.Screen.FormMain!optComponent.Value,=,"True")
		f.Data.DataTable.AddRow("dtMaterials","SellPrice",v.Local.sSell,"Code",v.Screen.FormMain!txtComponentCode.text,"Descr",v.Screen.FormMain!txtComponentDesc.text,"UM",v.Screen.FormMain!txtComponentUM.text,"Qty",v.Local.fRunQty,"UnitCost",v.Screen.FormMain!txtComponentCost.text,"MARKUP",v.Screen.FormMain!txtComponentMarkup.text,"Tag","Component","SetQty",v.Local.fSetQty)
	f.Intrinsic.Control.elseif(v.Screen.FormMain!optMaterial.Value,=,"True")
		f.Data.DataTable.AddRow("dtMaterials","SellPrice",v.Local.sSell,"Code",v.Screen.FormMain!txtComponentCode.text,"Descr",v.Screen.FormMain!txtComponentDesc.text,"UM",v.Screen.FormMain!txtComponentUM.text,"Qty",v.Local.fRunQty,"UnitCost",v.Screen.FormMain!txtComponentCost.text,"MARKUP",v.Screen.FormMain!txtComponentMarkup.text,"Tag","Material","SetQty",v.Local.fSetQty)
	f.Intrinsic.Control.Else
		f.Data.DataTable.AddRow("dtMaterials","SellPrice",v.Local.sSell,"Code",v.Screen.FormMain!txtComponentCode.text,"Descr",v.Screen.FormMain!txtComponentDesc.text,"UM",v.Screen.FormMain!txtComponentUM.text,"Qty",v.Local.fRunQty,"UnitCost",v.Screen.FormMain!txtComponentCost.text,"MARKUP",v.Screen.FormMain!txtComponentMarkup.text,"Tag","Component","SetQty",v.Local.fSetQty)
	f.Intrinsic.Control.EndIf
	
	gui.FormMain.txtComponentCode.Text("")
	gui.FormMain.txtComponentCost.Text("")
	gui.FormMain.txtComponentDesc.Text("")
	gui.FormMain.txtComponentMarkup.Text("")
	gui.FormMain.txtComponentMin.Text("")
	gui.FormMain.txtComponentOmit.Text("")
	gui.FormMain.txtComponentQty.Text("")
	gui.FormMain.txtComponentSetQty.Text("")
	gui.FormMain.txtComponentUM.Text("")
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAddComponent_Click.End

Program.Sub.cmdAddLabour_Click.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.sPartNumber.Declare
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.sSeq.Declare
	v.Local.sSeq2.Declare
	v.Local.sSeq3.Declare
	v.Local.sSeq4.Declare
	v.Local.sSeq5.Declare
	v.Local.sPartID.Declare
	v.Local.sOpCode.Declare
	v.Local.sOpCode2.Declare
	v.Local.sOpCode3.Declare
	v.Local.sOpCode4.Declare
	v.Local.sOpCode5.Declare
	v.Local.sSortCode.Declare
	v.Local.sSortCode2.Declare
	v.Local.sSortCode3.Declare
	v.Local.sSortCode4.Declare
	v.Local.sSortCode5.Declare
	v.Local.sAddDesc1.Declare
	v.Local.sAddDesc2.Declare
	v.Local.sAddDesc3.Declare
	v.Local.sDescr.Declare
	v.Local.sWC.Declare
	v.Local.sWC2.Declare
	v.Local.sWC3.Declare
	v.Local.sWC4.Declare
	v.Local.sWC5.Declare
	v.Local.sWCBase.Declare
	v.Local.sWCBase2.Declare
	v.Local.sWCBase3.Declare
	v.Local.sWCBase4.Declare
	v.Local.sWCBase5.Declare
	v.Local.fWCCost.Declare
	v.Local.fWCCost2.Declare
	v.Local.fWCCost3.Declare
	v.Local.fWCCost4.Declare
	v.Local.fWCCost5.Declare
	v.Local.fWCFloat.Declare
	v.Local.fWCFloat2.Declare
	v.Local.fWCFloat3.Declare
	v.Local.fWCFloat4.Declare
	v.Local.fWCFloat5.Declare
	v.Local.fRun.Declare
	v.Local.fRun2.Declare
	v.Local.fRun3.Declare
	v.Local.fRun4.Declare
	v.Local.fRun5.Declare
	v.Local.fSetup.Declare
	v.Local.fSetup2.Declare
	v.Local.fSetup3.Declare
	v.Local.fSetup4.Declare
	v.Local.fSetup5.Declare
	v.Local.fSetupRate.Declare
	v.Local.fSetupRate.Set(v.Screen.frmMassAdd!txtSetupRate.text)
	v.Local.fSetupRate2.Declare
	v.Local.fSetupRate2.Set(v.Screen.frmMassAdd!txtSetupRate2.text)
	v.Local.fSetupRate3.Declare
	v.Local.fSetupRate3.Set(v.Screen.frmMassAdd!txtSetupRate3.text)
	v.Local.fSetupRate4.Declare
	v.Local.fSetupRate4.Set(v.Screen.frmMassAdd!txtSetupRate4.text)
	v.Local.fSetupRate5.Declare
	v.Local.fSetupRate5.Set(v.Screen.frmMassAdd!txtSetupRate5.text)
	v.Local.fRunRate.Declare
	v.Local.fRunRate.Set(v.Screen.frmMassAdd!txtRunSell.text)
	v.Local.fRunRate2.Declare
	v.Local.fRunRate2.Set(v.Screen.frmMassAdd!txtRunSell2.text)
	v.Local.fRunRate3.Declare
	v.Local.fRunRate3.Set(v.Screen.frmMassAdd!txtRunSell3.text)
	v.Local.fRunRate4.Declare
	v.Local.fRunRate4.Set(v.Screen.frmMassAdd!txtRunSell4.text)
	v.Local.fRunRate5.Declare
	v.Local.fRunRate5.Set(v.Screen.frmMassAdd!txtRunSell5.text)
	v.Local.fRunTime.Declare
	v.Local.fRunTime.Set(v.Screen.frmMassAdd!txtRunTime1.text)
	v.Local.fRunTime2.Declare
	v.Local.fRunTime2.Set(v.Screen.frmMassAdd!txtRunTime2.text)
	v.Local.fRunTime3.Declare
	v.Local.fRunTime3.Set(v.Screen.frmMassAdd!txtRunTime3.text)
	v.Local.fRunTime4.Declare
	v.Local.fRunTime4.Set(v.Screen.frmMassAdd!txtRunTime4.text)
	v.Local.fRunTime5.Declare
	v.Local.fRunTime5.Set(v.Screen.frmMassAdd!txtRunTime5.text)
	v.Local.sLineType.Declare
	v.Local.sCustID.Declare
	v.Local.sPL.Declare
	v.Local.sQueries.Declare
	
	v.Local.fPostFloat.Declare
	v.Local.fWCRate.Declare
	v.Local.fLeadTime.Declare
	v.Local.fDivQty.Declare
	v.Local.fDivQty2.Declare
	v.Local.fDivQty3.Declare
	v.Local.fDivQty4.Declare
	v.Local.fDivQty5.Declare
	v.Local.fQty1.Declare
	v.Local.fQty2.Declare
	v.Local.fQty3.Declare
	v.Local.fQty4.Declare
	v.Local.fQty5.Declare
	v.Local.fQty6.Declare
	v.Local.fQty7.Declare
	v.Local.fQty8.Declare
	v.Local.fQty9.Declare
	v.Local.fQty10.Declare
	
	v.Local.iCount.Declare
	
	gui.FormMain..Enabled(false)
	gui.frmMassAdd..Enabled(false)
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCustomerParts.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).RowState,<>,8)
			f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).SelectPart!fieldval)
				f.Intrinsic.Math.Add(v.Local.iCount,1,v.local.iCount)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtSetupTime.text,v.Local.iCount,v.Local.fDivQty)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime2.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime2.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtSetupTime2.text,v.Local.iCount,v.Local.fDivQty2)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime3.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime3.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtSetupTime3.text,v.Local.iCount,v.Local.fDivQty3)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime4.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime4.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtSetupTime4.text,v.Local.iCount,v.Local.fDivQty4)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime5.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetupTime5.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtSetupTime5.text,v.Local.iCount,v.Local.fDivQty5)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime1.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime1.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtRunTime1.text,v.Local.iCount,v.Local.fRun)
			F.Intrinsic.Math.Round(V.Local.fRun,4,V.Local.fRun)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime2.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime2.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtRunTime2.text,v.Local.iCount,v.Local.fRun2)
			F.Intrinsic.Math.Round(V.Local.fRun2,4,V.Local.fRun2)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime3.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime3.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtRunTime3.text,v.Local.iCount,v.Local.fRun3)
			F.Intrinsic.Math.Round(V.Local.fRun3,4,V.Local.fRun3)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime4.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime4.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtRunTime4.text,v.Local.iCount,v.Local.fRun4)
			F.Intrinsic.Math.Round(V.Local.fRun4,4,V.Local.fRun4)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime5.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtRunTime5.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtRunTime5.text,v.Local.iCount,v.Local.fRun5)
			F.Intrinsic.Math.Round(V.Local.fRun5,4,V.Local.fRun5)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	'Need to pull in the setup rate by default
	
	v.Local.iSeq.Declare
	v.Local.iSeq2.Declare
	v.Local.iSeq3.Declare
	v.Local.iSeq4.Declare
	v.Local.iSeq5.Declare
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCustomerParts.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).RowState,<>,8)
			f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).SelectPart!fieldval)
				v.local.sPartNumber.Set(v.DataTable.dtCustomerParts(v.Local.i).Router!fieldvaltrim)
				f.Intrinsic.String.Build("SELECT CUSTOMER, PROD_LINE, DESCRIPTION_ROUTER FROM ROUTER_HEADER WHERE ROUTER_TYPE='H' and router='{0}'",v.Local.sPartNumber,v.Local.ssql)
				F.ODBC.Connection!Con.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.sCustID.Set(v.Local.sret(0))
				v.Local.sPL.Set(v.Local.sret(1))
				v.Local.sDescr.Set(v.Local.sret(2))
				
				f.Intrinsic.String.Build("SELECT QUANTITY_1, QUANTITY_2, QUANTITY_3, QUANTITY_4 FROM V_RTR_PRICE_1_4 WHERE  Router='{0}'",v.Local.sPartNumber,v.Local.ssql)
				F.ODBC.Connection!Con.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.fQty1.Set(v.Local.sret(0))
				v.Local.fQty2.Set(v.Local.sret(1))
				v.Local.fQty3.set(v.Local.sret(2))
				v.Local.fQty4.Set(v.Local.sret(3))
				
				f.Intrinsic.String.Build("SELECT QUANTITY_5, QUANTITY_6, QUANTITY_7, QUANTITY_8 FROM V_RTR_PRICE_5_8 WHERE Router='{0}'",v.Local.sPartNumber,v.Local.ssql)
				F.ODBC.Connection!Con.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.fQty5.Set(v.Local.sret(0))
				v.Local.fQty6.Set(v.Local.sret(1))
				v.Local.fQty7.set(v.Local.sret(2))
				v.Local.fQty8.Set(v.Local.sret(3))
				
				f.Intrinsic.String.Build("SELECT QUANTITY_9, QUANTITY_10 FROM V_RTR_PRICE_9_10 WHERE Router='{0}'",v.Local.sPartNumber,v.Local.ssql)
				F.ODBC.Connection!Con.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.fQty9.Set(v.Local.sret(0))
				v.Local.fQty10.Set(v.Local.sret(1))
				
				v.Local.sPartID.Set(v.DataTable.dtCustomerParts(v.Local.i).Part_Customer!fieldvaltrim)
				v.Local.iSeq.Set(v.Screen.frmMassAdd!txtSequence.text)
				v.Local.iSeq2.Set(v.Screen.frmMassAdd!txtSequence2.text)
				v.Local.iSeq3.Set(v.Screen.frmMassAdd!txtSequence3.text)
				v.Local.iSeq4.Set(v.Screen.frmMassAdd!txtSequence4.text)
				v.Local.iSeq5.Set(v.Screen.frmMassAdd!txtSequence5.text)
				
				v.Local.sWCBase.Set(v.Screen.frmMassAdd!ddlProcess.text)
				v.Local.sWCBase2.Set(v.Screen.frmMassAdd!ddlProcess2.text)
				v.Local.sWCBase3.Set(v.Screen.frmMassAdd!ddlProcess3.text)
				v.Local.sWCBase4.Set(v.Screen.frmMassAdd!ddlProcess4.text)
				v.Local.sWCBase5.Set(v.Screen.frmMassAdd!ddlProcess5.text)
				
				f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess.text,v.Local.sSql)
				f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
				F.Intrinsic.Control.If(V.Local.sret,<>,"***NORETURN***")
					v.Local.sWC.Set(v.DataTable.dtSteps(v.Local.sret).WORKCENTRE!FieldValTrim)
					f.Intrinsic.String.Build("SELECT standard_cost, float from V_WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC.Trim,v.Local.ssql)
					f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
					f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
						f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
						v.Local.fWCCost.Set(v.Local.sret(0))
						v.Local.fWCFloat.Set(v.Local.sret(1))
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess2.text,v.Local.sSql)
				f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
				F.Intrinsic.Control.If(V.Local.sret,<>,"***NORETURN***")
					v.Local.sWC2.Set(v.DataTable.dtSteps(v.Local.sret).WORKCENTRE!FieldValTrim)	
					f.Intrinsic.String.Build("SELECT standard_cost, float from V_WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC2.Trim,v.Local.ssql)
					f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
					f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
						f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
						v.Local.fWCCost2.Set(v.Local.sret(0))
						v.Local.fWCFloat2.Set(v.Local.sret(1))
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess3.text,v.Local.sSql)
				f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
				F.Intrinsic.Control.If(V.Local.sret,<>,"***NORETURN***")
					v.Local.sWC3.Set(v.DataTable.dtSteps(v.Local.sret).WORKCENTRE!FieldValTrim)
					f.Intrinsic.String.Build("SELECT standard_cost, float from V_WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC3.Trim,v.Local.ssql)
					f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
					f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
						f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
						v.Local.fWCCost3.Set(v.Local.sret(0))
						v.Local.fWCFloat3.Set(v.Local.sret(1))
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess4.text,v.Local.sSql)
				f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
				F.Intrinsic.Control.If(V.Local.sret,<>,"***NORETURN***")
					v.Local.sWC4.Set(v.DataTable.dtSteps(v.Local.sret).WORKCENTRE!FieldValTrim)
					f.Intrinsic.String.Build("SELECT standard_cost, float from V_WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC4.Trim,v.Local.ssql)
					f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
					f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
						f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
						v.Local.fWCCost4.Set(v.Local.sret(0))
						v.Local.fWCFloat4.Set(v.Local.sret(1))
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess5.text,v.Local.sSql)
				f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
				F.Intrinsic.Control.If(V.Local.sret,<>,"***NORETURN***")
					v.Local.sWC5.Set(v.DataTable.dtSteps(v.Local.sret).WORKCENTRE!FieldValTrim)
					f.Intrinsic.String.Build("SELECT standard_cost, float from V_WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC5.Trim,v.Local.ssql)
					f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
					f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
						f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
						v.Local.fWCCost5.Set(v.Local.sret(0))
						v.Local.fWCFloat5.Set(v.Local.sret(1))
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				v.Local.sLineType.Set("L")
				v.Local.fSetup.Set(v.Local.fDivQty)
				F.Intrinsic.Math.Round(V.Local.fSetup,4,V.Local.FSETUP)
				V.Local.fSetup2.Set(V.Local.fDivQty2)
				F.Intrinsic.Math.Round(V.Local.fSetup2,4,V.Local.FSETUP2)
				V.Local.fSetup3.Set(V.Local.fDivQty3)
				F.Intrinsic.Math.Round(V.Local.fSetup3,4,V.Local.FSETUP3)
				V.Local.fSetup4.Set(V.Local.fDivQty4)
				F.Intrinsic.Math.Round(V.Local.fSetup4,4,V.Local.FSETUP4)
				V.Local.fSetup5.Set(V.Local.fDivQty5)
				F.Intrinsic.Math.Round(V.Local.fSetup5,4,V.Local.FSETUP5)
				
				v.Local.sOpCode.Set(v.Screen.frmMassAdd!txtOpCode1.text)
				v.Local.sOpCode2.Set(v.Screen.frmMassAdd!txtOpCode2.text)
				v.Local.sOpCode3.Set(v.Screen.frmMassAdd!txtOpCode3.text)
				v.Local.sOpCode4.Set(v.Screen.frmMassAdd!txtOpCode4.text)
				v.Local.sOpCode5.Set(v.Screen.frmMassAdd!txtOpCode5.text)
				
				f.Intrinsic.Control.If(v.Local.iSeq,<>,0)
					f.Data.DataTable.AddRow("6021","PostFloat",v.Local.fWCFloat, "CustPartNum",v.Local.sPartID,"OperationCodeVend",v.Local.sOpCode.UCase,"ExtraDesc1",v.Local.sAddDesc1,"ExtraDesc2",v.Local.sAddDesc2,"ExtraDesc3",v.Local.sAddDesc3,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.iSeq,"SortCode",v.Local.sSortCode.UCase, "RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"WC",v.Local.sWC,"PartStepDesc",v.Local.sWCBase,"LineType",v.Local.sLineType,"SetupQty",v.Local.fSetup,"RunTimeMatlQty",v.Local.fRun,"CustID",v.Local.sCustID,"RateUC",v.Local.fWCCost,"UM","HR","LeadTime",v.Local.fLeadTime,"PL",v.Local.sPL,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
					gui.frmMassAdd.txtSequence.BackColor(v.Color.White)
				f.Intrinsic.Control.Else
					gui.frmMassAdd.txtSequence.BackColor(v.Color.LtRed)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Local.iSeq2,<>,0)
					f.Data.DataTable.AddRow("6021","PostFloat",v.Local.fWCFloat2, "CustPartNum",v.Local.sPartID,"OperationCodeVend",v.Local.sOpCode2.UCase,"ExtraDesc1",v.Local.sAddDesc1,"ExtraDesc2",v.Local.sAddDesc2,"ExtraDesc3",v.Local.sAddDesc3,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.iSeq2,"SortCode",v.Local.sSortCode2.UCase,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"WC",v.Local.sWC2,"PartStepDesc",v.Local.sWCBase2,"LineType",v.Local.sLineType,"SetupQty",v.Local.fSetup2,"RunTimeMatlQty",v.Local.fRun2,"CustID",v.Local.sCustID,"RateUC",v.Local.fWCCost2,"UM","HR","LeadTime",v.Local.fLeadTime,"PL",v.Local.sPL,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
					gui.frmMassAdd.txtSequence2.BackColor(v.Color.White)
				f.Intrinsic.Control.Else
					gui.frmMassAdd.txtSequence2.BackColor(v.Color.LtRed)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Local.iSeq3,<>,0)
					f.Data.DataTable.AddRow("6021","PostFloat",v.Local.fWCFloat3, "CustPartNum",v.Local.sPartID,"OperationCodeVend",v.Local.sOpCode3.UCase,"ExtraDesc1",v.Local.sAddDesc1,"ExtraDesc2",v.Local.sAddDesc2,"ExtraDesc3",v.Local.sAddDesc3,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.iSeq3,"SortCode",v.Local.sSortCode3.UCase,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"WC",v.Local.sWC3,"PartStepDesc",v.Local.sWCBase3,"LineType",v.Local.sLineType,"SetupQty",v.Local.fSetup3,"RunTimeMatlQty",v.Local.fRun3,"CustID",v.Local.sCustID,"RateUC",v.Local.fWCCost3,"UM","HR","LeadTime",v.Local.fLeadTime,"PL",v.Local.sPL,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
					gui.frmMassAdd.txtSequence3.BackColor(v.Color.White)
				f.Intrinsic.Control.Else
					gui.frmMassAdd.txtSequence3.BackColor(v.Color.LtRed)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Local.iSeq4,<>,0)
					f.Data.DataTable.AddRow("6021","PostFloat",v.Local.fWCFloat4, "CustPartNum",v.Local.sPartID,"OperationCodeVend",v.Local.sOpCode4.UCase,"ExtraDesc1",v.Local.sAddDesc1,"ExtraDesc2",v.Local.sAddDesc2,"ExtraDesc3",v.Local.sAddDesc3,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.iSeq4,"SortCode",v.Local.sSortCode4.UCase,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"WC",v.Local.sWC4,"PartStepDesc",v.Local.sWCBase4,"LineType",v.Local.sLineType,"SetupQty",v.Local.fSetup4,"RunTimeMatlQty",v.Local.fRun4,"CustID",v.Local.sCustID,"RateUC",v.Local.fWCCost4,"UM","HR","LeadTime",v.Local.fLeadTime,"PL",v.Local.sPL,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
					gui.frmMassAdd.txtSequence4.BackColor(v.Color.White)
				f.Intrinsic.Control.Else
					gui.frmMassAdd.txtSequence4.BackColor(v.Color.LtRed)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Local.iSeq5,<>,0)
					f.Data.DataTable.AddRow("6021","PostFloat",v.Local.fWCFloat5, "CustPartNum",v.Local.sPartID,"OperationCodeVend",v.Local.sOpCode5.UCase,"ExtraDesc1",v.Local.sAddDesc1,"ExtraDesc2",v.Local.sAddDesc2,"ExtraDesc3",v.Local.sAddDesc3,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.iSeq5,"SortCode",v.Local.sSortCode5.UCase,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"WC",v.Local.sWC5,"PartStepDesc",v.Local.sWCBase5,"LineType",v.Local.sLineType,"SetupQty",v.Local.fSetup5,"RunTimeMatlQty",v.Local.fRun5,"CustID",v.Local.sCustID,"RateUC",v.Local.fWCCost5,"UM","HR","LeadTime",v.Local.fLeadTime,"PL",v.Local.sPL,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
					gui.frmMassAdd.txtSequence5.BackColor(v.Color.White)
				f.Intrinsic.Control.Else
					gui.frmMassAdd.txtSequence5.BackColor(v.Color.LtRed)
				f.Intrinsic.Control.EndIf
				
				'Add memo record for labour
				F.Intrinsic.String.Build("DELETE FROM GAB_6595_STEPS WHERE PART='{0}' AND P={1}",V.Local.sPartNumber.Trim,V.Local.iSeq,V.Local.ssql)
				F.ODBC.Connection!Con.execute(v.Local.ssql)
				f.Intrinsic.String.Build("INSERT INTO GAB_6595_STEPS (PART, WC, SETUP, SETUP_RATE, PROCESS, PROCESS_RATE, UM, TIME_UNIT, P, SUBCONTRACT, VENDOR, LMO, OPERATION, DURATION) VALUES ('{0}','{1}',{2},{3},{4},{5},'{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')",v.Local.sPartNumber.Trim,v.Local.sWC,v.Local.fSetup,v.Local.fsetupRate,v.Local.fRun,v.Local.fRunRate,"EA","M",v.Local.iSeq,0,V.Local.sOpCode,"L","","",V.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM GAB_6595_STEPS WHERE PART='{0}' AND P={1}",V.Local.sPartNumber.Trim,V.Local.iSeq2,V.Local.ssql)
				F.ODBC.Connection!Con.execute(v.Local.ssql)
				f.Intrinsic.String.Build("INSERT INTO GAB_6595_STEPS (PART, WC, SETUP, SETUP_RATE, PROCESS, PROCESS_RATE, UM, TIME_UNIT, P, SUBCONTRACT, VENDOR, LMO, OPERATION, DURATION) VALUES ('{0}','{1}',{2},{3},{4},{5},'{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')",v.Local.sPartNumber.Trim,v.Local.sWC2,v.Local.fSetup2,v.Local.fsetupRate2,v.Local.fRun2,v.Local.fRunRate2,"EA","M",v.Local.iSeq2,0,v.Local.sOpCode2,"L","","",V.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM GAB_6595_STEPS WHERE PART='{0}' AND P={1}",V.Local.sPartNumber.Trim,V.Local.iSeq3,V.Local.ssql)
				F.ODBC.Connection!Con.execute(v.Local.ssql)
				f.Intrinsic.String.Build("INSERT INTO GAB_6595_STEPS (PART, WC, SETUP, SETUP_RATE, PROCESS, PROCESS_RATE, UM, TIME_UNIT, P, SUBCONTRACT, VENDOR, LMO, OPERATION, DURATION) VALUES ('{0}','{1}',{2},{3},{4},{5},'{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')",v.Local.sPartNumber.Trim,v.Local.sWC3,v.Local.fSetup3,v.Local.fsetupRate3,v.Local.fRun3,v.Local.fRunRate3,"EA","M",v.Local.iSeq3,0,v.Local.sOpCode3,"L","","",V.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM GAB_6595_STEPS WHERE PART='{0}' AND P={1}",V.Local.sPartNumber.Trim,V.Local.iSeq4,V.Local.ssql)
				F.ODBC.Connection!Con.execute(v.Local.ssql)
				f.Intrinsic.String.Build("INSERT INTO GAB_6595_STEPS (PART, WC, SETUP, SETUP_RATE, PROCESS, PROCESS_RATE, UM, TIME_UNIT, P, SUBCONTRACT, VENDOR, LMO, OPERATION, DURATION) VALUES ('{0}','{1}',{2},{3},{4},{5},'{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')",v.Local.sPartNumber.Trim,v.Local.sWC4,v.Local.fSetup4,v.Local.fsetupRate4,v.Local.fRun4,v.Local.fRunRate4,"EA","M",v.Local.iSeq4,0,v.Local.sOpCode4,"L","","",V.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM GAB_6595_STEPS WHERE PART='{0}' AND P={1}",V.Local.sPartNumber.Trim,V.Local.iSeq5,V.Local.ssql)
				F.ODBC.Connection!Con.execute(v.Local.ssql)
				f.Intrinsic.String.Build("INSERT INTO GAB_6595_STEPS (PART, WC, SETUP, SETUP_RATE, PROCESS, PROCESS_RATE, UM, TIME_UNIT, P, SUBCONTRACT, VENDOR, LMO, OPERATION, DURATION) VALUES ('{0}','{1}',{2},{3},{4},{5},'{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')",v.Local.sPartNumber.Trim,v.Local.sWC5,v.Local.fSetup5,v.Local.fsetupRate5,v.Local.fRun5,v.Local.fRunRate5,"EA","M",v.Local.iSeq5,0,v.Local.sOpCode5,"L","","",V.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				f.Intrinsic.Control.If(v.Screen.frmMassAdd!chkOmit.Value,=,"1")
					f.Intrinsic.String.LPad(v.Local.iSeq,"0",6,v.Local.sSeq)
					f.Intrinsic.String.Concat(v.Local.sQueries,"UPDATE ROUTER_LINE SET OMIT_FROM_WO='Y' WHERE ROUTER='",v.Local.sPartNumber,"' AND LINE_ROUTER='",v.Local.sSeq,"';",v.local.sQueries)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Screen.frmMassAdd!chkOmit2.Value,=,"1")
					f.Intrinsic.String.LPad(v.Local.iSeq2,"0",6,v.Local.sSeq)
					f.Intrinsic.String.Concat(v.Local.sQueries,"UPDATE ROUTER_LINE SET OMIT_FROM_WO='Y' WHERE ROUTER='",v.Local.sPartNumber,"' AND LINE_ROUTER='",v.Local.sSeq,"';",v.local.sQueries)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Screen.frmMassAdd!chkOmit3.Value,=,"1")
					f.Intrinsic.String.LPad(v.Local.iSeq3,"0",6,v.Local.sSeq)
					f.Intrinsic.String.Concat(v.Local.sQueries,"UPDATE ROUTER_LINE SET OMIT_FROM_WO='Y' WHERE ROUTER='",v.Local.sPartNumber,"' AND LINE_ROUTER='",v.Local.sSeq,"';",v.local.sQueries)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Screen.frmMassAdd!chkOmit4.Value,=,"1")
					f.Intrinsic.String.LPad(v.Local.iSeq4,"0",6,v.Local.sSeq)
					f.Intrinsic.String.Concat(v.Local.sQueries,"UPDATE ROUTER_LINE SET OMIT_FROM_WO='Y' WHERE ROUTER='",v.Local.sPartNumber,"' AND LINE_ROUTER='",v.Local.sSeq,"';",v.local.sQueries)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Screen.frmMassAdd!chkOmit5.Value,=,"1")
					f.Intrinsic.String.LPad(v.Local.iSeq5,"0",6,v.Local.sSeq)
					f.Intrinsic.String.Concat(v.Local.sQueries,"UPDATE ROUTER_LINE SET OMIT_FROM_WO='Y' WHERE ROUTER='",v.Local.sPartNumber,"' AND LINE_ROUTER='",v.Local.sSeq,"';",v.local.sQueries)
				f.Intrinsic.Control.EndIf
				
				
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.CallSub(6021Sync)
	
	f.Intrinsic.String.Split(v.Local.sQueries,";",v.Local.sQueries)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.sQueries.UBound,1)
		f.Intrinsic.Control.If(v.Local.sQueries(v.Local.i).trim,<>,"")
			f.ODBC.Connection!con.execute(v.Local.sQueries(v.Local.i))
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
		
	v.Local.sFGPart.Declare
	v.Local.sFGPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sFGRev.Declare
	v.Local.sFGRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	v.Local.sFGpartRev.Declare
	v.Local.sFGDescription.Declare
	v.Local.sFGDescription.Set(v.Screen.FormMain!txtPartDescription.text)
	f.Intrinsic.String.GSSPartString(v.Local.sFGPart,v.Local.sFGRev,v.Local.sFGPartRev)
	
	f.Intrinsic.Control.If(v.Local.sFGPart.Trim,<>,"")
		f.Intrinsic.Control.CallSub("OpenSelectPartAction","Part",v.Local.sFGPartRev,"Description",v.Local.sFGDescription,"Copy","N")
	f.Intrinsic.Control.EndIf
	
	gui.frmMassAdd..Enabled(true)
	GUI.frmMassAdd..Visible(FALSE)
	gui.FormMain..Enabled(true)
	gui.FormMain..SetFocus(1)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAddLabour_Click.End

Program.Sub.cmdAddLaserStep_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	v.Local.fFloat.Declare
	
	v.local.sSql.Declare
	
	v.Local.sWC.Declare
	v.Local.sWC.Set(v.Screen.frmLaserCutter!ddlWorkCenterLaser.text)
	
	v.Local.sWCDesc.Declare
	v.Local.sWCDesc.Set(v.Screen.frmLaserCutter!txtWCDescription.Value)
	
	v.Local.sWCTimeUnit.Declare
	v.Local.sWCTimeUnit.Set("M")
	
	v.Local.sWCUM.Declare
	v.Local.sWCUM.Set("EA")
	
	V.Local.sWCCost.Declare
	v.Local.sWCCost.Set(0)
	v.Local.fWCCost.Declare
	
	V.Local.sRunRate.Declare
	v.Local.sRunRate.Set(v.Screen.frmLaserCutter!txtCutBillRate.text)
	v.Local.fRunRate.Declare
	
	V.Local.sSetRate.Declare
	v.Local.sSetRate.Set(v.Screen.frmLaserCutter!txtCutSetRate.text)
	v.Local.fSetRate.Declare
	
	V.Local.sRunTime.Declare
	v.Local.fRunTime.Declare
	f.Data.DataTable.Compute("dtLaserFeatures","Sum(Time)","",v.Local.sRunTime)
	f.Intrinsic.Control.If(v.Local.sRunTime.Trim,<>,"***NORETURN***")
		v.Local.fRunTime.Set(v.Local.sRunTime)
	f.Intrinsic.Control.EndIf
	
	V.Local.sSetTime.Declare
	v.Local.sSetTime.Set(v.Screen.frmLaserCutter!txtCutSetupTime.text)
	v.Local.fSetTime.Declare
	
	F.Intrinsic.Control.If(v.Local.sWCCost.Trim,<>,"")
		v.Local.fWCCost.Set(v.Local.sWCCost)
	f.Intrinsic.Control.Else
		v.Local.fWCCost.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sRunRate.Trim,<>,"")
		v.Local.fRunRate.Set(v.Local.sRunRate)
	f.Intrinsic.Control.Else
		v.Local.fRunRate.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sSetRate.Trim,<>,"")
		v.Local.fSetRate.Set(v.Local.sSetRate)
	f.Intrinsic.Control.Else
		v.Local.fSetRate.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sRunTime.Trim,<>,"")
		v.Local.fRunTime.Set(v.Local.sRunTime)
	f.Intrinsic.Control.Else
		v.Local.fRunTime.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sSetTime.Trim,<>,"")
		v.Local.fSetTime.Set(v.Local.sSetTime)
	f.Intrinsic.Control.Else
		v.Local.fSetTime.Set(0)
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("SELECT FLOAT FROM WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC.Trim,v.Local.sSql)
	f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.fFloat)
	f.Data.Datatable.AddRow("dtWorkSelection","PostFloat",v.Local.fFloat,"Vend",v.Screen.frmLaserCutter!txtOpCode.text,"WC",v.Local.sWC.Trim,"WCBase",v.Local.sWCDesc.Trim,"T",v.Local.sWCTimeUnit,"UM",v.Local.sWCUM,"Process",v.Local.fRunTime,"ProcessRate",v.local.fRunRate,"setup",v.Local.fSetTime,"SetupRate",v.Local.fSetRate,"CostRate",v.Local.fWCCost)
	
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAddLaserStep_Click.End

Program.Sub.cmdAddLaserFeature_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sSelectedFeature.Declare
	v.Local.sSelectedFeature.Set(v.Screen.frmLaserCutter!ddlFeature.Value)
	v.Local.iSpeed.Declare
	v.Local.iSpeed.Set(v.Screen.frmLaserCutter!txtSpeed.text)
	v.Local.fLength.Declare
	v.Local.fLength.Set(v.Screen.frmLaserCutter!txtCutPieceLength.text)
	v.Local.fWidth.Declare
	v.Local.fWidth.Set(v.Screen.frmLaserCutter!txtCutPieceWidth.text)
	v.Local.fPierce.Declare
	v.Local.fPierce.Set(v.Screen.frmLaserCutter!txtMainPierce.text)
	v.Local.fLengthCalc.Declare
	v.Local.fTime.Declare
	v.Local.fTime.Set(v.Screen.frmLaserCutter!txtEstProTimes.text)
	v.Local.sDiamiter.Declare
	v.Local.sDiamiter.Set(v.Screen.frmLaserCutter!txtDiamiterMM.text)
	v.Local.sQty.Declare
	v.Local.sQty.Set(v.Screen.frmLaserCutter!txtFeatureQty.text)
	v.Local.fMath.Declare
	v.Local.sPierceColumnValue.Declare
	v.Local.sPierceColumnValue.Set(v.Local.sDiamiter)
	v.Local.sQtyColumnValue.Declare
	v.Local.sQtyColumnValue.Set(v.Local.sQty)
	v.Local.sWidthColumnValue.Declare
	v.Local.sWidthColumnValue.Set(v.Screen.frmLaserCutter!txtCutWidth.text)
	v.Local.sLengthColumnValue.Declare
	v.Local.sLengthColumnValue.Set(v.Screen.frmLaserCutter!txtCutLength.text)
	v.Local.sWidthColumnValuetimestwo.Declare
	v.Local.sLengthColumnValuetimestwo.Declare
	v.Local.sLengthWidthCirc.Declare
	v.Local.fCalctime.Declare
	
	
	f.Intrinsic.Control.If(v.Local.sSelectedFeature.Trim,=,"Square")
		f.Data.Datatable.AddRow("dtLaserFeatures","Feature",v.Local.sSelectedFeature)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Circle")
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.Control.If(v.Local.sQty,=,"")
			v.Local.sQty.set("0")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sDiamiter,=,"")
			v.Local.sDiamiter.set("0")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sQty,>,0, AND, v.Local.sDiamiter,>,0)
			f.Intrinsic.Control.If(v.Local.sQty.IsNumeric,=,True, AND, v.Local.sDiamiter.IsNumeric,=,True)
				f.Intrinsic.Math.Mult(v.Local.sDiamiter,"3.1415926",v.Local.fMath)
				f.Intrinsic.Math.Mult(v.Local.fMath,v.Local.sQty,v.Local.fMath) '31.4*4=125.6
				'f.Intrinsic.Debug.ShowCallerInfo
				f.Intrinsic.Math.Div(v.Local.fMath,v.Local.iSpeed,v.Local.fCalctime) 
				f.Intrinsic.Math.Round(v.Local.fCalctime,"1",v.Local.fCalctime)
				f.Intrinsic.Math.Round(v.Local.fMath,"2",v.Local.fMath)				
				f.Data.Datatable.AddRow("dtLaserFeatures","Feature",v.Local.sSelectedFeature,"Dim1",v.Local.sDiamiter,"Speed",v.Local.iSpeed,"Time",v.Local.fCalctime,"Length",v.Local.fMath,"Qty",v.Local.sQty,"Dim2",0,"Pierce",0)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Total Cut Length")
		f.Data.Datatable.AddRow("dtLaserFeatures","Feature",v.Local.sSelectedFeature,"Speed",v.Local.iSpeed,"Length",0,"Dim1",0,"Dim2",0)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Cut Time")
		f.Data.Datatable.AddRow("dtLaserFeatures","Feature",v.Local.sSelectedFeature,"Speed",v.Local.iSpeed,"Length",0,"Dim1",0,"Dim2",0,"Time",V.Screen.frmLaserCutter!txtEstProTimes.text,"Qty",v.Local.sQty)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Pierce")
		f.Intrinsic.Control.If(v.Local.sPierceColumnValue,=,"")
			v.Local.sPierceColumnValue.set("0")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sQtyColumnValue,=,"")
			v.Local.sQtyColumnValue.set("0")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sPierceColumnValue,>,0, AND, v.Local.sQtyColumnValue,>,0)
			f.Intrinsic.Control.If(v.Local.sPierceColumnValue.IsNumeric,=,True, AND, v.Local.sQtyColumnValue.IsNumeric,=,True)
				f.Intrinsic.Math.Mult(v.Local.sPierceColumnValue,v.Local.sQtyColumnValue,v.Local.fMath)
				f.Data.Datatable.AddRow("dtLaserFeatures","Feature",v.Local.sSelectedFeature,"Speed",v.Local.iSpeed,"Time",v.Local.fMath,"Pierce",v.Local.sPierceColumnValue,"Qty",v.Local.sQtyColumnValue,"Dim1",0,"Dim2",0,"Length",0)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Rectangle")
		
		f.Intrinsic.Control.CallSub(calculateRectangleTime,"Speed",v.Local.iSpeed,"Qty",v.Local.sQtyColumnValue,"Width",v.Local.sWidthColumnValue,"Length",v.Local.sLengthColumnValue,"MyRow",-1,"MyForm","dtLaserFeatures")

	f.Intrinsic.Control.EndIf
		
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.endtry
Program.Sub.cmdAddLaserFeature_Click.End

Program.Sub.cmdAddFeature_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sSelectedFeature.Declare
	v.Local.sSelectedFeature.Set(v.Screen.FormMain!ddlFeature.Value)
	v.Local.iSpeed.Declare
	v.Local.iSpeed.Set(v.Screen.FormMain!txtSpeed.text)
	v.Local.fLength.Declare
	v.Local.fLength.Set(v.Screen.FormMain!txtCutPieceLength.text)
	v.Local.fWidth.Declare
	v.Local.fWidth.Set(v.Screen.FormMain!txtCutPieceWidth.text)
	v.Local.fPierce.Declare
	v.Local.fPierce.Set(v.Screen.FormMain!txtMainPierce.text)
	v.Local.fLengthCalc.Declare
	v.Local.fTime.Declare
	v.Local.fTime.Set(v.Screen.FormMain!txtEstProTimes.text)
	v.Local.sDiamiter.Declare
	v.Local.sDiamiter.Set(v.Screen.FormMain!txtDiamiterMM.text)
	v.Local.sQty.Declare
	v.Local.sQty.Set(v.Screen.FormMain!txtFeatureQty.text)
	v.Local.fMath.Declare
	v.Local.sPierceColumnValue.Declare
	v.Local.sPierceColumnValue.Set(v.Local.sDiamiter)
	v.Local.sQtyColumnValue.Declare
	v.Local.sQtyColumnValue.Set(v.Local.sQty)
	v.Local.sWidthColumnValue.Declare
	v.Local.sWidthColumnValue.Set(v.Screen.FormMain!txtFeatureRectWid.text)
	v.Local.sLengthColumnValue.Declare
	v.Local.sLengthColumnValue.Set(v.Screen.FormMain!txtFeatureRectLen.text)
	v.Local.sWidthColumnValuetimestwo.Declare
	v.Local.sLengthColumnValuetimestwo.Declare
	v.Local.sLengthWidthCirc.Declare
	v.Local.fCalctime.Declare
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.Control.If(v.Local.sSelectedFeature.Trim,=,"Square")
		f.Data.Datatable.AddRow("dtFeaturesTable","Feature",v.Local.sSelectedFeature)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Circle")
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.Control.If(v.Local.sQty,=,"")
			v.Local.sQty.set("0")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sDiamiter,=,"")
			v.Local.sDiamiter.set("0")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sQty,>,0, AND, v.Local.sDiamiter,>,0)
			f.Intrinsic.Control.If(v.Local.sQty.IsNumeric,=,True, AND, v.Local.sDiamiter.IsNumeric,=,True)
				f.Intrinsic.Math.Mult(v.Local.sDiamiter,"3.1415926",v.Local.fMath)
				f.Intrinsic.Math.Mult(v.Local.fMath,v.Local.sQty,v.Local.fMath) '31.4*4=125.6
				'f.Intrinsic.Debug.ShowCallerInfo
				f.Intrinsic.Math.Div(v.Local.fMath,v.Local.iSpeed,v.Local.fCalctime) 
				f.Intrinsic.Math.Mult(v.Local.fCalctime,"60",v.Local.fCalctime) 
				f.Intrinsic.Math.Round(v.Local.fCalctime,"1",v.Local.fCalctime)
				f.Intrinsic.Math.Round(v.Local.fMath,"2",v.Local.fMath)				
				f.Data.Datatable.AddRow("dtFeaturesTable","Feature",v.Local.sSelectedFeature,"Dim1",v.Local.sDiamiter,"Speed",v.Local.iSpeed,"Time",v.Local.fCalctime,"Length",v.Local.fMath,"Qty",v.Local.sQty,"Dim2",0,"Pierce",0)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Total Cut Length")
		f.Data.Datatable.AddRow("dtFeaturesTable","Feature",v.Local.sSelectedFeature,"Speed",v.Local.iSpeed,"Length",0,"Dim1",0,"Dim2",0)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Cut Time")
		f.Data.Datatable.AddRow("dtFeaturesTable","Feature",v.Local.sSelectedFeature,"Speed",v.Local.iSpeed,"Length",0,"Dim1",0,"Dim2",0,"Time",V.Screen.FormMain!txtEstProTimes.text,"Qty",v.Local.sQty)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Pierce")
		f.Intrinsic.Control.If(v.Local.sPierceColumnValue,=,"")
			v.Local.sPierceColumnValue.set("0")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sQtyColumnValue,=,"")
			v.Local.sQtyColumnValue.set("0")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sPierceColumnValue,>,0, AND, v.Local.sQtyColumnValue,>,0)
			f.Intrinsic.Control.If(v.Local.sPierceColumnValue.IsNumeric,=,True, AND, v.Local.sQtyColumnValue.IsNumeric,=,True)
				f.Intrinsic.Math.Mult(v.Local.sPierceColumnValue,v.Local.sQtyColumnValue,v.Local.fMath)
				f.Data.Datatable.AddRow("dtFeaturesTable","Feature",v.Local.sSelectedFeature,"Speed",v.Local.iSpeed,"Time",v.Local.fMath,"Pierce",v.Local.sPierceColumnValue,"Qty",v.Local.sQtyColumnValue,"Dim1",0,"Dim2",0,"Length",0)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Rectangle")
		
		f.Intrinsic.Control.CallSub(calculateRectangleTime,"Speed",v.Local.iSpeed,"Qty",v.Local.sQtyColumnValue,"Width",v.Local.sWidthColumnValue,"Length",v.Local.sLengthColumnValue,"MyRow",-1,"MyForm","dtFeatures")

	f.Intrinsic.Control.EndIf
		
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAddFeature_Click.End

Program.Sub.cmdAddMaterial_Click.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.sPartNumber.Declare
	v.Local.ssql.Declare
	V.Local.sQueries.Declare
	v.Local.sret.Declare
	v.Local.sPartID.Declare
	V.Local.sSeq.Declare
	v.Local.sOpCode.Declare
	v.Local.sAddDesc1.Declare
	v.Local.sAddDesc2.Declare
	v.Local.sAddDesc3.Declare
	v.Local.sDescr.Declare
	v.Local.sMaterial.Declare
	v.Local.sCompDescr.Declare
	v.Local.fSet.Declare
	v.Local.fSetup.Declare
	v.Local.fCostRAte.Declare
	v.Local.fCostRAte.Set(v.Screen.frmMassAdd!txtSetMatRate.text)
	v.Local.fMarkup.Declare
	v.Local.fMarkup.Set(v.Screen.frmMassAdd!txtMarkup.text)
	v.Local.sLineType.Declare
	v.Local.sCustID.Declare
	v.Local.sPL.Declare
	v.Local.sUM.Declare
	
	v.Local.fPostFloat.Declare
	v.Local.fWCRate.Declare
	v.Local.fLeadTime.Declare
	v.Local.fDivQty.Declare
	v.Local.fQty1.Declare
	v.Local.fQty2.Declare
	v.Local.fQty3.Declare
	v.Local.fQty4.Declare
	v.Local.fQty5.Declare
	v.Local.fQty6.Declare
	v.Local.fQty7.Declare
	v.Local.fQty8.Declare
	v.Local.fQty9.Declare
	v.Local.fQty10.Declare
	
	v.Local.iCount.Declare
	
	gui.FormMain..Enabled(false)
	gui.frmMassAdd..Enabled(false)
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCustomerParts.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).RowState,<>,8)
			f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).SelectPart!fieldval)
				f.Intrinsic.Math.Add(v.Local.iCount,1,v.local.iCount)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetMatQty.text,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmMassAdd!txtSetMatQty.text,<>,0)
			f.Intrinsic.Math.Div(v.Screen.frmMassAdd!txtSetMatQty.text,v.Local.iCount,v.Local.fDivQty)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'Need to pull in the setup rate by default
	'Need to debug this part
	v.Local.iSeq.Declare
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCustomerParts.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).RowState,<>,8)
			f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).SelectPart!fieldval)
				v.local.sPartNumber.Set(v.DataTable.dtCustomerParts(v.Local.i).Router!fieldvaltrim)
				v.Local.sMaterial.Set(v.Screen.frmMassAdd!txtMaterial.text)
				V.Local.fCostRAte.Set(V.Screen.frmMassAdd!txtSetMatRate.text)
				v.Local.fMarkup.Set(v.Screen.frmMassAdd!txtMarkup.text)
				f.Intrinsic.String.Build("SELECT CUSTOMER, PROD_LINE, DESCRIPTION_ROUTER FROM ROUTER_HEADER WHERE ROUTER_TYPE='H' and router='{0}'",v.Local.sPartNumber,v.Local.ssql)
				F.ODBC.Connection!Con.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.sCustID.Set(v.Local.sret(0))
				v.Local.sPL.Set(v.Local.sret(1))
				v.Local.sDescr.Set(v.Local.sret(2))
				
				f.Intrinsic.String.Build("SELECT QUANTITY_1, QUANTITY_2, QUANTITY_3, QUANTITY_4 FROM V_RTR_PRICE_1_4 WHERE Router='{0}'",v.Local.sPartNumber,v.Local.ssql)
				F.ODBC.Connection!Con.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.fQty1.Set(v.Local.sret(0))
				v.Local.fQty2.Set(v.Local.sret(1))
				v.Local.fQty3.set(v.Local.sret(2))
				v.Local.fQty4.Set(v.Local.sret(3))
				
				f.Intrinsic.String.Build("SELECT QUANTITY_5, QUANTITY_6, QUANTITY_7, QUANTITY_8 FROM V_RTR_PRICE_5_8 WHERE Router='{0}'",v.Local.sPartNumber,v.Local.ssql)
				F.ODBC.Connection!Con.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.fQty5.Set(v.Local.sret(0))
				v.Local.fQty6.Set(v.Local.sret(1))
				v.Local.fQty7.set(v.Local.sret(2))
				v.Local.fQty8.Set(v.Local.sret(3))
				
				f.Intrinsic.String.Build("SELECT QUANTITY_9, QUANTITY_10 FROM V_RTR_PRICE_9_10 WHERE Router='{0}'",v.Local.sPartNumber,v.Local.ssql)
				F.ODBC.Connection!Con.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.fQty9.Set(v.Local.sret(0))
				v.Local.fQty10.Set(v.Local.sret(1))
				
				v.Local.sPartID.Set(v.DataTable.dtCustomerParts(v.Local.i).Part_Customer!fieldvaltrim)
				v.Local.iSeq.Set(v.Screen.frmMassAdd!txtRunSeq.text)
				f.Intrinsic.String.Build("SELECT DESCRIPTION,UM_INVENTORY FROM V_INVENTORY_ALL WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
				f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sREt)
				f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
				v.Local.sCompDescr.Set(v.Local.sret(0))
				v.Local.sUM.Set(v.local.sret(1))
				
				v.Local.sLineType.Set("M")
				v.Local.fSet.Set(v.Local.fDivQty)
				
				f.Intrinsic.Control.If(v.Local.iSeq,<>,0)
					f.Data.DataTable.AddRow("6021","CustPartNum",v.Local.sPartID,"ExtraDesc1",v.Local.sAddDesc1,"ExtraDesc2",v.Local.sAddDesc2,"ExtraDesc3",v.Local.sAddDesc3,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.iSeq,"SortCode","","RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID, "PartStepDesc",v.Local.sCompDescr.PSQLFriendly,"LineType","M","PartNum",v.Local.sMaterial,"SetupQty",v.Local.fSet,"RunTimeMatlQty",0,"CustID",v.Local.sCustID,"RateUC",v.Local.fCostRAte,"UM",v.Local.sUM,"PL",v.Local.sPL,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
							
					F.Intrinsic.String.Build("DELETE FROM GAB_6595_MEMO_COMP WHERE PART='{0}' AND SEQUENCE={1}",V.Local.sPartNumber.Trim,V.Local.iSeq,V.Local.ssql)
					F.ODBC.Connection!Con.execute(v.Local.ssql)
					
					'Add memo record for material			
					f.Intrinsic.String.Build("INSERT INTO GAB_6595_MEMO_COMP VALUES ('{0}',{1},{2},'{3}',{4},0,'','','','')",v.Local.sPartNumber.Trim,v.Local.fMarkup,V.Local.i,v.local.sMaterial.Trim,V.Local.iSeq,v.Local.sSql)
					f.ODBC.Connection!con.execute(v.Local.ssql)
					
					f.Intrinsic.Control.If(v.Screen.frmMassAdd!chkOmitMat.Value,=,"1")
						f.Intrinsic.String.LPad(v.Local.iSeq,"0",6,v.Local.sSeq)
						f.Intrinsic.String.Concat(v.Local.sQueries,"UPDATE ROUTER_LINE SET OMIT_FROM_WO='Y' WHERE ROUTER='",v.Local.sPartNumber,"' AND LINE_ROUTER='",v.Local.sSeq,"';",v.local.sQueries)
					f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.Else
					gui.frmMassAdd.txtRunSeq.BackColor(v.Color.LtRed)
				f.Intrinsic.Control.EndIf

				
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.CallSub(6021Sync)
	
	f.Intrinsic.String.Split(v.Local.sQueries,";",v.Local.sQueries)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.sQueries.UBound,1)
		f.Intrinsic.Control.If(v.Local.sQueries(v.Local.i).trim,<>,"")
			f.ODBC.Connection!con.execute(v.Local.sQueries(v.Local.i))
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	v.Local.sFGPart.Declare
	v.Local.sFGPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sFGRev.Declare
	v.Local.sFGRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	v.Local.sFGpartRev.Declare
	v.Local.sFGDescription.Declare
	v.Local.sFGDescription.Set(v.Screen.FormMain!txtPartDescription.text)
	f.Intrinsic.String.GSSPartString(v.Local.sFGPart,v.Local.sFGRev,v.Local.sFGPartRev)
	
	f.Intrinsic.Control.If(v.Local.sFGPart.Trim,<>,"")
		f.Intrinsic.Control.CallSub("OpenSelectPartAction","Part",v.Local.sFGPartRev,"Description",v.Local.sFGDescription,"Copy","N")
	f.Intrinsic.Control.EndIf
		
	gui.frmMassAdd..Enabled(true)
	'GUI.frmMassAdd..Visible(FALSE)
	gui.FormMain..Enabled(true)
	gui.FormMain..SetFocus(1)
	GUI.frmMassAdd..SetFocus(1)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAddMaterial_Click.End

Program.Sub.cmdAddKitPart_Click.Start
Program.Sub.cmdAddKitPart_Click.End

Program.Sub.cmdAddPowderToRouting_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	V.Local.sMinCharge.Declare
	v.Local.fMinCharge.Declare
	v.Local.sMinCharge.Set(v.Screen.SS_FORM!lblMinChargeResult.Caption)
	v.Local.sMarkup.Declare
	f.Intrinsic.String.Concat("1.",v.Screen.SS_FORM!txtMarkup.text,v.Local.sMarkup)
	
	f.Intrinsic.String.Replace(v.Local.sMinCharge,"$","",v.Local.fMinCharge)
	'Material, cost is $0, but material is listed for MRP requirements
	f.Data.DataTable.AddRow("dtMaterials","Code","POWDERCOAT","Descr",v.Screen.SS_FORM!ddlColour.Value,"UM","EA","QTY",0,"SetQty",0,"UNITCOST",0,"MARKUP",0)
	
	'Labour, cost is $0, but time is one minute for scheduling purposes
	f.Data.DataTable.AddRow("dtWorkSelection","CostRate",0,"WC","PC","WCBase","POWDERCOAT","Setup",0,"SetupRate",0,"Process",1,"ProcessRate",0,"UM","EA","T","M","P",0,"Vend","","LMO","L","Operation","","Duration","")		
	
	'Outside, this one calculates the sell price but is omitted from work order
	f.Data.DataTable.AddRow("dtWorkSelection","CostRate",v.Screen.SS_FORM!txtPricePerUnit.text,"Omit","Y","WC","PC","WCBase","POWDERCOAT","Setup",1,"SetupRate",v.Local.fMinCharge,"Process",1,"ProcessRate",v.Local.sMarkup,"UM","EA","T","","P",0,"S",0,"Vend","MET","LMO","O","Operation","","Duration","","ExtraDesc","")

	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAddPowderToRouting_Click.End

Program.Sub.cmdAddWC_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	v.Local.fFloat.Declare
	
	v.local.sSql.Declare
	
	v.Local.sWC.Declare
	v.Local.sWC.Set(v.Screen.FormMain!txtWCCode.text)
	
	v.Local.sWCDesc.Declare
	v.Local.sWCDesc.Set(v.Screen.FormMain!ddlWorkCenter.Value)
	
	v.Local.sWCTimeUnit.Declare
	v.Local.sWCTimeUnit.Set(v.Screen.FormMain!ddlWCRunUnit.value)
	
	v.Local.sWCUM.Declare
	v.Local.sWCUM.Set(v.Screen.FormMain!txtWCRunUM.text)
	
	V.Local.sWCCost.Declare
	v.Local.sWCCost.Set(v.Screen.FormMain!txtWCCost.text)
	v.Local.fWCCost.Declare
	
	V.Local.sRunRate.Declare
	v.Local.sRunRate.Set(v.Screen.FormMain!txtWCRunRate.text)
	v.Local.fRunRate.Declare
	
	V.Local.sSetRate.Declare
	v.Local.sSetRate.Set(v.Screen.FormMain!txtWCSetupRate.text)
	v.Local.fSetRate.Declare
	
	V.Local.sRunTime.Declare
	v.Local.sRunTime.Set(v.Screen.FormMain!txtWCRunTime.text)
	v.Local.fRunTime.Declare
	
	V.Local.sSetTime.Declare
	v.Local.sSetTime.Set(v.Screen.FormMain!txtWCSetupTime.text)
	v.Local.fSetTime.Declare
	
	F.Intrinsic.Control.If(v.Local.sWCCost.Trim,<>,"")
		v.Local.fWCCost.Set(v.Local.sWCCost)
	f.Intrinsic.Control.Else
		v.Local.fWCCost.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sRunRate.Trim,<>,"")
		v.Local.fRunRate.Set(v.Local.sRunRate)
	f.Intrinsic.Control.Else
		v.Local.fRunRate.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sSetRate.Trim,<>,"")
		v.Local.fSetRate.Set(v.Local.sSetRate)
	f.Intrinsic.Control.Else
		v.Local.fSetRate.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sRunTime.Trim,<>,"")
		v.Local.fRunTime.Set(v.Local.sRunTime)
	f.Intrinsic.Control.Else
		v.Local.fRunTime.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sSetTime.Trim,<>,"")
		v.Local.fSetTime.Set(v.Local.sSetTime)
	f.Intrinsic.Control.Else
		v.Local.fSetTime.Set(0)
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("SELECT FLOAT FROM WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC.Trim,v.Local.sSql)
	f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.fFloat)
	f.Data.Datatable.AddRow("dtWorkSelection","PostFloat",v.Local.fFloat,"Vend",v.Screen.FormMain!txtWCOpcode.text,"WC",v.Local.sWC.Trim,"WCBase",v.Local.sWCDesc.Trim,"T",v.Local.sWCTimeUnit,"UM",v.Local.sWCUM,"Process",v.Local.fRunTime,"ProcessRate",v.local.fRunRate,"setup",v.Local.fSetTime,"SetupRate",v.Local.fSetRate,"CostRate",v.Local.fWCCost)
	
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
	gui.FormMain.txtWCOpcode.Text("")
	gui.FormMain.ddlWorkCenter.Text("")
	gui.FormMain.txtWCCode.Text("")
	gui.FormMain.txtWCRunTime.Text("")
	gui.FormMain.ddlWCRunUnit.Text("")
	gui.FormMain.txtWCRunUM.Text("")
	gui.FormMain.txtWCRunRate.Text("")
	gui.FormMain.txtWCSetupTime.Text("")
	gui.FormMain.txtWCSetupRate.Text("")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAddWC_Click.End

Program.Sub.cmdAddWCOut_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	'Need to update process rate to include markup from outside process
	f.Data.Datatable.AddRow("dtWorkSelection","WC",v.Screen.FormMain!txtOut.text,"WCBase",v.Screen.FormMain!txtOutDesc.text,"Vend",v.Screen.FormMain!txtOutVendor.text,"UM",v.Screen.FormMain!txtOutUM.text,"ProcessRate","1.34","L",v.Screen.FormMain!txtLeadTime.text,"Process",v.Screen.FormMain!txtOutQty.text,"S",true,"LMO","O","Setup",0,"SetupRate",v.Screen.FormMain!txtOutMin.text,"CostRate",V.Screen.FormMain!txtOutRate.text)
	
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAddWCOut_Click.End

Program.Sub.cmdAutoFill_Click.Start
f.Intrinsic.Control.Try
	v.Local.sClientCode.Declare
	gui.FormCCSetUp.txtNextNumber.Text("0")
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sClientCode.Set(V.Screen.FormCCSetUp!txtCurrentCompanyCode.Text)
	gui.FormCCSetUp.txtCompanyPrefix.Text(v.Local.sClientCode)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAutoFill_Click.End

Program.Sub.cmdBrowseComponent_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.j.Declare(long)
	v.Local.sVal.Declare
	
	f.Intrinsic.Control.If(v.Global.sMultiple,=,"1")
		f.Intrinsic.Control.If(v.Screen.FormMain!optMaterial.Value,=,"true")
			f.Intrinsic.Control.CallSub(cmdBrowseMaterial_Click)
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	V.Local.sSQL.set("SELECT PART, DESCRIPTION, UM_INVENTORY, AMT_ALT_COST, CODE_SOURCE, CODE_SORT FROM V_INVENTORY_ALL order by PART")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part*!*Description*!*UM*!*Cost*!*Source*!*Sort","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("2000*!*3000*!*500*!*1000*!*500*!*1000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Part","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormMain.txtComponentCode.Text(v.Local.sRet(0).trim)
		gui.FormMain.txtComponentDesc.Text(v.Local.sRet(1))
		gui.FormMain.txtComponentUM.Text(v.Local.sRet(2))
		gui.FormMain.txtComponentCost.Text(v.Local.sRet(3))
		gui.FormMain.txtComponentMarkup.Text(v.Global.fMatMarkup)
		
		'Get Vendor Quotes
		gui.FormMain.ddlVendQuote.ClearItems
		f.Intrinsic.string.build("select TOP 10 MFG_NAME, MFG_PART_NO, QUOTE_DATE, PUR_UM, UNIT_PRICE from V_VEND_QTE_HEADER LEFT JOIN V_VEND_QTE_LINES ON V_VEND_QTE_HEADER.PART = V_VEND_QTE_LINES.PART AND V_VEND_QTE_HEADER.SEQ = V_VEND_QTE_LINES.SEQ WHERE V_VEND_QTE_HEADER.PART='{0}' ORDER BY QUOTE_DATE DESC",v.Screen.FormMain!txtComponentCode.text,V.Local.ssql)
		f.Intrinsic.Control.If(v.DataTable.dtVendQuoteTemp.Exists)
			f.Data.DataTable.Close("dtVendQuoteTemp")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromSQL("dtVendQuoteTemp","con",v.Local.sSQL)
		
		f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtVendQuoteTemp.RowCount--,1)
			V.Local.sval.set("{0} --- {1} --- {2} --- {3} --- {4}")
			f.Intrinsic.string.build(V.Local.sval,v.DataTable.dtVendQuoteTemp(v.Local.j).MFG_NAME!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.j).MFG_PART_NO!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.j).QUOTE_DATE!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.j).PUR_UM!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.j).UNIT_PRICE!fieldval,V.Local.sval)
			GUI.FormMain.ddlVendQuote.AddItem(v.Local.sval)
		f.Intrinsic.Control.Next(v.Local.j)
			
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(FormMain_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseComponent_Click.End

Program.Sub.cmdBrowseCust_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sCheck.Declare(String)
	V.Local.sSQL.set("SELECT CUSTOMER, NAME_CUSTOMER FROM V_CUSTOMER_MASTER ORDER BY NAME_CUSTOMER")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Customer*!*Name Customer","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("1000*!*3000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Customer","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormMain.txtClientCode.Text(v.Local.sRet(0))
		gui.FormMain.txtClientName.Text(v.Local.sRet(1))
		f.Intrinsic.Control.CallSub(loadCustomerParts,"Customer",v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
	'f.Intrinsic.Debug.ShowCallerInfo
	F.Intrinsic.String.Build("select top 1 customer from GAB_6595_CUST_REF where customer = '{0}'",V.Local.sRet.Trim,V.Local.SSQL)
	F.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sCheck)
	f.Intrinsic.Control.If(v.Local.sCheck,=,"")
		gui.FormMain.cmdCheckPrefixConnnection.Visible(true)
		GUI.FormMain.cmdGenerateNewPartCode.Visible(false)
	f.Intrinsic.Control.Else
		gui.FormMain.cmdCheckPrefixConnnection.Visible(false)
		gui.FormMain.cmdGenerateNewPartCode.Visible(true)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseCust_Click.End

Program.Sub.cmdBrowseMaterial_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	v.Local.sVal.Declare
	v.Local.i.Declare
	v.Local.iLen.Declare
	v.Local.iLength.Declare
	v.Local.iWidth.Declare
	v.Local.fCost.Declare
	v.Local.sBuild.Declare
	
	f.Intrinsic.Control.If(v.Global.sMultiple,=,"1")
		f.Intrinsic.Control.If(v.Screen.FormMain!optMaterial.Value,=,"true")
			f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtMatSortCodes.RowCount--)
				f.Intrinsic.String.Concat(v.Local.sBuild,"CODE_SORT='",v.DataTable.dtMatSortCodes(v.Local.i).SortCode!fieldvaltrim,"' OR",v.Local.sBuild)
			f.Intrinsic.Control.Next(v.Local.i)
			f.Intrinsic.String.Len(v.Local.sBuild,v.Local.iLen)
			f.Intrinsic.Math.Sub(v.Local.iLen,3,v.Local.iLen)
			f.Intrinsic.String.Left(v.Local.sBuild,v.Local.iLen,v.Local.sBuild)
			'f.Intrinsic.String.Build("select PART, DESCRIPTION, PRODUCT_LINE, UM_INVENTORY, ROUND(AMT_ALT_COST,2) AS 'AMT_ALT_COST', LENGTH, WIDTH, THICKNESS, CODE_SORT, NAME_VENDOR from V_INVENTORY_ALL WHERE {0} order by part",V.Local.sBuild,v.Local.ssql)
			v.Local.sSQL.Set("select PART, DESCRIPTION, PRODUCT_LINE, UM_INVENTORY, ROUND(AMT_ALT_COST,2) AS 'AMT_ALT_COST', LENGTH, WIDTH, THICKNESS, CODE_SORT, NAME_VENDOR from V_INVENTORY_ALL order by part")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		V.Local.sSQL.set("select a.PART, DESCRIPTION, PRODUCT_LINE, UM_INVENTORY, ROUND(AMT_ALT_COST,2) AS 'AMT_ALT_COST', LENGTH, WIDTH, THICKNESS, CODE_SORT, NAME_VENDOR from V_INVENTORY_ALL A order by a.part")
	f.Intrinsic.Control.EndIf
	
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part*!*Description*!*PL*!*UM*!*Alt Cost*!*Length*!*Width*!*Thickness*!*Sort Code*!*Vendor","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("1000*!*3000*!*200*!*200*!*500*!*500*!*500*!*500*!*1200*!*1500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Part","Con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,18000,16000,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sret)
		
		f.Intrinsic.Control.If(v.Global.sMultiple,=,"1")
			gui.FormMain.txtComponentCode.Text(v.Local.sRet(0))
			gui.FormMain.txtComponentDesc.Text(v.Local.sRet(1))
			gui.FormMain.txtComponentUM.Text(v.Local.sRet(3))
			gui.FormMain.txtComponentCost.Text(v.Local.sRet(4))
			v.Local.iLength.Set(v.Local.sRet(5))
			v.Local.iWidth.Set(v.Local.sRet(6))
			gui.FormMain.txtFullSheetLength.Text(v.Local.iLength)
			gui.FormMain.txtFullSheetWidth.Text(v.Local.iWidth)
			gui.FormMain.txtFullSheetBord.Text(10)
			gui.FormMain.txtComponentMarkup.Text(v.Global.fMatMarkup)
			
		f.Intrinsic.Control.Else
			gui.FormMain.txtMaterialName.Text(v.Local.sRet(0))
			gui.FormMain.txtMaterialDesc.Text(v.Local.sRet(1))
			gui.FormMain.txtSheetUM.Text(v.Local.sRet(3))
			v.Local.iLength.Set(v.Local.sRet(5))
			v.Local.iWidth.Set(v.Local.sRet(6))
			v.Local.fCost.Set(v.Local.sRet(4))
			f.Intrinsic.Math.Round(v.Local.fCost,2,v.Local.fCost)
			gui.FormMain.txtFullSheetLength.Text(v.Local.iLength)
			gui.FormMain.txtFullSheetWidth.Text(v.Local.iWidth)
			gui.FormMain.txtMainMM.Text(v.Local.sRet(7))
			gui.FormMain.txtMainLength.Text(v.Local.iLength)
			gui.FormMain.txtMainWidth.Text(v.Local.iWidth)
			gui.FormMain.txtMainBord.Text(10)
			gui.FormMain.txtMainSpace.Text(10)
			gui.FormMain.txtMainPerSheet.Text("")
			gui.FormMain.txtSheetCost.Text(v.Local.fCost)
			gui.FormMain.txtSheetMarkup.Text(v.Global.fMatMarkup)
		f.Intrinsic.Control.EndIf
		
		'Grab Pierce and Speed
		F.Intrinsic.String.Build("SELECT PART, USER1, USER2 FROM GAB_4912_USER_FIELDS WHERE PART='{0}'",v.Local.sRet(0),v.Local.sSQL)
		f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormMain.txtMainPierce.Text(v.Local.sRet(1))
		gui.FormMain.txtSpeed.Text(v.Local.sRet(2))
		
		'Get Vendor Quotes
		gui.FormMain.ddlVendQuote.ClearItems
		f.Intrinsic.string.build("select TOP 10 MFG_NAME, MFG_PART_NO, QUOTE_DATE, PUR_UM, UNIT_PRICE from V_VEND_QTE_HEADER LEFT JOIN V_VEND_QTE_LINES ON V_VEND_QTE_HEADER.PART = V_VEND_QTE_LINES.PART AND V_VEND_QTE_HEADER.SEQ = V_VEND_QTE_LINES.SEQ WHERE V_VEND_QTE_HEADER.PART='{0}' ORDER BY QUOTE_DATE DESC",v.Local.sRet(0),V.Local.ssql)
		f.Intrinsic.Control.If(v.DataTable.dtVendQuoteTemp.Exists)
			f.Data.DataTable.Close("dtVendQuoteTemp")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromSQL("dtVendQuoteTemp","con",v.Local.sSQL)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtVendQuoteTemp.RowCount--,1)
			V.Local.sval.set("{0} --- {1} --- {2} --- {3} --- {4}")
			f.Intrinsic.string.build(V.Local.sval,v.DataTable.dtVendQuoteTemp(v.Local.i).MFG_NAME!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.i).MFG_PART_NO!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.i).QUOTE_DATE!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.i).PUR_UM!fieldval,v.DataTable.dtVendQuoteTemp(v.Local.i).UNIT_PRICE!fieldval,V.Local.sval)
			GUI.FormMain.ddlVendQuote.AddItem(v.Local.sval)
		f.Intrinsic.Control.Next(v.Local.i)
		
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseMaterial_Click.End

Program.Sub.cmdBrowseMat_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.j.Declare(long)
	v.Local.sVal.Declare
	
	V.Local.sSQL.set("SELECT PART, DESCRIPTION, UM_INVENTORY, AMT_ALT_COST, CODE_SOURCE, CODE_SORT FROM V_INVENTORY_ALL order by PART")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part*!*Description*!*UM*!*Cost*!*Source*!*Sort","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("2000*!*3000*!*500*!*1000*!*500*!*1000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Part","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.frmMassAdd.txtMaterial.Text(v.Local.sRet(0).trim)
		gui.frmMassAdd.txtSetMatRate.Text(v.Local.sRet(3))
		gui.frmMassAdd.txtMarkup.Text(v.Global.fMatMarkup)
			
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(FormMain_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseMat_Click.End

Program.Sub.cmdBrowsePart_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	v.Local.sret.Declare
	v.Local.sCustomer.Declare
	
	f.Intrinsic.Control.If(v.Screen.FormMain!txtClientCode.text,<>,"")
		v.Local.sCustomer.Set(v.Screen.FormMain!txtClientCode.text)
		f.Intrinsic.String.Build("select ROUTER, DESCRIPTION_ROUTER, PROD_LINE,CUSTOMER from V_ROUTER_HEADER WHERE CUSTOMER='{0}' ORDER BY ROUTER",V.local.sCustomer.Trim,v.Local.sSQL)
	f.Intrinsic.Control.Else
		V.Local.sSQL.set("select ROUTER, DESCRIPTION_ROUTER, PROD_LINE,CUSTOMER from V_ROUTER_HEADER ORDER BY ROUTER")
	f.Intrinsic.Control.EndIf
	
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part*!*Description*!*PL*!*Customer","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("1000*!*3000*!*200*!*200","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Part","Con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
		v.Global.sFreezeBom.Set(0)
		f.Intrinsic.Control.CallSub("OpenSelectPartAction","Part",v.Local.sret(0),"Description",v.Local.sret(1),"Copy","N")
		f.Intrinsic.Control.CallSub(loadCustomerParts,"Customer",v.Local.sRet(3).trim)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdBrowsePart_Click.End

Program.Sub.cmdBrowsePartCopy_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	v.Local.sret.Declare
	v.Local.sCustomer.Declare

	f.Intrinsic.Control.If(v.Screen.FormMain!txtClientCode.text,<>,"")
		v.Local.sCustomer.Set(v.Screen.FormMain!txtClientCode.text)
		f.Intrinsic.String.Build("select ROUTER, DESCRIPTION_ROUTER, PROD_LINE,CUSTOMER from V_ROUTER_HEADER WHERE CUSTOMER='{0}' ORDER BY ROUTER",V.local.sCustomer.Trim,v.Local.sSQL)
	f.Intrinsic.Control.Else
		V.Local.sSQL.set("select ROUTER, DESCRIPTION_ROUTER, PROD_LINE, CUSTOMER from V_ROUTER_HEADER ORDER BY ROUTER")
	f.Intrinsic.Control.EndIf
	
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part*!*Description*!*PL*!*UM","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("1000*!*3000*!*200*!*200","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Part","Con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
		v.Global.sFreezeBom.Set(0)
		f.Intrinsic.Control.CallSub("OpenSelectPartAction","Part",v.Local.sret(0),"Description",v.Local.sret(1),"Copy",v.Local.sNewPartNumber)
		f.Intrinsic.Control.CallSub(loadCustomerParts,"Customer",v.Local.sRet(3).trim)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdBrowsePartCopy_Click.End

Program.Sub.cmdBrowseShipTo_Click.Start
F.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	F.Intrinsic.String.Build("select SHIP_SEQ, CUSTOMER_NAME, SHIP_ADDRESS1, SHIP_ADDRESS2, SHIP_ADDRESS3, SHIP_ADDRESS4, SHIP_ADDRESS5, SHIP_CITY, SHIP_STATE, SHIP_ZIP FROM V_OE_MULTI_SHIP WHERE CUSTOMER='{0}'",V.Screen.FormMain!txtClientCode.text,v.Local.sSQL)
	
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Seq*!*Name*!*Address1*!*Address2*!*Address3*!*Address4*!*Address5*!*City*!*State*!*Zip","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*3000*!*3000*!*3000*!*3000*!*3000*!*3000*!*3000*!*1500*!*1500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Sequence","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormQuote.txtShipToID.Text(v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseShipTo_Click.End

Program.Sub.cmdCheckPrefixConnnection_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sClientCode.Declare
	v.Local.sClientCode.Set(V.Screen.FormMain!txtclientcode.Text)
	gui.FormCCSetUp.txtCurrentCompanyCode.Text(v.Local.sClientCode)
	gui.FormCCSetUp..Visible(True)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCheckPrefixConnnection_Click.End

Program.Sub.cmdCalculatePricing_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCalculatePricing_Click.End

Program.Sub.cmdCalculatePowder_click.Start
F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.Case("")
	F.Intrinsic.Control.Caseelse
	F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdWidth.Text)
		F.Intrinsic.Control.Case("")
		F.Intrinsic.control.caseelse
			F.Intrinsic.Control.CallSub(evalcost)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndSelect
Program.Sub.cmdCalculatePowder_click.End

Program.Sub.cmdClear_Click.Start
Gui.SS_Form.txtProdLength.text("")
Gui.SS_Form.txtProdWidth.text("")
Gui.SS_Form.txtPowdThick.text("")
Gui.SS_Form.txtPowdPrice.text("")
Gui.SS_Form.txtPowdCost.text("")
Gui.SS_Form.txtChemCost.text("")
Gui.SS_Form.txtMarkup.text("")
Gui.SS_Form.txtGap.text("")
Gui.SS_Form.txtMan.text("")
Gui.SS_Form.txtLabourRate.text("")
Gui.SS_Form.txtSetupCost.text("")
Gui.SS_Form.txtLineSpeed.text("")
Gui.SS_Form.txtLabourCost.text("")
Gui.SS_Form.txtPricePerUnit.text("")
Gui.SS_Form.ddlColour.text("")
Gui.SS_Form.lblNetPriceResult.caption("")
Gui.SS_Form.lblMinChargeResult.caption("")
Gui.SS_Form.lblID.caption("")
Gui.SS_Form.lblGT.caption("")
Gui.SS_Form.lblPart.caption("")
Gui.SS_Form.lblCalcPriceResult.caption("")
gui.FormMain.cmdPowderCalculator.BackColor(-2147483633)
Program.Sub.cmdClear_Click.End

Program.Sub.cmdClearMass_Click.Start
f.Intrinsic.Control.Try
	
	gui.frmMassAdd.ddlProcess.Text("")
	gui.frmMassAdd.ddlProcess2.Text("")
	gui.frmMassAdd.ddlProcess3.Text("")
	gui.frmMassAdd.ddlProcess4.Text("")
	gui.frmMassAdd.ddlProcess5.Text("")
	
	gui.frmMassAdd.txtSetupTime.Text("0")
	gui.frmMassAdd.txtSetupTime2.Text("0")
	gui.frmMassAdd.txtSetupTime3.Text("0")
	gui.frmMassAdd.txtSetupTime4.Text("0")
	gui.frmMassAdd.txtSetupTime5.Text("0")
	
	gui.frmMassAdd.txtSetupRate.Text("0")
	gui.frmMassAdd.txtSetupRate2.Text("0")
	gui.frmMassAdd.txtSetupRate3.Text("0")
	gui.frmMassAdd.txtSetupRate4.Text("0")
	gui.frmMassAdd.txtSetupRate5.Text("0")
	
	gui.frmMassAdd.txtRunTime1.Text("0")
	gui.frmMassAdd.txtRunTime2.Text("0")
	gui.frmMassAdd.txtRunTime3.Text("0")
	gui.frmMassAdd.txtRunTime4.Text("0")
	gui.frmMassAdd.txtRunTime5.Text("0")
	
	gui.frmMassAdd.txtRunSell.Text("0")
	gui.frmMassAdd.txtRunSell2.Text("0")
	gui.frmMassAdd.txtRunSell3.Text("0")
	gui.frmMassAdd.txtRunSell4.Text("0")
	gui.frmMassAdd.txtRunSell5.Text("0")
	
	gui.frmMassAdd.txtSequence.Text("")
	gui.frmMassAdd.txtSequence2.Text("")
	gui.frmMassAdd.txtSequence3.Text("")
	gui.frmMassAdd.txtSequence4.Text("")
	gui.frmMassAdd.txtSequence5.Text("")
	
	gui.frmMassAdd.txtOpCode1.Text("")
	gui.frmMassAdd.txtOpCode2.Text("")
	gui.frmMassAdd.txtOpCode3.Text("")
	gui.frmMassAdd.txtOpCode4.Text("")
	gui.frmMassAdd.txtOpCode5.Text("")
	
	gui.frmMassAdd.txtSortCode1.Text("")
	gui.frmMassAdd.txtSortCode2.Text("")
	gui.frmMassAdd.txtSortCode3.Text("")
	gui.frmMassAdd.txtSortCode4.Text("")
	gui.frmMassAdd.txtSortCode5.Text("")
	
	gui.frmMassAdd.chkOmit.Value(0)
	gui.frmMassAdd.chkOmit2.Value(0)
	gui.frmMassAdd.chkOmit3.Value(0)
	gui.frmMassAdd.chkOmit4.Value(0)
	gui.frmMassAdd.chkOmit5.Value(0)
	
	gui.frmMassAdd.txtMaterial.Text("")
	gui.frmMassAdd.txtSetMatQty.Text("")
	gui.frmMassAdd.txtSetMatRate.text("")
	gui.frmMassAdd.txtMarkup.Text("")
	gui.frmMassAdd.txtRunSeq.text("")
	gui.frmMassAdd.txtOpcodeMat.text("")
	gui.frmMassAdd.txtSortCodeMat.text("")
	
	gui.frmMassAdd.chkOmitMat.Value(0)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdClearMass_Click.End

Program.Sub.cmdCreateKit_Click.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.fQty.Declare
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	V.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	v.Local.ssql.Declare
	v.Local.sret.Declare
	
	'Make sure the user selects some records
	F.Data.DataView.Create("dtCustomerParts","dvCustomerParts",22,"SelectPart=True","")
	f.Intrinsic.Control.If(v.DataView.dtCustomerParts!dvCustomerParts.RowCount,=,0)
		f.Intrinsic.UI.Msgbox("Select records from list.")
		f.Data.DataView.Close("dtCustomerParts","dvCustomerParts")
		f.Intrinsic.Control.exitsub
	f.Intrinsic.Control.Else
		f.Data.DataView.Close("dtCustomerParts","dvCustomerParts")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("SELECT * FROM ROUTER_HEADER WHERE ROUTER='{0}'",v.Local.sPart,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
	
	f.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
		f.Intrinsic.UI.Msgbox("Please have a part number created on file before creating a kit.")
	f.Intrinsic.Control.Else
		'Clear the data table out
		f.Data.DataTable.DeleteRow("dtBuildupKit")
		
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCustomerParts.RowCount--,1)
			f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).RowState,<>,8)
				f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).SelectPart!fieldval)
					f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).ROUTER!Fieldvaltrim,<>,V.Local.sPart.Trim)
						f.Intrinsic.String.Build("select QUANTITY_1 from V_RTR_PRICE_1_4 WHERE ROUTER='{0}'",v.DataTable.dtCustomerParts(v.Local.i).Router!fieldvaltrim,V.Local.ssql)
						f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.fqty)
						f.Data.DataTable.AddRow("dtBuildupKit","PartNumber",v.DataTable.dtCustomerParts(v.Local.i).Router!fieldvaltrim,"Description",v.DataTable.dtCustomerParts(v.Local.i).DESCRIPTION_ROUTER!Fieldvaltrim,"UM","EA","Parent",v.Local.sPart.Trim,"Source","F","Qty",v.Local.fQty)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
		
		gui.frmCreateKit..Show
	f.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCreateKit_Click.End

Program.Sub.cmdCreateQuote_Click.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	'Make sure the user selects some records
	F.Data.DataView.Create("dtCustomerParts","dvCustomerParts",22,"SelectPart=True","")
	f.Intrinsic.Control.If(v.DataView.dtCustomerParts!dvCustomerParts.RowCount,=,0)
		f.Intrinsic.UI.Msgbox("Select records from list.")
		f.Data.DataView.Close("dtCustomerParts","dvCustomerParts")
		f.Intrinsic.Control.exitsub
	f.Intrinsic.Control.Else
		f.Data.DataView.Close("dtCustomerParts","dvCustomerParts")
	f.Intrinsic.Control.EndIf
	
	'Grab the top record
	f.Intrinsic.String.Build("select TOP 1 (SHIP_SEQ)  FROM V_OE_MULTI_SHIP WHERE CUSTOMER='{0}'",v.Screen.FormMain!txtClientCode.text,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
	gui.FormQuote.txtShipToID.Text(v.Local.sret)
	'Clear the data table out
	f.Data.DataTable.DeleteRow("dtPriceBuildupMaster")
	f.Data.DataTable.DeleteRow("dtMaterialTakeoff")
	f.Data.DataTable.DeleteRow("dtLabourTakeoff")
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCustomerParts.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).RowState,<>,8)
			f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).SelectPart!fieldval)
				'f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.DataTable.dtCustomerParts(v.Local.i).Router!fieldvaltrim,"Description",v.DataTable.dtCustomerParts(v.Local.i).DESCRIPTION_ROUTER!Fieldvaltrim,"Switch","M","QtyOverride","")
				'Need to determine if the part is a bom
				f.Intrinsic.Control.If(v.DataTable.dtCustomerParts(v.Local.i).BomKit!fieldvaltrim,=,"Y")
					f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.DataTable.dtCustomerParts(v.Local.i).Router!fieldvaltrim,"Description",v.DataTable.dtCustomerParts(v.Local.i).DESCRIPTION_ROUTER!Fieldvaltrim,"Switch","M","QuickAdd","","QtyOverride","")
				f.Intrinsic.Control.Else
					f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.DataTable.dtCustomerParts(v.Local.i).Router!fieldvaltrim,"Description",v.DataTable.dtCustomerParts(v.Local.i).DESCRIPTION_ROUTER!Fieldvaltrim,"Switch","M","QtyOverride","","QuickAdd","")
				f.Intrinsic.Control.EndIf
	
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf

	gui.FormQuote..Show
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCreateQuote_Click.End

Program.Sub.cmdDrawBrowse_click.Start
V.Local.sFile.declare(string)
F.Intrinsic.UI.ShowOpenFileDialog("","","",V.Local.sFIle)
F.Intrinsic.Control.If(V.Local.sfile,<>,"***CANCEL***")
	F.Intrinsic.control.callsub(trvFileDragDrop,"Files",V.Local.sfile)
F.Intrinsic.Control.EndIf
Program.Sub.cmdDrawBrowse_click.End

Program.Sub.cmdEstimationCalculateOptimized_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	v.Local.sFileLocat.Declare(string)
	v.Local.sNestingValues.Declare(string)
	v.Local.sEXEPath.Declare
	v.Local.sMainSheetFactor.Declare
	v.Local.sMainPerSheet.Declare
	v.Local.sMainSheetLength.Declare
	v.Local.sMainSheetWidth.Declare
	v.Local.sMainSheetBord.Declare
	v.Local.sPDFFileSaveLocation.Declare
	v.Local.sPDFFileSaveLocationForPY.Declare
	v.Local.sPieceWidth.Declare
	v.Local.sPieceLength.Declare
	v.Local.sPieceSpace.Declare
	v.Local.sCutPieceSpacingX.Declare
	v.Local.sCutPieceSpacingY.Declare
	v.Local.sFullSheetBordX.Declare
	v.Local.sFullSheetBordY.Declare
	gui.FormMain.txtCalculateAlternative.Text("0")
	
	v.Local.sPDFFileName.Declare
	v.Local.sPDFFULLPATH.Declare
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sVal.Declare
	v.Local.bFileCheck.Declare(boolean)
	v.Local.sFileLocation.Declare(string)
	v.Local.fSleepTime.Declare
	v.Local.fSleepTime.Set(1.5)
	v.Local.sCheckClicked.Declare
	v.Local.sConfigFileName.Declare
	v.Local.sPieceLengthAddSpacing.Declare
	v.Local.sPieceWidthAddSpacing.Declare
	v.Local.sSheetWidthDivTwo.Declare
	v.Local.sSheetLengthDivTwo.Declare
	v.Local.sConfigFileName.Set("GAB_6554_Config.txt")
	v.Local.sMainBoard.Set(v.Screen.FormMain!txtFullSheetBord.Text)
	v.Local.sMainSheetLength.set(v.Screen.FormMain!txtFullSheetLength.Text)
	v.Local.sMainSheetWidth.set(v.Screen.FormMain!txtFullSheetWidth.Text)
	v.Local.sMainSheetBord.set(v.Screen.FormMain!txtFullSheetBord.Text) '
	v.Local.sMainSheetFactor.set(v.Screen.FormMain!txtSheetFactor.Text)
	v.Local.sMainPerSheet.set(v.Screen.FormMain!txtTotalItemsPerSheet.Text)
	v.Local.sPieceWidth.set(v.Screen.FormMain!txtCutPieceWidth.Text)
	v.Local.sPieceLength.set(v.Screen.FormMain!txtCutPieceLength.Text)
	v.Local.sPieceSpace.set(v.Screen.FormMain!txtCutPieceSpacing.Text) 'txtCutPieceWidth 
	v.Local.sCheckPopulatedTextFields.Declare
	v.Local.sTempSwap.Declare
	v.Local.sRectanlgeCalc.Declare
	
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.Control.If(v.Global.sSquares,=,"1")
		v.Local.fCutPieceLength.Declare
		v.Local.fCutPieceWidth.Declare
		v.Local.fTotal.Declare
		v.Local.fCutPieceLength.Set(v.Screen.FormMain!txtCutPieceLength.text)
		v.Local.fCutPieceWidth.Set(v.Screen.FormMain!txtCutPieceWidth.text)
		
		f.Intrinsic.Control.If(v.Local.fCutPieceLength,<>,0)
		f.Intrinsic.Control.AndIf(v.Local.fCutPieceWidth,<>,0)
			f.Intrinsic.Math.Mult(v.Local.fCutPieceLength,v.Local.fCutPieceWidth,v.Local.fTotal)
			f.Intrinsic.Math.Div(v.Local.fTotal,1000000,v.Local.fTotal)
			gui.FormMain.txtMainPerSheet.Text(v.Local.fTotal)
		
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
	
		v.Local.sRectanlgeCalc.Set(v.Screen.FormMain!optRectangleCalc.Value)
		v.Local.sNestingType.Declare
		v.Local.sNestingType.Set("ON")
		f.Intrinsic.Control.If(v.Local.sRectanlgeCalc,=,True)
			v.Local.sNestingType.Set("R")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sNestingType,=,"ON")
			v.Local.sTempSwap.Set(v.Local.sMainSheetLength)
			v.Local.sMainSheetLength.Set(v.Local.sMainSheetWidth)
			v.Local.sMainSheetWidth.Set(v.Local.sTempSwap)
			f.Intrinsic.Math.Mult(v.Local.sPieceLength,2,v.Local.sPieceLength)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sRectanlgeCalc,=,False)
			v.Local.sPieceWidth.Set(v.Local.sPieceLength)
		f.Intrinsic.Control.EndIf	
		f.Intrinsic.Control.If(v.Local.sMainSheetLength,=,"")
			gui.FormMain.txtFullSheetLength.BackColor(Red)
			v.Local.sCheckPopulatedTextFields.Set("1")
		f.Intrinsic.Control.Else
			gui.FormMain.txtFullSheetLength.BackColor(White)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sMainSheetWidth,=,"")
			gui.FormMain.txtFullSheetWidth.BackColor(Red)
			v.Local.sCheckPopulatedTextFields.Set("1")
		f.Intrinsic.Control.Else
			gui.FormMain.txtFullSheetWidth.BackColor(White)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sPieceWidth,=,"")
			gui.FormMain.txtCutPieceWidth.BackColor(Red)
			v.Local.sCheckPopulatedTextFields.Set("1")
		f.Intrinsic.Control.Else
			gui.FormMain.txtCutPieceWidth.BackColor(White)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sPieceLength,=,"")
			gui.FormMain.txtCutPieceLength.BackColor(Red)
			v.Local.sCheckPopulatedTextFields.Set("1")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.Else
			gui.FormMain.txtCutPieceLength.BackColor(White)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sPieceSpace,=,"")
			v.Local.sPieceSpace.Set("10")
			gui.FormMain.txtCutPieceSpacing.Text(v.Local.sPieceSpace)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sCheckPopulatedTextFields,=,1)
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		gui.FormMain.cmdEstimationCalculate.Enabled(False)
	
		v.Local.sPDFFileName.Set("TEST")
		v.Local.sCheckClicked.Set(v.Screen.FormMain!txtFirstOpenCheck.Text)
		f.Intrinsic.Math.Add(v.Local.sPieceLength,v.Local.sPieceSpace,v.Local.sPieceLengthAddSpacing)
		f.Intrinsic.Math.Add(v.Local.sPieceWidth,v.Local.sPieceSpace,v.Local.sPieceWidthAddSpacing)
		f.Intrinsic.Math.Div(v.Local.sMainSheetWidth,2,v.Local.sSheetWidthDivTwo)
		f.Intrinsic.Math.Div(v.Local.sMainSheetLength,2,v.Local.sSheetLengthDivTwo)
		v.Local.stempnumber.Declare
		v.Local.sSwapped.Declare
	
		f.Intrinsic.Control.If(v.Local.sCheckClicked,=,1)
			v.Local.fSleepTime.Set(2)	
			gui.FormMain.txtFirstOpenCheck.Text("2")
		f.Intrinsic.Control.EndIf
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\PythonNestingOptimisedCompleted.exe",v.Local.sEXEPath) 'Path to exe
		'Where the file PDF needs to be saved C:\Apps\Global\PLUGINS\6554_Drawings\APG
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Local.sPDFFileSaveLocation) 'path to where new file needs to be saved
		f.Intrinsic.File.CreateDir(v.Local.sPDFFileSaveLocation) 'creates new file
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,v.Local.sFileLocat) 'path to where text file is saved with PDF configurations
		f.Intrinsic.File.CreateDir(v.Local.sFileLocat) 'creates new file
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_Estimating_Program.txt",v.Local.sFileLocat)
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Local.sConfigFileName,v.Local.sConfigFileName) 'path to where config file is
		f.Intrinsic.File.String2File(v.Local.sConfigFileName, v.Local.sFileLocat) 'upload settings to txt doc
		f.Intrinsic.String.Concat(v.local.sPDFFileSaveLocation,v.Caller.CompanyCode,v.Local.sPDFFileSaveLocation) 'path to where new file needs to be
		f.Intrinsic.String.Replace(v.Local.sPDFFileSaveLocation,"\","/",v.Local.sPDFFileSaveLocationForPY) 'swap slashes to that python runs properly
	
		'#0 #R        - Small fitting type x
		'#1 #100      - Large Plate Width y
		'#2 #86       - Large Plate Height x
		'#3 #16       - Small fitting unit width y
		'#4 #10       - Small fitting unit height x
		'#5 #2        - Offset x
		'#6 #3mm Steel- Materials Name x
		'#7 #3mm Steel- Materials Code x
		'#8 #1.25     - Cutting 1mm speed per seccond x
		'#9 #30       - Punch all Hole cycle time sec per part x
		'#10 #20      - Cut all hole cycle Time sec per part   x
		'#11 #PATH    - Location to save
		'#12 #FileName- What you want the files name to be when saved as pdf
		'#13 #xBoard  - Not Added yet
		'#14 #yBoard  -Not Added yet
		'#15 #xPartOffset -Not Added yet 
		'#16 #yPartOffset -Not Added yet
		'f.Intrinsic.Debug.ShowCallerInfo
		'f.Intrinsic.Debug.ShowCallerInfo
		
		
		f.Intrinsic.String.Concat(v.Local.sNestingType,v.Ambient.NewLine,v.Local.sMainSheetLength,v.Ambient.NewLine,v.Local.sMainSheetWidth,v.Ambient.NewLine,v.Local.sPieceWidth,v.Ambient.NewLine,v.Local.sPieceLength,v.Ambient.NewLine,v.Local.sPieceSpace,v.Ambient.NewLine,"MaterialName",v.Ambient.NewLine,"MaterialCode",v.Ambient.NewLine,"1",v.Ambient.NewLine,"30",v.Ambient.NewLine,"15",v.Ambient.NewLine,v.Local.sPDFFileSaveLocationForPY,v.Ambient.NewLine,v.Local.sPDFFileName,v.Ambient.NewLine,v.Local.sCutPieceSpacingX,v.Ambient.NewLine,v.Local.sCutPieceSpacingY,v.Ambient.NewLine,v.Local.sFullSheetBordX,v.Ambient.NewLine,v.Local.sFullSheetBordY,v.Local.sNestingValues)		' sCutPieceSpacingX sCutPieceSpacingY  sFullSheetBordX   sFullSheetBordY                                   	 
		
		f.Intrinsic.File.String2File(v.Local.sFileLocat, v.Local.sNestingValues) 'upload settings to txt doc
		'f.Intrinsic.UI.Msgbox("Successfully Updated.")
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sEXEPath,"","",1) 'path to exe and opens it.
		Function.Intrinsic.UI.Sleep(v.Local.fSleepTime)
		'f.Intrinsic.Debug.ShowCallerInfo
		
		'f.Intrinsic.Debug.ShowCallerInfo
		'Read text file and populare the GUI's
		'f.Intrinsic.String.Concat(v.Caller.GasDir,"\",V.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sFileLocat) 
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output.txt",v.Local.sFileLocation)
		f.Intrinsic.File.Exists(v.Local.sFileLocation,v.Local.bFileCheck)
		v.Local.sCorrectSelectioin.Declare
		v.Local.sFileLocationToUseOptimized.Declare
		v.Local.sAmountMost.Declare
		v.Local.sAmountSecond.Declare
		v.Local.sAmountThird.Declare
		v.Local.sAmountLast.Declare
		v.Local.sCombination.Declare
		v.Local.sPDFPATHBUTTONS.Declare
		v.Local.sMinCharge.Declare
		
		f.Intrinsic.Control.If(v.Local.bFileCheck)
			f.Intrinsic.File.File2String(v.Local.sFileLocation,v.Local.sVal)
			f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
			v.Local.sCorrectSelectioin.set(v.Local.sVal(0))
			v.Local.sAmountMost.set(v.Local.sVal(1))
			v.Local.sAmountSecond.set(v.Local.sVal(2))
			v.Local.sAmountThird.set(v.Local.sVal(3))
			v.Local.sAmountLast.set(v.Local.sVal(4))
			'f.Intrinsic.Debug.ShowCallerInfo
			f.Intrinsic.String.Replace(v.Local.sAmountMost,".0","",v.Local.sAmountMost)
			f.Intrinsic.String.Replace(v.Local.sAmountSecond,".0","",v.Local.sAmountSecond)
			f.Intrinsic.String.Replace(v.Local.sAmountThird,".0","",v.Local.sAmountThird)
			f.Intrinsic.String.Replace(v.Local.sAmountLast,".0","",v.Local.sAmountLast)
			f.Intrinsic.String.Concat(v.Local.sAmountMost,", ",v.Local.sAmountSecond,", ",v.Local.sAmountThird,", ",v.Local.sAmountLast,v.Local.sCombination)
			gui.FormMain.txtCalculateAlternative.Text(v.Local.sCombination)
			
			f.Intrinsic.String.Concat(v.Local.sPDFFileSaveLocation,"\",v.Local.sPDFFileName,v.Local.sCorrectSelectioin.Trim,".pdf",v.Local.sPDFFULLPATH)
			f.Intrinsic.String.Concat(v.Local.sPDFFileSaveLocation,"\",v.Local.sPDFFileName,v.Local.sPDFPATHBUTTONS)
			gui.FormMain.txtPDFPath.Text(v.Local.sPDFPATHBUTTONS)
			
	
			f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output",v.Local.sCorrectSelectioin.Trim,".txt",v.Local.sFileLocation)
			f.Intrinsic.File.File2String(v.Local.sFileLocation,v.Local.sVal)
			f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
			v.Local.sZoomRatio.set(v.Local.sVal(0))
			v.Local.sTotalAmount.set(v.Local.sVal(1))
			'f.Intrinsic.Debug.ShowCallerInfo
			v.Local.sMainSectionAmount.set(v.Local.sVal(2))
			v.Local.sRightSectionAmount.set(v.Local.sVal(3))
			v.Local.sTopSectionAmount.set(v.Local.sVal(4))
			v.Local.sPlateArea.set(v.Local.sVal(5))
			v.Local.sSingleUnitArea.set(v.Local.sVal(6))
			v.Local.sTotalUnitArea.set(v.Local.sVal(7))
			v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
			v.Local.sSheetFactor.set(v.Local.sVal(9))
			'f.Intrinsic.Debug.ShowCallerInfo
			gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
			gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
			gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
			gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
			gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
			gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
			gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
			gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
			gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
			gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
			gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFFULLPATH)
			gui.FormMain.GsWebBrowserShowPDF.ZoomFactor("0.5")
			gui.FormMain.cmdEstimationCalculate.Enabled(True)
	
			f.Intrinsic.Control.If(v.Global.sMultiple,<>,"1")
				gui.FormMain.txtMainPerSheet.Text(v.Local.sTotalAmount)
				f.Intrinsic.String.Concat("1/",v.Local.sTotalAmount,v.Local.sMinCharge)
				f.Intrinsic.Control.If(v.Local.sTotalAmount,=,0)
					v.Local.sMinCharge.Set("1/1")
				f.Intrinsic.Control.EndIf
				gui.FormMain.txtSheetMinCharge.Text(v.Local.sMinCharge)
				gui.FormMain.txtMainLength .Text(v.Local.sMainSheetLength)
				gui.FormMain.txtMainWidth.Text(v.Local.sMainSheetWidth)
				gui.FormMain.txtMainBord.Text(v.Local.sPieceSpace) 
				gui.FormMain.txtMainSpace.Text(v.Local.sPieceSpace)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Concat("1/",v.Local.sTotalAmount,v.Local.sMinCharge)
				f.Intrinsic.Control.If(v.Local.sTotalAmount,=,0)
					v.Local.sMinCharge.Set("1/1")
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Math.Evaluate(v.Local.sMinCharge,v.Local.sTotalAmount)
				gui.FormMain.txtComponentQty.Text(v.Local.sTotalAmount)
				gui.FormMain.txtComponentMin.Text(v.Local.sMinCharge)
			f.Intrinsic.Control.EndIf
			
			
			f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
				f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
			f.Intrinsic.Control.Else
				f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
			f.Intrinsic.Control.EndIf
			
			gui.FormMain.cmdOptimizedPDFA.Visible(True)
			gui.FormMain.cmdOptimizedPDFB.Visible(True)
			gui.FormMain.cmdOptimizedPDFC.Visible(True)
			gui.FormMain.cmdOptimizedPDFD.Visible(True)
			gui.FormMain.cmdNonOptimizedPDFA.Visible(False)
			gui.FormMain.cmdNonOptimizedPDFB.Visible(False)
			
			gui.FormMain.cmdOptimizedPDFA.Enabled(True)
			gui.FormMain.cmdOptimizedPDFB.Enabled(True)
			gui.FormMain.cmdOptimizedPDFC.Enabled(True)
			gui.FormMain.cmdOptimizedPDFD.Enabled(True)
			gui.FormMain.cmdNonOptimizedPDFA.Enabled(False)
			gui.FormMain.cmdNonOptimizedPDFB.Enabled(False)
		f.Intrinsic.Control.Else
			f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	'f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEstimationCalculateOptimized_Click.End

Program.Sub.cmdEstimationCalculateNonOptimized_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sFileLocat.Declare(string)
	v.Local.sNestingValues.Declare(string)
	v.Local.sEXEPath.Declare
	v.Local.sMainSheetFactor.Declare
	v.Local.sMainPerSheet.Declare
	v.Local.sMainSheetLength.Declare
	v.Local.sMainSheetWidth.Declare
	v.Local.sMainSheetBord.Declare
	v.Local.sPDFFileSaveLocation.Declare
	v.Local.sPDFFileSaveLocationForPY.Declare
	v.Local.sPieceWidth.Declare
	v.Local.sPieceLength.Declare
	v.Local.sPieceSpace.Declare
	v.Local.sCutPieceSpacingX.Declare
	v.Local.sCutPieceSpacingY.Declare
	v.Local.sFullSheetBordX.Declare
	v.Local.sFullSheetBordY.Declare	
	v.Local.sPDFFileName.Declare
	v.Local.sPDFFULLPATH.Declare
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sVal.Declare
	v.Local.bFileCheck.Declare(boolean)
	v.Local.sFileLocation.Declare(string)
	v.Local.fSleepTime.Declare
	v.Local.fSleepTime.Set(1.5)
	v.Local.sCheckClicked.Declare
	v.Local.sConfigFileName.Declare
	v.Local.sPieceLengthAddSpacing.Declare
	v.Local.sPieceWidthAddSpacing.Declare
	v.Local.sSheetWidthDivTwo.Declare
	v.Local.sSheetLengthDivTwo.Declare
	v.Local.sConfigFileName.Set("GAB_6554_Config.txt")
	v.Local.sMainBoard.Set(v.Screen.FormMain!txtFullSheetBord.Text)
	v.Local.sMainSheetLength.set(v.Screen.FormMain!txtFullSheetLength.Text)
	v.Local.sMainSheetWidth.set(v.Screen.FormMain!txtFullSheetWidth.Text)
	v.Local.sMainSheetBord.set(v.Screen.FormMain!txtFullSheetBord.Text) '
	v.Local.sMainSheetFactor.set(v.Screen.FormMain!txtSheetFactor.Text)
	v.Local.sMainPerSheet.set(v.Screen.FormMain!txtTotalItemsPerSheet.Text)
	v.Local.sPieceWidth.set(v.Screen.FormMain!txtCutPieceWidth.Text)
	v.Local.sPieceLength.set(v.Screen.FormMain!txtCutPieceLength.Text)
	v.Local.sPieceSpace.set(v.Screen.FormMain!txtCutPieceSpacing.Text) 'txtCutPieceWidth
	v.Local.sPDFFileName.Set("TEST")
	v.Local.sCheckingPopulation.Declare
	v.Local.sCheckingPopulation.set("0")
	v.Local.sCheckPopulatedTextFields.Declare
	
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.Control.If(v.Local.sMainSheetLength,=,"")
		gui.FormMain.txtFullSheetLength.BackColor(Red)
		v.Local.sCheckPopulatedTextFields.Set("1")
	f.Intrinsic.Control.Else
		gui.FormMain.txtFullSheetLength.BackColor(White)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sMainSheetWidth,=,"")
		gui.FormMain.txtFullSheetWidth.BackColor(Red)
		v.Local.sCheckPopulatedTextFields.Set("1")
	f.Intrinsic.Control.Else
		gui.FormMain.txtFullSheetWidth.BackColor(White)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sPieceWidth,=,"")
		gui.FormMain.txtCutPieceWidth.BackColor(Red)
		v.Local.sCheckPopulatedTextFields.Set("1")
	f.Intrinsic.Control.Else
		gui.FormMain.txtCutPieceWidth.BackColor(White)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sPieceLength,=,"")
		gui.FormMain.txtCutPieceLength.BackColor(Red)
		v.Local.sCheckPopulatedTextFields.Set("1")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.Else
		gui.FormMain.txtCutPieceLength.BackColor(White)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sPieceSpace,=,"")
		v.Local.sPieceSpace.Set("10")
		gui.FormMain.txtCutPieceSpacing.Text(v.Local.sPieceSpace)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sCheckPopulatedTextFields,=,1)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	gui.FormMain.cmdEstimationCalculate.Enabled(False)

	
	
	
	
	'f.Intrinsic.Debug.ShowCallerInfo ',AND,v.Local.sPieceWidth,>,0,AND,v.Local.sPieceLength,>,0,AND,v.Local.sPieceSpace,>,0
	f.Intrinsic.Control.If(v.Local.sMainSheetLength,>,0,AND,v.Local.sMainSheetWidth,>,0)
		f.Intrinsic.Control.If(v.Local.sPieceWidth,>,0,AND,v.Local.sPieceLength,>,0)
			f.Intrinsic.Control.If(v.Local.sPieceSpace,>=,0)
				v.Local.sCheckingPopulation.Set("1")
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Local.sCheckingPopulation,=,1)
	

		'v.Local.sPDFFileName.Set("TEST")
		v.Local.sCheckClicked.Set(v.Screen.FormMain!txtFirstOpenCheck.Text)
		f.Intrinsic.Math.Add(v.Local.sPieceLength,v.Local.sPieceSpace,v.Local.sPieceLengthAddSpacing)
		f.Intrinsic.Math.Add(v.Local.sPieceWidth,v.Local.sPieceSpace,v.Local.sPieceWidthAddSpacing)
		f.Intrinsic.Math.Div(v.Local.sMainSheetWidth,2,v.Local.sSheetWidthDivTwo)
		f.Intrinsic.Math.Div(v.Local.sMainSheetLength,2,v.Local.sSheetLengthDivTwo)
		v.Local.stempnumber.Declare
		v.Local.sSwapped.Declare
	
		f.Intrinsic.Control.If(v.Local.sCheckClicked,=,1)
			v.Local.fSleepTime.Set(2)	
			gui.FormMain.txtFirstOpenCheck.Text("2")
		f.Intrinsic.Control.EndIf
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\PythonNestingNotOptimised.exe",v.Local.sEXEPath) 'Path to exe
		'Where the file PDF needs to be saved C:\Apps\Global\PLUGINS\6554_Drawings\APG
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Local.sPDFFileSaveLocation) 'path to where new file needs to be saved
		f.Intrinsic.File.CreateDir(v.Local.sPDFFileSaveLocation) 'creates new file
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,v.Local.sFileLocat) 'path to where text file is saved with PDF configurations
		f.Intrinsic.File.CreateDir(v.Local.sFileLocat) 'creates new file
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_Estimating_Program.txt",v.Local.sFileLocat)
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Local.sConfigFileName,v.Local.sConfigFileName) 'path to where config file is
		f.Intrinsic.File.String2File(v.Local.sConfigFileName, v.Local.sFileLocat) 'upload settings to txt doc
		f.Intrinsic.String.Concat(v.local.sPDFFileSaveLocation,v.Caller.CompanyCode,v.Local.sPDFFileSaveLocation) 'path to where new file needs to be
		f.Intrinsic.String.Replace(v.Local.sPDFFileSaveLocation,"\","/",v.Local.sPDFFileSaveLocationForPY) 'swap slashes to that python runs properly
	
		'#0 #R        - Small fitting type x
		'#1 #100      - Large Plate Width y
		'#2 #86       - Large Plate Height x
		'#3 #16       - Small fitting unit width y
		'#4 #10       - Small fitting unit height x
		'#5 #2        - Offset x
		'#6 #3mm Steel- Materials Name x
		'#7 #3mm Steel- Materials Code x
		'#8 #1.25     - Cutting 1mm speed per seccond x
		'#9 #30       - Punch all Hole cycle time sec per part x
		'#10 #20      - Cut all hole cycle Time sec per part   x
		'#11 #PATH    - Location to save
		'#12 #FileName- What you want the files name to be when saved as pdf
		'#13 #xBoard  - Not Added yet
		'#14 #yBoard  -Not Added yet
		'#15 #xPartOffset -Not Added yet 
		'#16 #yPartOffset -Not Added yet
		'f.Intrinsic.Debug.ShowCallerInfo
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.String.Concat("R",v.Ambient.NewLine,v.Local.sMainSheetLength,v.Ambient.NewLine,v.Local.sMainSheetWidth,v.Ambient.NewLine,v.Local.sPieceWidth,v.Ambient.NewLine,v.Local.sPieceLength,v.Ambient.NewLine,v.Local.sPieceSpace,v.Ambient.NewLine,"MaterialName",v.Ambient.NewLine,"MaterialCode",v.Ambient.NewLine,"1",v.Ambient.NewLine,"30",v.Ambient.NewLine,"15",v.Ambient.NewLine,v.Local.sPDFFileSaveLocationForPY,v.Ambient.NewLine,v.Local.sPDFFileName,v.Ambient.NewLine,v.Local.sCutPieceSpacingX,v.Ambient.NewLine,v.Local.sCutPieceSpacingY,v.Ambient.NewLine,v.Local.sFullSheetBordX,v.Ambient.NewLine,v.Local.sFullSheetBordY,v.Local.sNestingValues)		' sCutPieceSpacingX sCutPieceSpacingY  sFullSheetBordX   sFullSheetBordY                                   	 
		
		f.Intrinsic.File.String2File(v.Local.sFileLocat, v.Local.sNestingValues) 'upload settings to txt doc
		'f.Intrinsic.UI.Msgbox("Successfully Updated.")
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sEXEPath,"","",1) 'path to exe and opens it.
		Function.Intrinsic.UI.Sleep(v.Local.fSleepTime)
		'f.Intrinsic.Debug.ShowCallerInfo
		
		'f.Intrinsic.Debug.ShowCallerInfo
		'Read text file and populare the GUI's
		'f.Intrinsic.String.Concat(v.Caller.GasDir,"\",V.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sFileLocat)
		
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output.txt",v.Local.sFileLocation)
		f.Intrinsic.File.Exists(v.Local.sFileLocation,v.Local.bFileCheck)
	
	
		v.Local.sUnitsPossibleAmountA.Declare
		v.Local.sUnitsPossibleAmountB.Declare
		v.Local.sCorrectSelectioin.Declare
		v.Local.sPDFPATHBUTTONS.Declare
		f.Intrinsic.Control.If(v.Local.bFileCheck)
	
			'f.Intrinsic.Debug.ShowCallerInfo
			f.Intrinsic.File.File2String(v.Local.sFileLocation,v.Local.sVal)
			f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
			v.Local.sCorrectSelectioin.set(v.Local.sVal(0))
			v.Local.sUnitsPossibleAmountA.set(v.Local.sVal(1))
			v.Local.sUnitsPossibleAmountB.set(v.Local.sVal(2))
			
			f.Intrinsic.Control.If(v.Local.sCorrectSelectioin,=,"N-B")
				gui.FormMain.txtCalculateAlternative.Text(v.Local.sUnitsPossibleAmountA)
			f.Intrinsic.Control.Else
				gui.FormMain.txtCalculateAlternative.Text(v.Local.sUnitsPossibleAmountB)
			f.Intrinsic.Control.EndIf
	
			f.Intrinsic.String.Concat(v.Local.sPDFFileSaveLocation,"\",v.Local.sPDFFileName,v.Local.sCorrectSelectioin.Trim,".pdf",v.Local.sPDFFULLPATH)
			f.Intrinsic.String.Concat(v.Local.sPDFFileSaveLocation,"\",v.Local.sPDFFileName,v.Local.sPDFPATHBUTTONS)
			gui.FormMain.txtPDFPath.Text(v.Local.sPDFPATHBUTTONS)
		
		
			f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output-",v.Local.sCorrectSelectioin.Trim,".txt",v.Local.sFileLocation)
	
			f.Intrinsic.File.File2String(v.Local.sFileLocation,v.Local.sVal)
			f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
			v.Local.sZoomRatio.set(v.Local.sVal(0))
			v.Local.sTotalAmount.set(v.Local.sVal(1))
			'f.Intrinsic.Debug.ShowCallerInfo
			v.Local.sMainSectionAmount.set(v.Local.sVal(2))
			v.Local.sRightSectionAmount.set(v.Local.sVal(3))
			v.Local.sTopSectionAmount.set(v.Local.sVal(4))
			v.Local.sPlateArea.set(v.Local.sVal(5))
			v.Local.sSingleUnitArea.set(v.Local.sVal(6))
			v.Local.sTotalUnitArea.set(v.Local.sVal(7))
			v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
			v.Local.sSheetFactor.set(v.Local.sVal(9))
			'f.Intrinsic.Debug.ShowCallerInfo
			gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
			gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
			gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
			gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
			gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
			gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
			gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
			gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
			gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
			gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
			gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFFULLPATH)
			gui.FormMain.GsWebBrowserShowPDF.ZoomFactor("0.5")
			gui.FormMain.cmdEstimationCalculate.Enabled(True)
			gui.FormMain.txtMainPerSheet.Text(v.Local.sTotalAmount)
			gui.FormMain.txtMainLength.Text(v.Local.sMainSheetLength)
			gui.FormMain.txtMainWidth.Text(v.Local.sMainSheetWidth)
			gui.FormMain.txtMainBord.Text(v.Local.sPieceSpace) 
			gui.FormMain.txtMainSpace.Text(v.Local.sPieceSpace)
			
			gui.FormMain.cmdOptimizedPDFA.Enabled(False)
			gui.FormMain.cmdOptimizedPDFB.Enabled(False)
			gui.FormMain.cmdOptimizedPDFC.Enabled(Flase)
			gui.FormMain.cmdOptimizedPDFD.Enabled(False)
			gui.FormMain.cmdNonOptimizedPDFA.Enabled(True)
			gui.FormMain.cmdNonOptimizedPDFB.Enabled(True)
			
			gui.FormMain.cmdOptimizedPDFA.Visible(False)
			gui.FormMain.cmdOptimizedPDFB.Visible(False)
			gui.FormMain.cmdOptimizedPDFC.Visible(False)
			gui.FormMain.cmdOptimizedPDFD.Visible(False)
			gui.FormMain.cmdNonOptimizedPDFA.Visible(True)
			gui.FormMain.cmdNonOptimizedPDFB.Visible(True)
		f.Intrinsic.Control.Else
			f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Missing inputs.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	'f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEstimationCalculateNonOptimized_Click.End

Program.Sub.cmdFileD_CLICK.Start
F.Intrinsic.control.try
	V.Local.sOrd.Declare
	V.Local.sOrd.Set(V.Screen.formMain!trvFile.SelectedItemKey)
	gui.FormMain.trvFile.RemoveItem(V.Local.sOrd)
F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.cmdFileD_CLICK.End

Program.Sub.cmdGenerateGenPartCode_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.sSQL.set("SELECT * FROM GAB_6595_PART_REF")
	v.Local.iNumber.Declare
	v.Local.sNumber.Declare
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part Prefix*!*Description*!*Last Number","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("1000*!*3000*!*700","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Part Prefix","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		f.Intrinsic.Math.Add(v.Local.sRet(2),1,v.Local.iNumber)
		f.Intrinsic.String.Build("UPDATE GAB_6595_PART_REF SET LastNumber={0} where PART_PREFIX='{1}'",v.Local.iNumber,v.Local.sRet(0),v.Local.sSQL)
		f.ODBC.Connection!con.execute(v.Local.sSQL)
		f.Intrinsic.String.LPad(v.Local.iNumber,"0",6,v.Local.sNumber)
		f.Intrinsic.String.Concat(v.Local.sRet(0),v.Local.sNumber,v.Local.sNumber)
		gui.FormMain.txtPartCode.Text(v.Local.sNumber)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdGenerateGenPartCode_Click.End

Program.Sub.cmdGenerateNewPartCode_Click.Start
f.Intrinsic.Control.Try
	v.Local.sClientCode.Declare
	v.Local.sSql.Declare
	v.Local.sLastNumber.Declare
	v.Local.sNextNumber.Declare
	v.Local.sPrefix.Declare
	v.Local.sCheck.Declare
	v.Local.sCreatedCode.Declare
	v.Local.sClientCode.set(v.Screen.FormMain!txtClientCode.Text)
	
	f.Intrinsic.Control.If(v.Local.sClientCode.Trim,<>,"")
		F.Intrinsic.String.Build("SELECT Prefix FROM GAB_6595_CUST_REF WHERE Customer = '{0}'",v.Local.sClientCode.Trim,v.Local.sSql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sPrefix)
		
		f.Intrinsic.Control.If(v.Local.sPrefix.Trim,=,"")
			Function.Intrinsic.String.RPad(V.Local.sClientCode,"",4,v.Local.sPrefix)
			F.Intrinsic.String.Build("INSERT INTO GAB_6595_CUST_REF (Customer, Prefix, Last_Number)VALUES ('{0}','{1}','{2}')",v.Local.sClientCode.Trim,v.Local.sPrefix.Trim,"0",v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.ssql)
			v.Local.sNextNumber.Set("0000")
			f.Intrinsic.String.Concat(v.Local.sPrefix.tirm,v.Local.sNextNumber.Trim,v.Local.sCreatedCode.trim)
			'need to auto generate 
		f.Intrinsic.Control.Else
			'need to look up and use
			F.Intrinsic.String.Build("SELECT Last_Number FROM GAB_6595_CUST_REF WHERE Customer = '{0}'",v.Local.sClientCode.Trim,v.Local.sSql)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sLastNumber)
			f.Intrinsic.Math.Add(v.Local.sLastNumber,1,v.Local.sNextNumber)
			F.Intrinsic.String.Build("UPDATE GAB_6595_CUST_REF SET Last_Number='{0}' where Customer='{1}'",v.Local.sNextNumber,v.Local.sClientCode.Trim,v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.sSql)
			Function.Intrinsic.String.LPad(V.Local.sNextNumber,"0",4,v.Local.sNextNumber)
			f.Intrinsic.String.Concat(v.Local.sPrefix.tirm,v.Local.sNextNumber.Trim,v.Local.sCreatedCode.trim)
		f.Intrinsic.Control.EndIf
	
		gui.FormMain.txtPartCode.Text(v.Local.sCreatedCode)
		gui.FormMain.txtClientPartNumber.Text(v.Local.sCreatedCode)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdGenerateNewPartCode_Click.End

Program.Sub.cmdGenerateBOM_Click.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.iPlusOne.Declare
	v.Local.sPartQty.Declare
	v.Local.spartnum.Declare
	v.Local.spartnum.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.spartrev.Declare
	v.Local.spartrev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.spartnum,v.Local.spartrev,v.Local.spartnum)
	
	f.Intrinsic.Control.CallSub("PrepBom","SEQ",v.Local.i,"Part",v.Local.spartNum.Trim,"Rev",v.Screen.FormMain!txtPartRevCode.text,"Desc",v.Screen.FormMain!txtPartDescription.text,"UM",v.Screen.FormMain!txtPartUM.text,"Category","","Source","F","Qty","1","Parent",v.Local.spartNum.Trim)
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtBuildupKit.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtBuildupKit(v.Local.i).RowState,<>,8)
			f.Intrinsic.Math.Add(v.Local.i,1,v.Local.iPlusOne)
			f.Intrinsic.Control.CallSub("PrepBom","SEQ",v.Local.iPlusOne,"Part",v.DataTable.dtBuildupKit(v.Local.i).PartNumber!fieldvaltrim,"Rev",v.DataTable.dtBuildupKit(v.Local.i).Rev!fieldvaltrim,"Desc",v.DataTable.dtBuildupKit(v.Local.i).Description!fieldvaltrim,"UM",V.DataTable.dtBuildupKit(V.Local.I).UM!Fieldvaltrim,"Category",v.DataTable.dtBuildupKit(v.Local.i).Category!fieldvaltrim,"Source",v.DataTable.dtBuildupKit(v.Local.i).Source!fieldvaltrim,"Qty",v.DataTable.dtBuildupKit(v.Local.i).Qty!fieldval,"Parent",v.DataTable.dtBuildupKit(v.Local.i).Parent!fieldvaltrim)
			f.Intrinsic.String.Concat(v.DataTable.dtBuildupKit(v.Local.i).Qty!fieldval,"~",v.DataTable.dtBuildupKit(v.Local.i).PartNumber!fieldvaltrim,v.Local.sPartQty)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
				
	gui.frmCreateKit..Enabled(false)
	gui.FormMain..Enabled(false)
	
	V.Local.sBlank.Declare
	v.Local.sFileDir.Declare
	v.Local.bFileLocked.Declare
	v.Local.sFilename.Declare
	v.Local.iRet.Declare
	v.Local.ssql.Declare
	
	'Write contents to the file
	v.Local.sFileName.Set("BOMHDR.txt")
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sFileName,V.local.sFileDir)
	f.Intrinsic.File.String2File(v.Local.sFileDir,v.Local.sBlank)
	f.Intrinsic.File.IsFileLocked(v.Local.sFileDir,v.Local.bFileLocked)
	f.Intrinsic.Control.If(v.Local.bFileLocked,<>,True)
		f.Intrinsic.File.GetHandle(v.local.iRet)
		f.Intrinsic.File.OpenForWrite(V.local.sfiledir,v.local.iRet)
		f.Intrinsic.File.WriteLine(v.Local.iRet,v.global.sfileupload)
		f.Intrinsic.File.CloseFile(v.Local.iRet)
	f.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Error. BOM file locked. Program & upload will need to be reran, routine now exiting.")
		v.Global.sFileUpload.Set("")
	f.Intrinsic.Control.EndIf
	
	'Call the upload program, separate
	V.Local.sProgram.Declare
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6595_BOM_UPLOADER.g2u",V.Local.sProgram)
	f.Global.General.CallSyncGAS(v.Local.sProgram)
	
	'Load the part selected
	v.Global.sFreezeBom.Set(1)
	v.Global.sBom.Set("Y")
	f.Intrinsic.Control.CallSub(OpenSelectPartAction,"Part",v.Local.spartnum,"Description",v.Screen.FormMain!txtPartDescription.text,"Copy","")
			
	gui.FormMain..Enabled(true)
	gui.frmCreateKit..Enabled(true)
	gui.frmCreateKit..Visible(false)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdGenerateBOM_Click.End

Program.Sub.cmdGenerateQuote_Click.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.sPartNumber.Declare
	v.Local.sPartRev.Declare
	v.Local.dDueDate.Declare
	v.Local.dDueDate.Set(v.Screen.FormQuote!dtpDueDate.Value)
	v.Local.sDueDate.Declare
	v.Local.sQuotePrice.Declare
	v.Local.sQty.Declare
	v.Local.sType.Declare
	v.Local.sType.Set(v.Screen.FormQuote!optQuote.Value)
	f.Intrinsic.Control.If(v.Screen.FormQuote!optQuote.Value,=,"True")
		v.Local.sType.Set("Q")
	f.Intrinsic.Control.ElseIf(v.Screen.FormQuote!optQuote.Value,=,"False","AND",v.Screen.FormQuote!optSalesOrder.Value,=,"False")
		f.Intrinsic.UI.Msgbox("Quote / Sales Order option not selected.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.Elseif(v.Screen.FormQuote!optSalesOrder.Value,=,"True")
		v.Local.sType.Set("O")
	f.Intrinsic.Control.EndIf
	
	v.Local.sUserHeader1.Declare
	v.Local.sUserHeader1.Set(v.Screen.FormQuote!txtUserHeader1.text)
	v.Local.sUserHeader2.Declare
	v.Local.sUserHeader2.Set(v.Screen.FormQuote!txtUserHeader2.text)
	v.Local.sUserHeader3.Declare
	v.Local.sUserHeader3.Set(v.Screen.FormQuote!txtUserHeader3.text)
	v.Local.sUserHeader4.Declare
	v.Local.sUserHeader4.Set(v.Screen.FormQuote!txtUserHeader4.text)
	v.Local.sUserHeader5.Declare
	v.Local.sUserHeader5.Set(v.Screen.FormQuote!txtUserHeader5.text)
	v.Local.sOrderSort1.Declare
	v.Local.sOrderSort1.Set(v.Screen.FormQuote!txt2.text)
	v.Local.sOrderSort2.Declare
	v.Local.sOrderSort2.Set(v.Screen.FormQuote!txt3.text)
	v.Local.sCustomerPO.Declare
	v.Local.sCustomerPO.Set(v.Screen.FormQuote!txtReference.text)
	v.Local.scustomer.Declare
	v.Local.scustomer.Set(v.Screen.FormMain!txtClientCode.Text)
	v.Local.sNumber.Declare
	v.Local.bSelected.Declare
	
	f.Intrinsic.Control.If(v.Local.scustomer.Trim,=,"")
		f.Intrinsic.UI.Msgbox("Customer Missing")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.Local.sCustomerPO.Trim,=,"","AND",v.Screen.FormQuote!optSalesOrder.Value,=,"1")
		F.Intrinsic.UI.Msgbox("Customer PO missing")
		f.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FormQuote!lbluserhead1req.Caption,=,"1")
		F.Intrinsic.Control.If(V.Local.sUserHeader1.Trim,=,"")
			F.Intrinsic.UI.Msgbox("User 1 Header missing")
			f.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FormQuote!lbluserhead2req.Caption,=,"1")
		F.Intrinsic.Control.If(V.Local.sUserHeader2.Trim,=,"")
			F.Intrinsic.UI.Msgbox("User 2 Header missing")
			f.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FormQuote!lbluserhead3req.Caption,=,"1")
		F.Intrinsic.Control.If(V.Local.sUserHeader3.Trim,=,"")
			F.Intrinsic.UI.Msgbox("User 3 Header missing")
			f.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FormQuote!lbluserhead4req.Caption,=,"1")
		F.Intrinsic.Control.If(V.Local.sUserHeader4.Trim,=,"")
			F.Intrinsic.UI.Msgbox("User 4 Header missing")
			f.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FormQuote!lbluserhead5req.Caption,=,"1")
		F.Intrinsic.Control.If(V.Local.sUserHeader5.Trim,=,"")
			F.Intrinsic.UI.Msgbox("User 5 Header missing")
			f.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.FormQuote!lbluserhead1val.Caption,=,"1")
		f.Intrinsic.String.Build("SELECT * FROM OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='1' AND KEY_VALUE='{0}'",v.Local.sUserHeader1.Trim,v.Local.ssql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSql,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
			f.Intrinsic.UI.Msgbox("User 1 Field Value is not validated.")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.FormQuote!lbluserhead2val.Caption,=,"1")
		f.Intrinsic.String.Build("SELECT * FROM OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='2' AND KEY_VALUE='{0}'",v.Local.sUserHeader2.Trim,v.Local.ssql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSql,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
			f.Intrinsic.UI.Msgbox("User 2 Field Value is not validated.")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.FormQuote!lbluserhead3val.Caption,=,"1")
		f.Intrinsic.String.Build("SELECT * FROM OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='3' AND KEY_VALUE='{0}'",v.Local.sUserHeader3.Trim,v.Local.ssql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSql,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
			f.Intrinsic.UI.Msgbox("User 3 Field Value is not validated.")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.FormQuote!lbluserhead1val.Caption,=,"1")
		f.Intrinsic.String.Build("SELECT * FROM OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='4' AND KEY_VALUE='{0}'",v.Local.sUserHeader4.Trim,v.Local.ssql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSql,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
			f.Intrinsic.UI.Msgbox("User 4 Field Value is not validated.")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.FormQuote!lbluserhead5val.Caption,=,"1")
		f.Intrinsic.String.Build("SELECT * FROM OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='5' AND KEY_VALUE='{0}'",v.Local.sUserHeader5.Trim,v.Local.ssql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSql,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
			f.Intrinsic.UI.Msgbox("User 5 Field Value is not validated.")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPriceBuildupMaster.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtPriceBuildupMaster(v.Local.i).RowState,<>,8)
			F.Intrinsic.Control.If(v.DataTable.dtPriceBuildupMaster(v.Local.i).SelectPart!Fieldval,=,True)
				v.Local.bSelected.Set(true)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.Control.If(v.Local.bSelected,=,False)
		f.Intrinsic.UI.Msgbox("Please select a line.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	
	f.Intrinsic.Control.If(v.Global.sProfitCentre,=,"1")
		v.Local.iNumber.Declare
		V.Local.sFileLocat.Declare
		v.Local.bFileCheck.Declare
		
		'f.Intrinsic.Control.If(v.Screen.FormQuote!optSalesOrder.Value,=,"true")	
		
		'Check NZAS P numbering
		f.Intrinsic.Control.If(v.Screen.FormQuote!optNZASP.Value,=,"true")
			f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_NZASP_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
			f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
			f.Intrinsic.Control.If(v.Local.bFileCheck)
				f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
				f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
				f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
			f.Intrinsic.Control.Else
				V.Local.iNumber.Set(19000)
				F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		'Check NZAS S numbering
		f.Intrinsic.Control.If(v.Screen.FormQuote!optNZASS.Value,=,"true")
			f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_NZASS_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
			f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
			f.Intrinsic.Control.If(v.Local.bFileCheck)
				f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
				f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
				f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
			f.Intrinsic.Control.Else
				V.Local.iNumber.Set(9900)
				F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		'Check MFG numbering
		f.Intrinsic.Control.If(v.Screen.FormQuote!optMFG.Value,=,"true")
			f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_MFG_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
			f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
			f.Intrinsic.Control.If(v.Local.bFileCheck)
				f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
				f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
				f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
			f.Intrinsic.Control.Else
				V.Local.iNumber.Set(500000)
				F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		'Check Town numbering
		f.Intrinsic.Control.If(v.Screen.FormQuote!optTown.Value,=,"true")
			f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_TOWN_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
			f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
			f.Intrinsic.Control.If(v.Local.bFileCheck)
				f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
				f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
				f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
			f.Intrinsic.Control.Else
				V.Local.iNumber.Set(100000)
				F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		'Check Manual Numbering
		f.Intrinsic.Control.If(v.Screen.FormQuote!optManual.Value,=,"true")
			f.Intrinsic.Control.If(v.Screen.FormQuote!txtManual.text,=,"")
				f.Intrinsic.UI.Msgbox("Please enter a number")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			v.Local.iNumber.Set(v.Screen.FormQuote!txtManual.text)
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.iNumber,=,0)
			f.Intrinsic.UI.Msgbox("Please select a profit centre.")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.Else
			f.Intrinsic.String.LPad(v.Local.iNumber,"0",7,v.Local.sNumber)
		f.Intrinsic.Control.EndIf
		
		'George Sandoval 13 Sep 2023 - Add check to verify if the sales order number already exists as an open order
		f.Intrinsic.Control.If(v.Screen.FormQuote!optManual.Value,=,"True","And",v.Screen.FormQuote!optSalesOrder.Value,=,"True")
			F.Intrinsic.String.Build("Select top 1 rtrim(ORDER_NO)ORDER_NO from ORDER_HEADER WHERE ORDER_NO = '{0}' and RECORD_TYPE = 'L'",V.Local.sNumber,V.Local.ssql)
			F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret,=!,"")
				f.Intrinsic.UI.Msgbox("Order number already exists in an open order. Please enter a new number","Duplicate SO Number")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		'George Sandoval 13 Sep 2023 - Add check to verify if the sales order number already exists in history
		f.Intrinsic.Control.If(v.Screen.FormQuote!optManual.Value,=,"True","And",v.Screen.FormQuote!optSalesOrder.Value,=,"True")
			F.Intrinsic.String.Build("Select top 1 rtrim(ORDER_NO)ORDER_NO from ORDER_HIST_HEAD WHERE ORDER_NO = '{0}'",V.Local.sNumber,V.Local.ssql)
			F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret,=!,"")
'			f.Intrinsic.Control.If(v.Local.sret,=!,"")
				f.Intrinsic.UI.Msgbox("Order number already exists in history. Please enter a new number","Duplicate SO Number in history")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		'George Sandoval 13 Sep 2023 - Add check to verify if the quote already exists
		f.Intrinsic.Control.If(v.Screen.FormQuote!optManual.Value,=,"True","And",v.Screen.FormQuote!optQuote.Value,=,"True")
			F.Intrinsic.String.Build("Select top 1 rtrim(QUOTE_NO)QUOTE_NO from QUOTE_HEADER WHERE QUOTE_NO = '{0}' and RECORD_TYPE = 'L'",V.Local.sNumber,V.Local.ssql)
			F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret,=!,"")
'			f.Intrinsic.Control.If(v.Local.sret,=!,"")
				f.Intrinsic.UI.Msgbox("Quote number already exists. Please enter a new number","Duplicate Quote Number")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
			
		'F.Intrinsic.Control.Else
'			f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_QUOTE_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
'			f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
'			f.Intrinsic.Control.If(v.Local.bFileCheck)
'				f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
'				f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
'				f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
'			f.Intrinsic.Control.Else
'				V.Local.iNumber.Set(1)
'				F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
'			f.Intrinsic.Control.EndIf
'			f.Intrinsic.String.LPad(v.Local.iNumber,"0",7,v.Local.sNumber)
'		f.Intrinsic.Control.EndIf

	f.Intrinsic.Control.EndIf
	
			
	f.Intrinsic.String.Build("SELECT NAME_CUSTOMER_SHIP, ADDRESS1_SHIP, ADDRESS2_SHIP FROM V_CUSTOMER_SHIPTO WHERE CUSTOMER='{0}'",v.Screen.FormMain!txtClientCode.text,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
	v.Local.snameship.Declare
	v.Local.saddress1ship.Declare
	v.Local.saddress2ship.Declare
	v.Local.sText.Declare
	v.Local.sSalesMan.Declare
	v.Local.sSalesMan.Set(v.Screen.FormQuote!txtSalesRep.text)
	v.Local.sShipVia.Declare
	v.Local.sShipVia.Set(v.Screen.FormQuote!txtShipVia.text)
	v.Local.sAttention.Declare
	v.Local.sAttention.Set(v.Screen.FormQuote!txtAttention.text)
	f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
	v.Local.snameship.Set(v.Local.sret(0))
	v.Local.saddress1ship.Set(v.Local.sret(1))
	v.Local.saddress2ship.Set(v.Local.sret(2))
	
	f.Intrinsic.String.Format(v.Local.dDueDate,"YYYYMMDD",v.Local.sDueDate)
	f.Data.DataTable.AddRow("6004Header","OrderNum",v.Local.sNumber,"ShipToId",v.Screen.FormQuote!txtShipToID.text,"TaxFreightFlag","Y","CustNum",v.Screen.FormMain!txtClientCode.text,"Type",v.Local.sType,"DueDate",v.Local.sDueDate,"User1",v.Local.sUserHeader1,"User2",v.Local.sUserHeader2,"User3",v.Local.sUserHeader3,"User4",v.Local.sUserHeader4,"User5",v.Local.sUserHeader5,"PO",v.Local.sCustomerPO,"Salesman",v.Local.sSalesMan)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPriceBuildupMaster.RowCount--,1)

		f.Intrinsic.Control.If(v.DataTable.dtPriceBuildupMaster(v.Local.i).RowSTate,<>,8)
			F.Intrinsic.Control.If(v.DataTable.dtPriceBuildupMaster(v.Local.i).SelectPart!Fieldval,=,True)
			
				'price format
				F.Intrinsic.String.Format(v.DataTable.dtPriceBuildupMaster(v.Local.i).SellPriceEA!fieldval,"0000000000.000000",V.Local.sQuotePrice)
				f.Intrinsic.String.Replace(v.Local.sQuotePrice,".","",v.Local.sQuotePrice)
			
				'QTY format
				F.Intrinsic.String.Format(v.DataTable.dtPriceBuildupMaster(v.Local.i).Qty!fieldval,"000000000.0000",V.Local.sQty)
				F.Intrinsic.String.Replace(V.Local.sQty,".","",V.Local.sQty)
				F.Intrinsic.String.Replace(V.Local.sQty,"-","",V.Local.sQty)
				
				'''START HERE'''
				'''PART REV CODE ISSUE ON QUOTE'''
				f.Intrinsic.String.Left(v.DataTable.dtPriceBuildupMaster(v.Local.i).PartNumber!fieldvaltrim,17,v.Local.sPartNumber)
				f.Intrinsic.String.Mid(v.DataTable.dtPriceBuildupMaster(v.Local.i).PartNumber!fieldvaltrim,18,v.Local.sPartRev)
				f.Data.DataTable.AddRow("6004Lines","PromiseDate",v.Local.sDueDate, "OrderNum",V.Local.sNumber, "TaxStatusFlag","T","User1",v.DataTable.dtPriceBuildupMaster(v.Local.i).User1!fieldvaltrim,"User2",v.DataTable.dtPriceBuildupMaster(v.Local.i).User2!fieldvaltrim,"User3",v.DataTable.dtPriceBuildupMaster(v.Local.i).User3!fieldvaltrim,"User4",v.DataTable.dtPriceBuildupMaster(v.Local.i).User4!fieldvaltrim,"User5",v.DataTable.dtPriceBuildupMaster(v.Local.i).User5!fieldvaltrim, "QtyOrdered",v.Local.sQty,"Part",v.Local.sPartNumber,"Rev",v.Local.sPartRev,"PartDescription",v.DataTable.dtPriceBuildupMaster(v.Local.i).PartDescription!fieldvaltrim,"UM","EA","PL","FG","QuotedPrice",V.Local.sQuotePrice)
				
			F.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)

	gui.FormMain..Enabled(false)
	gui.FormQuote..Enabled(false)
	f.Intrinsic.Control.CallSub(6004Sync)
	
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.iPlusOne.Declare
	v.Local.sPlusOne.Declare

	v.Local.sFile.Declare
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\ORDQTE.TXT",v.Local.sFile)
	v.Local.sQuoteNumber.Declare
	f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sQuoteNumber)
	F.Intrinsic.String.Replace(V.Local.sQuoteNumber,V.Ambient.NewLine,"",V.Local.sQuoteNumber)
	
	'Update SO HEADER extra text
	V.Local.sSOText.Declare
	V.Local.sSOText.Set(V.Screen.FormQuote!txtSOComments.Text)
	
	
	f.Intrinsic.Control.If(v.Local.sType.Trim,=,"Q")
	
		F.Intrinsic.String.Build("UPDATE QUOTE_HEADER SET SHIP_VIA='{0}' WHERE QUOTE_NO='{1}' AND RECORD_TYPE='A'",v.Local.sShipVia,v.Local.sQuoteNumber,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		F.Intrinsic.String.Build("UPDATE QUOTE_SHIP_TO SET ATTENTION_SHIP='{0}' WHERE QUOTE_NO='{1}' AND RECORD_TYPE='C'",v.Local.sAttention.PSQLFriendly,v.Local.sQuoteNumber,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		'George Sandoval 13 Sep 2023 - Users want these notes to go the the header, not the line
		F.Intrinsic.String.Build("Insert into QUOTE_LN_TEXT (QUOTE_NUMBER,QUOTE_LINE,QUOTE_TYPE,TEXT) VALUES('{0}','0010','9999','{1}')",V.Local.sQuoteNumber,V.Local.sSOText.PSQLFriendly,V.Local.sSQL)
'		F.Intrinsic.String.Build("Insert into QUOTE_HF_TEXT (QUOTE_NO,TEXT,ON_QUOTE,ON_SORDR) VALUES('{0}','{1}','1','1')",V.Local.sQuoteNumber,V.Local.sSOText.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!CON.Execute(V.Local.sSQL)
		
		F.Data.DataTable.AddRow("251000","QuoteNo",v.Local.sQuoteNumber,"Mode","O")
		f.Intrinsic.Control.CallSub(251000Async)
	f.Intrinsic.Control.Else
		F.Intrinsic.String.Build("UPDATE ORDER_HEADER SET SHIP_VIA='{0}' WHERE ORDER_NO='{1}' AND RECORD_TYPE='A'",v.Local.sShipVia,v.Local.sQuoteNumber,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
		
		F.Intrinsic.String.Build("UPDATE ORDER_SHIP_TO SET ATTENTION_SHIP='{0}' WHERE ORDER_NO='{1}' AND RECORD_TYPE='C'",v.Local.sAttention.PSQLFriendly,v.Local.sQuoteNumber,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
	
		'George Sandoval 13 Sep 2023 - Users want these notes to go the the header, not the line
		F.Intrinsic.String.Build("Insert into ORDER_LN_TEXT (ORDER_NUM,ORDER_LINE,ORDER_TYPE,TEXT) VALUES('{0}','0010','9999','{1}')",V.Local.sQuoteNumber,V.Local.sSOText.PSQLFriendly,V.Local.sSQL)
'		F.Intrinsic.String.Build("Insert into ORDER_HF_TEXT (ORDER_NUMBER,TEXT,ON_QUOTE,ON_SORDR) VALUES('{0}','{1}','1','1')",V.Local.sQuoteNumber,V.Local.sSOText.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!CON.Execute(V.Local.sSQL)
		f.Intrinsic.Control.If(v.Screen.FormQuote!chkCreateWO.Value,=,"1")
			f.Data.DataTable.AddRow("200800","OrdNum",v.Local.sQuoteNumber)
			f.Intrinsic.Control.CallSub(200800Sync)
			f.Intrinsic.String.Right(v.Local.sQuoteNumber,6,v.Local.sJob)
			f.Data.Datatable.AddRow("900200","BegWO",v.Local.sJob,"BegWOSuffix","001","EndWO",v.Local.sJob,"EndWOSuffix","001")
			f.Intrinsic.Control.CallSub(900200Sync)
		F.Intrinsic.Control.Else
			F.Data.DataTable.AddRow("200000","OrdNum",v.Local.sQuoteNumber,"Mode","O")
			f.Intrinsic.Control.CallSub(200000Async)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	gui.FormMain..Enabled(True)
	gui.FormQuote..Enabled(True)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdGenerateQuote_Click.End

Program.Sub.cmdLaserCutterCalc_Click.Start
f.Intrinsic.Control.Try
	gui.frmLaserCutter..Show
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdLaserCutterCalc_Click.End

Program.Sub.cmdQuickAddInventory_Click.Start
f.Intrinsic.Control.Try
	gui.frmQuickRouter..Show
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdQuickAddInventory_Click.End

Program.Sub.cmdQuickOrderCreate_Click.Start
f.Intrinsic.Control.Try
	v.Local.sShipToID.Declare
	v.Local.scustomer.Declare
	v.Local.scustomer.Set(v.Screen.FormMain!txtClientCode.Text)
	v.Local.i.Declare
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.sPartNumber.Declare
	v.Local.sPartRev.Declare
	v.Local.dDueDate.Declare
	v.Local.dDueDate.Set(v.Ambient.date)
	v.Local.sDueDate.Declare
	v.Local.sQuotePrice.Declare
	v.Local.sQty.Declare
	v.Local.sType.Declare
	v.Local.sType.Set(v.Screen.FormMain!optQQuote.Value)
	
	f.Intrinsic.Control.If(v.Screen.FormMain!optQQuote.Value,=,"True")
		v.Local.sType.Set("Q")
	f.Intrinsic.Control.ElseIf(v.Screen.FormMain!optQQuote.Value,=,"False","AND",v.Screen.FormMain!optQSalesOrder.Value,=,"False")
		f.Intrinsic.UI.Msgbox("Quote / Sales Order option not selected.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.Elseif(v.Screen.FormMain!optQSalesOrder.Value,=,"True")
		v.Local.sType.Set("O")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Local.scustomer.Trim,=,"")
		f.Intrinsic.UI.Msgbox("Customer Missing")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Format(v.Local.dDueDate,"YYYYMMDD",v.Local.sDueDate)
	f.Intrinsic.Control.If(v.Caller.CompanyCode,=,"ALP")
		v.Local.sShipToID.Set("000001")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.AddRow("6004Header","ShipToId",v.Local.sShipToID,"TaxFreightFlag","Y","CustNum",v.Screen.FormMain!txtClientCode.text,"Type",v.Local.sType,"DueDate",v.Local.sDueDate,"PO","ENTER PO#")
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtQuickPriceBuildup.RowCount--,1)

		f.Intrinsic.Control.If(v.DataTable.dtQuickPriceBuildup(v.Local.i).RowState,<>,8)
			'price format
			F.Intrinsic.String.Format(v.DataTable.dtQuickPriceBuildup(v.Local.i).SellPriceEA!fieldval,"0000000000.000000",V.Local.sQuotePrice)
			f.Intrinsic.String.Replace(v.Local.sQuotePrice,".","",v.Local.sQuotePrice)
		
			'QTY format
			F.Intrinsic.String.Format(v.DataTable.dtQuickPriceBuildup(v.Local.i).Qty!fieldval,"000000000.0000",V.Local.sQty)
			F.Intrinsic.String.Replace(V.Local.sQty,".","",V.Local.sQty)
			F.Intrinsic.String.Replace(V.Local.sQty,"-","",V.Local.sQty)
			
			'''START HERE'''
			'''PART REV CODE ISSUE ON QUOTE'''
			f.Intrinsic.String.Left(v.DataTable.dtQuickPriceBuildup(v.Local.i).PartNumber!fieldvaltrim,17,v.Local.sPartNumber)
			f.Intrinsic.String.Mid(v.DataTable.dtQuickPriceBuildup(v.Local.i).PartNumber!fieldvaltrim,18,v.Local.sPartRev)
			f.Data.DataTable.AddRow("6004Lines","TaxStatusFlag","T","User1",v.DataTable.dtQuickPriceBuildup(v.Local.i).User1!fieldvaltrim,"User2",v.DataTable.dtQuickPriceBuildup(v.Local.i).User2!fieldvaltrim,"User3",v.DataTable.dtQuickPriceBuildup(v.Local.i).User3!fieldvaltrim,"User4",v.DataTable.dtQuickPriceBuildup(v.Local.i).User4!fieldvaltrim,"User5",v.DataTable.dtQuickPriceBuildup(v.Local.i).User5!fieldvaltrim, "QtyOrdered",v.Local.sQty,"Part",v.Local.sPartNumber,"Rev",v.Local.sPartRev,"PartDescription",v.DataTable.dtQuickPriceBuildup(v.Local.i).PartDescription!fieldvaltrim,"UM","EA","PL",V.DataTable.dtQuickPriceBuildup(V.Local.I).PL!Fieldval,"QuotedPrice",V.Local.sQuotePrice)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	gui.FormMain..Enabled(false)
	gui.FormQuote..Enabled(false)
	f.Intrinsic.Control.CallSub(6004Sync)
	v.Local.sFile.Declare
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\ORDQTE.TXT",v.Local.sFile)
	v.Local.sQuoteNumber.Declare
	f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sQuoteNumber)
	f.Intrinsic.Control.If(v.Local.sType.Trim,=,"Q")
		F.Data.DataTable.AddRow("251000","QuoteNo",v.Local.sQuoteNumber,"Mode","O")
		f.Intrinsic.Control.CallSub(251000Async)
	f.Intrinsic.Control.Else
		F.Data.DataTable.AddRow("200000","OrdNum",v.Local.sQuoteNumber,"Mode","O")
		f.Intrinsic.Control.CallSub(200000Async)
	f.Intrinsic.Control.EndIf
	gui.FormMain..Enabled(True)
	gui.FormQuote..Enabled(True)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdQuickOrderCreate_Click.End

Program.Sub.cmdMassAdd_Click.Start
f.Intrinsic.Control.Try
	F.Data.DataView.Create("dtCustomerParts","dvCustomerParts",22,"SelectPart=True","")
	f.Intrinsic.Control.If(v.DataView.dtCustomerParts!dvCustomerParts.RowCount,=,0)
		f.Intrinsic.UI.Msgbox("Select records from list.")
		f.Data.DataView.Close("dtCustomerParts","dvCustomerParts")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.Else
		f.Data.DataView.Close("dtCustomerParts","dvCustomerParts")
	f.Intrinsic.Control.EndIf
	
	gui.frmMassAdd..Show
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdMassAdd_Click.End

Program.Sub.cmdMassDelete_Click.Start
f.Intrinsic.Control.Try
	F.Data.DataView.Create("dtCustomerParts","dvCustomerParts",22,"SelectPart=True","")
	f.Intrinsic.Control.If(v.DataView.dtCustomerParts!dvCustomerParts.RowCount,=,0)
		f.Intrinsic.UI.Msgbox("Select records from list.")
		f.Data.DataView.Close("dtCustomerParts","dvCustomerParts")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	v.Local.i.Declare
	V.Local.iRefID.Declare
	v.Local.iRet.Declare
	v.Local.ssql.Declare
	v.Local.sret.Declare
	V.Local.sPartNumber.Declare
	v.Local.fQtyOnhand.Declare
	
	f.Intrinsic.UI.Msgbox("Are you sure you want to delete these parts?","Are you Sure?",4,v.Local.iRet)
	
	f.Intrinsic.Control.If(v.Local.iRet,=,6)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataView.dtCustomerParts!dvCustomerParts.RowCount--,1)
			v.Local.sPartNumber.Set(v.DataView.dtCustomerParts!dvCustomerParts(v.Local.i).ROUTER!FIELDVALTRIM)
			f.Intrinsic.String.Build("SELECT QTY_ONHAND FROM V_INVENTORY_MSTR WHERE PART='{0}'",v.Local.sPartNumber,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fQtyOnhand)
			
			f.Intrinsic.Control.If(v.Local.fQtyOnhand,>,0)
				f.Intrinsic.UI.Msgbox("Cannot delete, qty onhand exists.")
			f.Intrinsic.Control.Else
		
				f.Global.DocumentControl.GetLinkID(v.Local.sPartNumber,30,v.Local.iRefID)
				
				f.Intrinsic.String.Build("DELETE FROM ATG_DOC_ASSOC WHERE LINK_ID={0}",v.Local.iRefID,v.Local.ssql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
	
				f.Intrinsic.String.Build("DELETE FROM INVENTORY_MSTR WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				f.Intrinsic.String.Build("DELETE FROM INVENTORY_MST2 WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				f.Intrinsic.String.Build("DELETE FROM INVENTORY_MST3 WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				f.Intrinsic.String.Build("DELETE FROM INV_EXTRA_TEXT WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM ROUTER_HEADER WHERE ROUTER='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM ROUTER_XREF WHERE ROUTER='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM ROUTER_SUPP_HDR WHERE RTR_NUM='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM BOM_MSTR WHERE parent='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM BOM_ENG WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				F.Intrinsic.String.Build("DELETE FROM INV_CROSS_REF WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
			f.Intrinsic.Control.EndIf				
			
		f.Intrinsic.Control.Next(v.Local.i)
		
		f.Intrinsic.Control.CallSub(clearAll)
		
	f.Intrinsic.Control.EndIf
	
	f.Data.DataView.Close("dtCustomerParts","dvCustomerParts")

	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdMassDelete_Click.End

Program.Sub.cmdNonOptimizedPDFA_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sPDFPATH.Declare
	v.Local.sPATH.Declare
	v.Local.STXTPATH.Declare	
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sVal.Declare
	v.Local.sMoveAmount.Declare
	v.Local.bFileCheck.Declare
	v.Local.sPATH.set(v.Screen.FormMain!txtPDFPath.Text)
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output-N-A.txt",v.Local.STXTPATH)
	f.Intrinsic.String.Concat(v.Local.sPATH,"N-A.pdf",v.Local.sPDFPATH)
	v.Local.sMoveAmount.set(v.Screen.FormMain!txtTotalAmount.Text)
	gui.FormMain.txtCalculateAlternative.Text(v.Local.sMoveAmount)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.File.Exists(v.Local.STXTPATH,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.STXTPATH,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'f.Intrinsic.Debug.ShowCallerInfo
		gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
		gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
		gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
		gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
		gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
		gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
		gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
		gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
		gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
		gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
		gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFPATH)
		gui.FormMain.txtMainPerSheet.Text(v.Local.sTotalAmount)
		
		gui.FormMain.cmdOptimizedPDFA.Enabled(False)
		gui.FormMain.cmdOptimizedPDFB.Enabled(False)
		gui.FormMain.cmdOptimizedPDFC.Enabled(Flase)
		gui.FormMain.cmdOptimizedPDFD.Enabled(False)
		gui.FormMain.cmdNonOptimizedPDFA.Enabled(True)
		gui.FormMain.cmdNonOptimizedPDFB.Enabled(True)
		
		gui.FormMain.cmdOptimizedPDFA.Visible(False)
		gui.FormMain.cmdOptimizedPDFB.Visible(False)
		gui.FormMain.cmdOptimizedPDFC.Visible(False)
		gui.FormMain.cmdOptimizedPDFD.Visible(False)
		gui.FormMain.cmdNonOptimizedPDFA.Visible(True)
		gui.FormMain.cmdNonOptimizedPDFB.Visible(True)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdNonOptimizedPDFA_Click.End

Program.Sub.cmdNonOptimizedPDFB_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sPDFPATH.Declare
	v.Local.sPATH.Declare
	v.Local.STXTPATH.Declare	
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sVal.Declare
	v.Local.sMoveAmount.Declare
	v.Local.bFileCheck.Declare
	v.Local.sPATH.set(v.Screen.FormMain!txtPDFPath.Text)
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_Output-N-B.txt",v.Local.STXTPATH)
	f.Intrinsic.String.Concat(v.Local.sPATH,"N-B.pdf",v.Local.sPDFPATH)
	v.Local.sMoveAmount.set(v.Screen.FormMain!txtTotalAmount.Text)
	gui.FormMain.txtCalculateAlternative.Text(v.Local.sMoveAmount)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.File.Exists(v.Local.STXTPATH,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.STXTPATH,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'f.Intrinsic.Debug.ShowCallerInfo
		gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
		gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
		gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
		gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
		gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
		gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
		gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
		gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
		gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
		gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
		gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFPATH)
		gui.FormMain.txtMainPerSheet.Text(v.Local.sTotalAmount)
		
		gui.FormMain.cmdOptimizedPDFA.Enabled(False)
		gui.FormMain.cmdOptimizedPDFB.Enabled(False)
		gui.FormMain.cmdOptimizedPDFC.Enabled(Flase)
		gui.FormMain.cmdOptimizedPDFD.Enabled(False)
		gui.FormMain.cmdNonOptimizedPDFA.Enabled(True)
		gui.FormMain.cmdNonOptimizedPDFB.Enabled(True)
		
		gui.FormMain.cmdOptimizedPDFA.Visible(False)
		gui.FormMain.cmdOptimizedPDFB.Visible(False)
		gui.FormMain.cmdOptimizedPDFC.Visible(False)
		gui.FormMain.cmdOptimizedPDFD.Visible(False)
		gui.FormMain.cmdNonOptimizedPDFA.Visible(True)
		gui.FormMain.cmdNonOptimizedPDFB.Visible(True)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdNonOptimizedPDFB_Click.End

Program.Sub.cmdOK_Click.Start
f.Intrinsic.Control.Try
	v.Local.iNumber.Declare
	V.Local.sFileLocat.Declare
	v.Local.bFileCheck.Declare
	
	'Check NZAS P numbering
	f.Intrinsic.Control.If(v.Screen.Form!optNZASP.Value,=,"true")
		f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_NZASP_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
		f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
		f.Intrinsic.Control.If(v.Local.bFileCheck)
			f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
			f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
			f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
		f.Intrinsic.Control.Else
			V.Local.iNumber.Set(19000)
			F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'Check NZAS S numbering
	f.Intrinsic.Control.If(v.Screen.Form!optNZASS.Value,=,"true")
		f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_NZASS_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
		f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
		f.Intrinsic.Control.If(v.Local.bFileCheck)
			f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
			f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
			f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
		f.Intrinsic.Control.Else
			V.Local.iNumber.Set(9900)
			F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'Check MFG numbering
	f.Intrinsic.Control.If(v.Screen.Form!optMFG.Value,=,"true")
		f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_MFG_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
		f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
		f.Intrinsic.Control.If(v.Local.bFileCheck)
			f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
			f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
			f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
		f.Intrinsic.Control.Else
			V.Local.iNumber.Set(500000)
			F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'Check Town numbering
	f.Intrinsic.Control.If(v.Screen.Form!optTown.Value,=,"true")
		f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_TOWN_",v.Caller.CompanyCode,".txt",v.Local.sFileLocat)
		f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
		f.Intrinsic.Control.If(v.Local.bFileCheck)
			f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.iNumber)
			f.Intrinsic.Math.Add(v.Local.iNumber,1,v.Local.iNumber)
			f.Intrinsic.File.String2File(v.Local.sFileLocat,v.Local.iNumber)
		f.Intrinsic.Control.Else
			V.Local.iNumber.Set(100000)
			F.Intrinsic.File.String2File(V.Local.sFileLocat,V.Local.iNumber)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

	f.Intrinsic.Variable.AddRV("rOrder",v.Local.iNumber)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.cmdOK_Click.End

Program.Sub.cmdOpenFile_Click.Start
F.Intrinsic.control.try
	V.Local.sFile.declare
	V.Local.ssql.declare
	V.Local.sret.declare
	v.Local.sval.Declare
	
'	V.Local.sSQL.set("SELECT DISTINCT DOC_CONTROL_PATH FROM GAB_4486_QRE_CONFIG WHERE LTRIM(DOC_CONTROL_PATH)<>''")
'	F.ODBC.connection!con.executeandreturn(V.Local.ssql,V.Local.sret)
	f.Intrinsic.String.Split(v.Screen.FormMain!txtFileT.text,"~",v.Local.sval)
'	F.Intrinsic.string.concat(V.Local.sret,"\",V.local.sval(0),V.Local.sfile)

	F.Intrinsic.task.ShellExec(V.Caller.Handle,"OPEN",V.Local.sVal(0),"","",5)
F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.cmdOpenFile_Click.End

Program.Sub.cmdOpenThumbnail_Click.Start
F.Intrinsic.control.try
	v.Local.sPNGLocationPath.Declare
	v.Local.sPNGLocation.Declare
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\DXF_TO_PNG\pnglocation.txt",v.Local.sPNGLocationPath)
	f.Intrinsic.File.File2String(v.Local.sPNGLocationPath,v.Local.sPNGLocation)
	f.Intrinsic.Control.If(v.Local.sPNGLocation,!=,"")
		gui.FormMain.GsWebBrowserShowPDF.loadurl(v.Local.sPNGLocation)
	f.Intrinsic.Control.EndIf
F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.cmdOpenThumbnail_Click.End

Program.Sub.cmdOptimizedPDFA_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sPDFPATH.Declare
	v.Local.sPATH.Declare
	v.Local.STXTPATH.Declare	
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sVal.Declare
	v.Local.sMinCharge.Declare
	v.Local.bFileCheck.Declare
	v.Local.sPATH.set(v.Screen.FormMain!txtPDFPath.Text)
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_OutputA.txt",v.Local.STXTPATH)
	f.Intrinsic.String.Concat(v.Local.sPATH,"A.pdf",v.Local.sPDFPATH)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.File.Exists(v.Local.STXTPATH,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.STXTPATH,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'f.Intrinsic.Debug.ShowCallerInfo
		gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
		gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
		gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
		gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
		gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
		gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
		gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
		gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
		gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
		gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
		gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFPATH)
		gui.FormMain.txtMainPerSheet.Text(v.Local.sTotalAmount)
		f.Intrinsic.String.Concat("1/",v.Local.sTotalAmount,v.Local.sMinCharge)
		gui.FormMain.txtSheetMinCharge.Text(v.Local.sMinCharge)
		
			
		f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
			f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
		f.Intrinsic.Control.EndIf
		
		gui.FormMain.cmdOptimizedPDFA.Enabled(True)
		gui.FormMain.cmdOptimizedPDFB.Enabled(True)
		gui.FormMain.cmdOptimizedPDFC.Enabled(True)
		gui.FormMain.cmdOptimizedPDFD.Enabled(True)
		gui.FormMain.cmdNonOptimizedPDFA.Enabled(False)
		gui.FormMain.cmdNonOptimizedPDFB.Enabled(False)
		
		gui.FormMain.cmdOptimizedPDFA.Visible(True)
		gui.FormMain.cmdOptimizedPDFB.Visible(True)
		gui.FormMain.cmdOptimizedPDFC.Visible(True)
		gui.FormMain.cmdOptimizedPDFD.Visible(True)
		gui.FormMain.cmdNonOptimizedPDFA.Visible(False)
		gui.FormMain.cmdNonOptimizedPDFB.Visible(False)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdOptimizedPDFA_Click.End

Program.Sub.cmdOptimizedPDFB_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	v.Local.sPDFPATH.Declare
	v.Local.sPATH.Declare
	v.Local.STXTPATH.Declare	
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sMinCharge.Declare
	v.Local.sVal.Declare
	v.Local.bFileCheck.Declare
	v.Local.sPATH.set(v.Screen.FormMain!txtPDFPath.Text)
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_OutputB.txt",v.Local.STXTPATH)
	f.Intrinsic.String.Concat(v.Local.sPATH,"B.pdf",v.Local.sPDFPATH)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.File.Exists(v.Local.STXTPATH,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.STXTPATH,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'f.Intrinsic.Debug.ShowCallerInfo
		gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
		gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
		gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
		gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
		gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
		gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
		gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
		gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
		gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
		gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
		gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFPATH)
		gui.FormMain.txtMainPerSheet.Text(v.Local.sTotalAmount)
		f.Intrinsic.String.Concat("1/",v.Local.sTotalAmount,v.Local.sMinCharge)
		gui.FormMain.txtSheetMinCharge.Text(v.Local.sMinCharge)
		
		
		f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
			f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.spart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.spart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
		f.Intrinsic.Control.EndIf
		
		gui.FormMain.cmdOptimizedPDFA.Enabled(True)
		gui.FormMain.cmdOptimizedPDFB.Enabled(True)
		gui.FormMain.cmdOptimizedPDFC.Enabled(True)
		gui.FormMain.cmdOptimizedPDFD.Enabled(True)
		gui.FormMain.cmdNonOptimizedPDFA.Enabled(False)
		gui.FormMain.cmdNonOptimizedPDFB.Enabled(False)
		
		gui.FormMain.cmdOptimizedPDFA.Visible(True)
		gui.FormMain.cmdOptimizedPDFB.Visible(True)
		gui.FormMain.cmdOptimizedPDFC.Visible(True)
		gui.FormMain.cmdOptimizedPDFD.Visible(True)
		gui.FormMain.cmdNonOptimizedPDFA.Visible(False)
		gui.FormMain.cmdNonOptimizedPDFB.Visible(False)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdOptimizedPDFB_Click.End

Program.Sub.cmdOptimizedPDFC_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	v.Local.sPDFPATH.Declare
	v.Local.sPATH.Declare
	v.Local.STXTPATH.Declare	
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	v.Local.sVal.Declare
	v.Local.sMinCharge.Declare
	v.Local.bFileCheck.Declare
	v.Local.sPATH.set(v.Screen.FormMain!txtPDFPath.Text)
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_OutputC.txt",v.Local.STXTPATH)
	f.Intrinsic.String.Concat(v.Local.sPATH,"C.pdf",v.Local.sPDFPATH)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.File.Exists(v.Local.STXTPATH,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.STXTPATH,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'f.Intrinsic.Debug.ShowCallerInfo
		gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
		gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
		gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
		gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
		gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
		gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
		gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
		gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
		gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
		gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
		gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFPATH)
		gui.FormMain.txtMainPerSheet.Text(v.Local.sTotalAmount)
		f.Intrinsic.String.Concat("1/",v.Local.sTotalAmount,v.Local.sMinCharge)
		gui.FormMain.txtSheetMinCharge.Text(v.Local.sMinCharge)
		
		
		f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
			f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
		f.Intrinsic.Control.EndIf
		
		gui.FormMain.cmdOptimizedPDFA.Enabled(True)
		gui.FormMain.cmdOptimizedPDFB.Enabled(True)
		gui.FormMain.cmdOptimizedPDFC.Enabled(True)
		gui.FormMain.cmdOptimizedPDFD.Enabled(True)
		gui.FormMain.cmdNonOptimizedPDFA.Enabled(False)
		gui.FormMain.cmdNonOptimizedPDFB.Enabled(False)
		
		gui.FormMain.cmdOptimizedPDFA.Visible(True)
		gui.FormMain.cmdOptimizedPDFB.Visible(True)
		gui.FormMain.cmdOptimizedPDFC.Visible(True)
		gui.FormMain.cmdOptimizedPDFD.Visible(True)
		gui.FormMain.cmdNonOptimizedPDFA.Visible(False)
		gui.FormMain.cmdNonOptimizedPDFB.Visible(False)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdOptimizedPDFC_Click.End

Program.Sub.cmdOptimizedPDFD_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	v.Local.sPDFPATH.Declare
	v.Local.sPATH.Declare
	v.Local.STXTPATH.Declare	
	v.Local.sZoomRatio.Declare
	v.Local.sTotalAmount.Declare
	v.Local.sMainSectionAmount.Declare
	v.Local.sRightSectionAmount.Declare
	v.Local.sTopSectionAmount.Declare
	v.Local.sPlateArea.Declare
	v.Local.sMainBoard.Declare
	v.Local.sSingleUnitArea.Declare
	v.Local.sTotalUnitArea.Declare
	v.Local.sUnitToPlateRatio.Declare
	v.Local.sSheetFactor.Declare
	V.Local.sMinCharge.Declare
	v.Local.sVal.Declare
	v.Local.bFileCheck.Declare
	v.Local.sPATH.set(v.Screen.FormMain!txtPDFPath.Text)
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\6554_Drawings\",v.Caller.CompanyCode,"_GAB_6595_EP_OutputD.txt",v.Local.STXTPATH)
	f.Intrinsic.String.Concat(v.Local.sPATH,"D.pdf",v.Local.sPDFPATH)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.File.Exists(v.Local.STXTPATH,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.STXTPATH,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.sZoomRatio.set(v.Local.sVal(0))
		v.Local.sTotalAmount.set(v.Local.sVal(1))
		v.Local.sMainSectionAmount.set(v.Local.sVal(2))
		v.Local.sRightSectionAmount.set(v.Local.sVal(3))
		v.Local.sTopSectionAmount.set(v.Local.sVal(4))
		v.Local.sPlateArea.set(v.Local.sVal(5))
		v.Local.sSingleUnitArea.set(v.Local.sVal(6))
		v.Local.sTotalUnitArea.set(v.Local.sVal(7))
		v.Local.sUnitToPlateRatio.set(v.Local.sVal(8))
		v.Local.sSheetFactor.set(v.Local.sVal(9))
		'f.Intrinsic.Debug.ShowCallerInfo
		gui.FormMain.txtZoomRatio.Text(v.Local.sZoomRatio)
		gui.FormMain.txtTotalAmount.Text(v.Local.sTotalAmount)
		gui.FormMain.txtMainSection.Text(v.Local.sMainSectionAmount)
		gui.FormMain.txtRightSection.Text(v.Local.sRightSectionAmount)
		gui.FormMain.txt1TopSection.Text(v.Local.sTopSectionAmount)
		gui.FormMain.txtPlateArea.Text(v.Local.sPlateArea)
		gui.FormMain.txt1UnitArea.Text(v.Local.sSingleUnitArea)
		gui.FormMain.txtAllUnitArea.Text(v.Local.sTotalUnitArea)
		gui.FormMain.txt1UnitPlateRatio.Text(v.Local.sUnitToPlateRatio)
		gui.FormMain.txtSheetFactor.Text(v.Local.sSheetFactor)
		gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sPDFPATH)
		gui.FormMain.txtMainPerSheet.Text(v.Local.sTotalAmount)
		f.Intrinsic.String.Concat("1/",v.Local.sTotalAmount,v.Local.sMinCharge)
		gui.FormMain.txtSheetMinCharge.Text(v.Local.sMinCharge)
		
		
		f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
			f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
		f.Intrinsic.Control.EndIf
		
		gui.FormMain.cmdOptimizedPDFA.Enabled(True)
		gui.FormMain.cmdOptimizedPDFB.Enabled(True)
		gui.FormMain.cmdOptimizedPDFC.Enabled(True)
		gui.FormMain.cmdOptimizedPDFD.Enabled(True)
		gui.FormMain.cmdNonOptimizedPDFA.Enabled(False)
		gui.FormMain.cmdNonOptimizedPDFB.Enabled(False)
		
		gui.FormMain.cmdOptimizedPDFA.Visible(True)
		gui.FormMain.cmdOptimizedPDFB.Visible(True)
		gui.FormMain.cmdOptimizedPDFC.Visible(True)
		gui.FormMain.cmdOptimizedPDFD.Visible(True)
		gui.FormMain.cmdNonOptimizedPDFA.Visible(False)
		gui.FormMain.cmdNonOptimizedPDFB.Visible(False)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Failed to load estimation data.")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdOptimizedPDFD_Click.End

Program.Sub.cmdPartUMBrowse_Click.Start
F.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("SELECT CODE, DESCR FROM V_UM_CODES")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("UM*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("400*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a UM","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormMain.txtPartUM.Text(v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdPartUMBrowse_Click.End

Program.Sub.cmdPartPLBrowse_Click.Start
F.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("select PROD_LINE, PL_NAME from V_PL_MASTER")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("PL*!*PL Name","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("400*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a PL","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormMain.txtPartPL.Text(v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdPartPLBrowse_Click.End

Program.Sub.cmdPartLengthWidthSwap_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sLength.Declare
	v.Local.sWidth.Declare
	v.Local.sLength.Set(v.Screen.FormMain!txtCutPieceLength.Text)
	v.Local.sWidth.Set(v.Screen.FormMain!txtCutPieceWidth.Text)
	gui.FormMain.txtCutPieceLength.Text(v.Local.sWidth)
	gui.FormMain.txtCutPieceWidth.Text(v.Local.sLength)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdPartLengthWidthSwap_Click.End

Program.Sub.cmdPowderCalculator_Click.Start
f.Intrinsic.Control.Try
	gui.SS_FORM..Show
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.cmdPowderCalculator_Click.End

Program.Sub.cmdQuickAddDescription_Click.Start
f.Intrinsic.Control.Try
	v.Local.sPartXSize.Declare
	v.Local.sPartYSize.Declare
	v.Local.sPartXYSize.Declare
	v.Local.sMaterialName.Declare
	v.Local.sCurrentText.Declare
	v.Local.sLastUpdate.Declare
	v.Local.sPartXSize.set("TEMP")
	v.Local.sPartYSize.set("TEMP2")
	v.Local.sMaterialName.set(v.Screen.FormMain!txtMaterialName.Text)
	v.Local.sCurrentText.set(v.Screen.FormMain!txtPartDescription.Text)
	v.Local.sLastUpdate.Set(v.Screen.FormMain!txtPartDescription2.Text)
	
	'checking if this button has been pressed. If so will reset the description.
	f.Intrinsic.Control.if(v.Local.sLastUpdate,!=,"")
		v.Local.sCurrentText.Set(v.Local.sLastUpdate)
	f.Intrinsic.Control.EndIf
	'will check if x and y have anything. If so will append
	f.Intrinsic.Control.If(v.Local.sPartXSize,!=,"")
		f.Intrinsic.Control.If(v.Local.sPartYSize,!=,"")
			f.Intrinsic.String.Concat(v.Local.sPartXSize.Trim,"x",v.Local.sPartYSize.Trim,v.Local.sPartXYSize)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	'will check if material is selected. If so will append
	f.Intrinsic.Control.If(v.Local.sMaterialName,!=,"")
			f.Intrinsic.String.Concat(v.Local.sPartXYSize,"_",v.Local.sMaterialName.Trim,v.Local.sPartXYSize)
	f.Intrinsic.Control.EndIf
	'saves a backup of the current descriptoin
	gui.FormMain.txtPartDescription2.Text(v.Local.sCurrentText)
	'concats the current description with the xy adn description
	f.Intrinsic.String.Concat(v.Local.sCurrentText.trim,"_",v.Local.sPartXYSize.Trim,v.Local.sCurrentText.trim)
	'updates the form
	gui.FormMain.txtPartDescription.Text(v.Local.sCurrentText.trim)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdQuickAddDescription_Click.End

Program.Sub.cmdQuoteAddPart_Click.Start
f.Intrinsic.Control.Try
	f.Data.DataTable.AddRow("dtPriceBuildupMaster","SelectPart",True,"PartNumber",v.Screen.FormQuote!txtPart.text,"PartDescription",v.Screen.FormQuote!txtDesc.text,"Qty",v.Screen.FormQuote!txtQTY.text,"SellPriceEA",v.Screen.FormQuote!txtPrice.text)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdQuoteAddPart_Click.End

Program.Sub.cmdQuotePartBrowse_click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.sSQL.set("SELECT PART, DESCRIPTION, UM_INVENTORY, PRODUCT_LINE, CODE_SORT, AMT_PRICE FROM V_INVENTORY_ALL")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part*!*Description*!*UM Inventory*!*Product Line*!*Code Sort*!*Amount Price","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("2000*!*3000*!*300*!*300*!*700*!*1000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select an Inventory Part","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormQuote.txtPart.Text(v.Local.sRet(0))
		gui.FormQuote.txtDesc.Text(v.Local.sRet(1))
		gui.FormQuote.txtUM.Text(v.Local.sRet(2))
		gui.FormQuote.txtPrice.Text(v.Local.sRet(5))
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdQuotePartBrowse_click.End

Program.Sub.cmdRemoveZeroTime_Click.Start
f.Intrinsic.Control.Try
	v.Local.k.declare(long)
	v.Local.sRet.Declare
	v.Local.sRet2.Declare
	v.Local.sOperations.Declare
	v.Local.fOperations.declare
	v.Local.sDuration.Declare
	v.Local.fDuration.declare
	v.Local.fTime.declare
	v.Local.sRoute.Declare
	v.Local.sDVRoute.Declare

	f.Intrinsic.control.for(v.Local.k,v.DataTable.dtWorkSelection.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.k).UM!Fieldvaltrim,=,"JB","AND",v.DataTable.dtWorkSelection(v.Local.k).Setup!fieldval,<>,0)
			f.Intrinsic.UI.SleepMS(1)
		f.Intrinsic.Control.Else
			f.Intrinsic.String.RegExMatch(v.DataTable.dtWorkSelection(v.Local.k).Operation!fieldvaltrim,"-?\d+",true,v.Local.soperations)
			f.Intrinsic.String.Split(v.Local.soperations,"*!*",v.Local.soperations)
			f.Intrinsic.Control.Try
				f.Intrinsic.Math.ConvertToFloat(v.Local.soperations(v.Local.soperations.UBound),v.Local.fOperations)
			f.Intrinsic.Control.EndTry
			
			f.Intrinsic.String.RegExMatch(v.DataTable.dtWorkSelection(v.Local.k).Operation!fieldvaltrim,"-?\d+",true,v.Local.soperations)
			f.Intrinsic.String.Split(v.Local.soperations,"*!*",v.Local.soperations)
			f.Intrinsic.Control.Try
				f.Intrinsic.Math.ConvertToFloat(v.Local.soperations(v.Local.soperations.UBound),v.Local.fOperations)
			f.Intrinsic.Control.EndTry
			
			v.Local.fTime.set(v.DataTable.dtWorkSelection(v.Local.k).Process!fieldval)
			f.Intrinsic.control.if(v.Local.fOperations,=,0)
			f.Intrinsic.control.andif(v.Local.fDuration,=,0)
			f.Intrinsic.control.andif(v.Local.ftime,=,0)
				f.Data.datatable.DeleteRow("dtWorkSelection",v.Local.k)
			f.Intrinsic.control.endif
		f.Intrinsic.Control.EndIf
	f.Intrinsic.control.next(v.Local.k)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRemoveZeroTime_Click.End

Program.Sub.cmdTopParent_Click.Start
f.Intrinsic.Control.Try
	v.Local.spart.Declare
	v.Local.spart.Set(v.Screen.FormMain!cmdTopParent.Caption)
	f.Intrinsic.Control.CallSub(OpenSelectPartAction,"Part",v.Local.spart,"Description","","Copy","")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdTopParent_Click.End

Program.Sub.cmdUserHeader1Browse_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("select rtrim(KEY_VALUE) from OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='1'")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Values","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("3500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select User 1 Value","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		gui.FormQuote.txtUserHeader1.Text(v.Local.sRet)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUserHeader1Browse_Click.End

Program.Sub.cmdUserHeader2Browse_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("select rtrim(KEY_VALUE) from OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='2'")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Values","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("3500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select User 2 Value","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		gui.FormQuote.txtUserHeader2.Text(v.Local.sRet)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUserHeader2Browse_Click.End

Program.Sub.cmdUserHeader3Browse_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("select rtrim(KEY_VALUE) from OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='3'")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Values","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("3500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select User 3 Value","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		gui.FormQuote.txtUserHeader3.Text(v.Local.sRet)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUserHeader3Browse_Click.End

Program.Sub.cmdUserHeader4Browse_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("select rtrim(KEY_VALUE) from OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='4'")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Values","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("3500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select User 4 Value","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		gui.FormQuote.txtUserHeader4.Text(v.Local.sRet)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUserHeader4Browse_Click.End

Program.Sub.cmdUserHeader5Browse_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("select rtrim(KEY_VALUE) from OE_USER_VALUES WHERE HDR_FLAG='H' AND USER_NO='5'")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Values","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("3500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select User 5 Value","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		gui.FormQuote.txtUserHeader5.Text(v.Local.sRet)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUserHeader5Browse_Click.End

Program.Sub.cmdupdatecompanycodeprefix_Click.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sClientCode.Declare
	v.Local.sClientCode.Set(V.Screen.FormCCSetUp!txtCurrentCompanyCode.Text)
	v.Local.sPrefix.Declare
	v.Local.sPrefix.Set(V.Screen.FormCCSetUp!txtCompanyPrefix.Text)
	v.Local.sLastNumber.Declare
	v.Local.sLastNumber.Set(V.Screen.FormCCSetUp!txtNextNumber.Text)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.Control.If(v.Local.sPrefix.Trim,!=,"")
		f.Intrinsic.Control.If(v.Local.sLastNumber.Trim,!=,"")
			F.Intrinsic.String.Build("DELETE FROM GAB_6595_CUST_REF WHERE Customer = '{0}'",v.Local.sClientCode.Trim,v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.ssql)
			F.Intrinsic.String.Build("INSERT INTO GAB_6595_CUST_REF (Customer, Prefix, Last_Number)VALUES ('{0}','{1}','{2}')",v.Local.sClientCode.Trim,v.Local.sPrefix.Trim,v.Local.sLastNumber.Trim,v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.ssql)
			gui.FormUpdatePartsText..Visible(False)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
		gui.FormMain.cmdGenerateNewPartCode.Visible(true)
		gui.FormMain.cmdCheckPrefixConnnection.Visible(false)
	f.Intrinsic.Control.CallSub(FormCCSetup_Unload) 
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdupdatecompanycodeprefix_Click.End

Program.Sub.cmdUpdateGroup_Click.Start
F.Intrinsic.control.try
	v.Local.sOld.Declare
	V.Local.sFile.Declare
	V.Local.sFileExt.Declare
	V.Local.sSplit.Declare
	v.Local.sVal.Declare
	v.Local.sFileCheck.Declare
	v.Local.sFileCheck.Set(v.Screen.FormMain!txtFileT.text)
	
	f.Intrinsic.Control.If(v.Local.sFileCheck.Trim,<>,"")
		'Set Variables
		v.Local.sOld.Set(V.Screen.FormMain!trvFile.SelectedItemKey)
		V.Local.sFile.Set(V.Screen.FormMain!trvFile.SelectedItemKey)
		
		'Delete from Tree an Dictionary first
		gui.FormMain.trvFile.RemoveItem(V.Local.sFile)
	
		'Split out by ~ and concat new group
		f.Intrinsic.String.Split(v.Local.sFile,"~",v.Local.sSplit)
		f.Intrinsic.String.Concat(v.Local.sSplit(0),"~",v.Screen.FormMain!ddlDocGroup.Value,v.Local.sfile)
		
		'Add the file to directionary with its extension, add to tree
		gui.FormMain.trvFile.AddNode("",4,V.Local.sFile,V.Local.sFile)
		
		'Blank the Field
		gui.FormMain.txtFileT.text("")
		gui.FormMain.ddlDocGroup.Text("")
	f.Intrinsic.Control.EndIf

F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.cmdUpdateGroup_Click.End

Program.Sub.cmdWCOut_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.sSQL.set("SELECT MACHINE, OPERATION, DESCRIPTION, RATE, STD_LEAD_TIME,UNIT_MEASURE,STANDARD_SETUP FROM V_OP_CODES where LMO='O' ORDER BY DESCRIPTION")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Outside Process*!*Vendor*!*Description*!*Cost*!*Lead Time*!*UM*!*Min Charge","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("2000*!*750*!*3000*!*1000*!*1000*!*750*!*1000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select an Outside Process","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormMain.txtOut.Text(v.Local.sRet(0))
		gui.FormMain.txtOutVendor.Text(v.Local.sRet(1))
		gui.FormMain.txtOutDesc.Text(v.Local.sRet(2))
		gui.FormMain.txtOutRate.Text(v.Local.sRet(3))
		gui.FormMain.txtLeadTime.Text(v.Local.sRet(4))
		gui.FormMain.txtOutUM.Text(v.Local.sRet(5))
		gui.FormMain.txtOutMin.Text(v.Local.sRet(6))
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(formmain_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdWCOut_Click.End

Program.Sub.cmdDeleteOverride_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSql.Declare
	v.Local.sPart.Declare
	V.Local.sRev.Declare
	v.Local.sSeq.Declare
	v.Local.sOutside.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	v.Local.sSeq.Set(v.Screen.frmOverride!lblSeq.Caption)
	v.Local.sOutside.Set(v.Screen.frmOverride!lblOutside.Caption)
	f.Intrinsic.String.Build("DELETE FROM GAB_6595_OVERRIDE WHERE PART='{0}' AND SEQUENCE='{1}'",v.Local.spart,v.Local.sSeq,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Data.DataTable.DeleteRow("dtOverride")
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.UI.Msgbox("Records deleted")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdDeleteOverride_Click.End

Program.Sub.cmdSaveOverride_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSql.Declare
	v.Local.sPart.Declare
	v.Local.sRev.Declare
	v.Local.sSeq.Declare
	v.Local.sOutside.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	v.Local.sSeq.Set(v.Screen.frmOverride!lblSeq.Caption)
	v.Local.sOutside.Set(v.Screen.frmOverride!lblOutside.Caption)
	
	f.Intrinsic.String.Build("DELETE FROM GAB_6595_OVERRIDE WHERE PART='{0}' AND SEQUENCE='{1}'",v.Local.spart.Trim,v.Local.sSeq,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.ssql)
	V.Local.I.Declare
	f.Intrinsic.Control.For(v.Local.I,0,v.DataTable.dtOverride.RowCount--,1)
		F.Intrinsic.Control.If(v.DataTable.dtOverride(v.Local.i).RowState,<>,8)
			f.Intrinsic.String.Build("INSERT INTO GAB_6595_OVERRIDE VALUES ('{0}',{1},{2},{3},'{4}','{5}')",V.Local.sOutside,V.Local.sSeq,v.DataTable.dtOverride(v.Local.i).Qty!fieldval,v.DataTable.dtOverride(v.Local.i).Amt!fieldval,v.Local.sPart.Trim,"O",v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.sSql)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(V.Local.I)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.UI.Msgbox("Saved")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSaveOverride_Click.End

Program.Sub.cmdShipVia_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.sSQL.set("SELECT ID, MESSAGE FROM V_SHIP_VIA")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("ID*!*Message","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("750*!*1500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a code","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormQuote.txtShipVia.Text(v.Local.sRet(1))
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(formmain_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdShipVia_Click.End

Program.Sub.cmdSalesRep_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.sSQL.set("SELECT ID, NAME FROM V_SALESPERSONS")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("ID*!*NAME","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("750*!*1500","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a code","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.FormQuote.txtSalesRep.Text(v.Local.sRet(0))
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(formmain_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSalesRep_Click.End

Program.Sub.cmdContactName_Click.Start

Program.Sub.cmdContactName_Click.End

Program.Sub.ddlColour_Click.Start
f.Intrinsic.Control.Try
	V.Local.sret.Declare
	V.Local.sret2.Declare
	V.Local.spart.Declare
	V.Local.sColour.declare
	V.Local.scolour.set(V.Screen.SS_Form!ddlColour.Text)
	F.Intrinsic.string.split(V.Local.scolour,"-",V.Local.scolour)
	V.Local.ssql.Declare(string,"SELECT STANDARD_BILL FROM V_WORKCENTERS WHERE MACHINE='PC'")
	V.Local.fBill.Declare
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.ssql,V.Local.fBill)
	
	V.Local.ssql.set("SELECT CREWSIZE FROM V_WORKCENTERS WHERE MACHINE='PC'")
	V.Local.fCrew.Declare
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.ssql,V.Local.fCrew)
	
	V.Local.fAltCost.Declare
	V.Local.ssql.Set("SELECT amt_alt_cost,part FROM V_INVENTORY_MSTR WHERE DESCRIPTION='{0}'")
	F.Intrinsic.String.Build(V.Local.ssql,V.Local.scolour(0),V.Local.ssql)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.ssql,V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sret,"*!*",V.Local.sret)
	V.Local.fAltCost.Set(V.Local.sret(0))
	V.Local.spart.Set(V.Local.sret(1))
	gui.ss_form.lblPart.caption(V.Local.sret(1))
	
	'Get microns from part
	V.Local.fMicrons.Declare
	V.Local.ssql.Set("SELECT thickness FROM V_INVENTORY_MST3 WHERE PART='{0}'")
	F.Intrinsic.String.Build(V.Local.ssql,V.Local.spart,V.Local.ssql)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.ssql,V.Local.fMicrons)
	
	'Get the linespeed from part
	V.Local.flinespeed.Declare
	V.Local.ssql.Set("SELECT text_info2 FROM V_INVENTORY_MST2 WHERE PART='{0}'")
	F.Intrinsic.String.Build(V.Local.ssql,V.Local.spart,V.Local.ssql)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.ssql,V.Local.flinespeed)
	
	'Get the universal markup
	V.Local.fMarkup.Declare
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT OUTSIDE_2 FROM V_MARKUP_PCT",V.Local.fMarkup)
	F.Intrinsic.Math.Evaluate("([V.Local.fMarkup]-1)*100",V.Local.fMarkup)
	
	
	gui.SS_Form.txtGap.Text(v.Global.sPowderGap)
	gui.SS_Form.txtMan.Text(v.Global.sPowderMan)
	gui.SS_Form.txtLabourRate.Text(v.Global.sPowderLab)
	gui.SS_Form.txtSetupCost.Text(v.Global.sPowderSet)
	gui.SS_Form.txtLineSpeed.Text(V.Local.flinespeed)
	gui.SS_Form.txtPowdPrice.Text(V.Local.fAltCost)
	gui.SS_Form.txtPowdThick.Text(V.Local.fMicrons)
	gui.SS_Form.txtMarkup.text(V.Local.fMarkup)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlColour_Click.End

Program.Sub.ddlFeature_Change.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sSelectedFeature.Declare
	v.Local.sSelectedFeature.Set(v.Screen.FormMain!ddlFeature.Value)
	'txtDiamiterMM txtFeatureQty txtEstProTimes
	f.Intrinsic.Control.If(v.Local.sSelectedFeature,=,"Circle")
		gui.FormMain.lblDiamiterMM.Caption("Diameter")
		
		gui.FormMain.txtDiamiterMM.Visible(True)
		gui.FormMain.txtFeatureQty.Visible(True)
		gui.FormMain.txtEstProTimes.Visible(False)
		gui.FormMain.txtSpeed.Visible(True)
		
		gui.FormMain.lblDiamiterMM.Visible(True)
		gui.FormMain.lblFeatureQty.Visible(True)
		gui.FormMain.lblEstProTimes.Visible(False)
		gui.FormMain.lblSpeed.Visible(True)
		gui.FormMain.txtFeatureRectLen.Visible(False)
		gui.FormMain.txtFeatureRectWid.Visible(False)
	f.Intrinsic.Control.elseIf(v.Local.sSelectedFeature,=,"Cut Time")
		gui.FormMain.txtDiamiterMM.Visible(false)
		gui.FormMain.lblDiamiterMM.Visible(false)
		
	f.Intrinsic.Control.elseIf(v.Local.sSelectedFeature,=,"Pierce")
		gui.FormMain.lblDiamiterMM.Caption("Pierce")
		gui.FormMain.txtDiamiterMM.Text(v.Screen.FormMain!txtMainPierce.text)
		gui.FormMain.txtDiamiterMM.Visible(True)
		gui.FormMain.txtFeatureQty.Visible(True)
		gui.FormMain.txtEstProTimes.Visible(False)
		gui.FormMain.txtSpeed.Visible(True)
		
		gui.FormMain.lblDiamiterMM.Visible(True)
		gui.FormMain.lblFeatureQty.Visible(True)
		gui.FormMain.lblEstProTimes.Visible(False)
		gui.FormMain.lblSpeed.Visible(True)
		gui.FormMain.txtFeatureRectLen.Visible(False)
		gui.FormMain.txtFeatureRectWid.Visible(False)
	f.Intrinsic.Control.elseIf(v.Local.sSelectedFeature,=,"Rectangle")
		gui.FormMain.lblDiamiterMM.Caption("Dia/Pierce")
		gui.FormMain.txtFeatureRectLen.Visible(true)
		gui.FormMain.txtFeatureRectWid.Visible(true)
		gui.FormMain.txtDiamiterMM.Visible(False)
		gui.FormMain.txtFeatureQty.Visible(True)
		gui.FormMain.txtEstProTimes.Visible(False)
		gui.FormMain.txtSpeed.Visible(True)
		
		gui.FormMain.lblDiamiterMM.Visible(False)
		gui.FormMain.lblFeatureQty.Visible(True)
		gui.FormMain.lblEstProTimes.Visible(False)
		gui.FormMain.lblSpeed.Visible(True)
	f.Intrinsic.Control.else
		gui.FormMain.lblDiamiterMM.Caption("Dia/Pierce")
		gui.FormMain.txtFeatureRectLen.Visible(False)
		gui.FormMain.txtFeatureRectWid.Visible(False)
		gui.FormMain.txtDiamiterMM.Visible(True)
		gui.FormMain.txtFeatureQty.Visible(True)
		gui.FormMain.txtEstProTimes.Visible(True)
		gui.FormMain.txtSpeed.Visible(True)
		
		gui.FormMain.lblDiamiterMM.Visible(True)
		gui.FormMain.lblFeatureQty.Visible(True)
		gui.FormMain.lblEstProTimes.Visible(True)
		gui.FormMain.lblSpeed.Visible(True)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlFeature_Change.End

Program.Sub.ddlWorkCenter_Change.Start
f.Intrinsic.Control.Try

	v.Local.sSql.Declare
	v.Local.sret.Declare
	v.Local.fCost.Declare
	f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.FormMain!ddlWorkCenter.Value,v.Local.sSql)
	f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
	
	f.Intrinsic.Control.If(v.Local.sret,<>,"***NORETURN***")
		gui.FormMain.txtWCCode.Text(v.DataTable.dtSteps(v.Local.sret).WORKCENTRE!FieldValTrim)
		gui.FormMain.txtWCRunRate.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_RUN_RATE!FieldVal)
		gui.FormMain.txtWCRunUM.Text(v.DataTable.dtSteps(v.Local.sret).COST_UNIT!fieldval)
		gui.FormMain.txtWCSetupRate.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_RATE!fieldval)
		gui.FormMain.txtWCSetupTime.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_TIME!fieldval)
		gui.FormMain.ddlWCRunUnit.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_RUN_TYPE!Fieldvaltrim)
		gui.FormMain.txtWCOpcode.Text(v.DataTable.dtSteps(v.Local.sret).Opcode!Fieldvaltrim)
		
		f.Intrinsic.String.Build("SELECT ifnull(STANDARD_COST,0) FROM WORKCENTERS WHERE MACHINE='{0}'",v.DataTable.dtSteps(v.Local.sret).WORKCENTRE!FieldValTrim,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.fCost)
		gui.FormMain.txtWCCost.Text(v.Local.fCost)
	f.Intrinsic.Control.EndIf
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlWorkCenter_Change.End

Program.Sub.ddlProcess_Change.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sret.Declare
	v.Local.fCost.Declare
	f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess.Value,v.Local.sSql)
	f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
	
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		gui.frmMassAdd.txtSetupRate.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_RATE!fieldval)
		gui.frmMassAdd.txtSetupTime.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_TIME!fieldval)
		gui.frmMassAdd.txtOpCode1.Text(v.DataTable.dtSteps(v.Local.sret).Opcode!Fieldvaltrim)
		gui.frmMassAdd.txtRunSell.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_RUN_RATE!Fieldval)
		GUI.frmMassAdd.txtRunTime1.Text("0")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlProcess_Change.End

Program.Sub.ddlProcess2_Change.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sret.Declare
	v.Local.fCost.Declare
	f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess2.Value,v.Local.sSql)
	f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
	
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		gui.frmMassAdd.txtSetupRate2.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_RATE!fieldval)
		gui.frmMassAdd.txtSetupTime2.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_TIME!fieldval)
		gui.frmMassAdd.txtOpCode2.Text(v.DataTable.dtSteps(v.Local.sret).Opcode!Fieldvaltrim)
		gui.frmMassAdd.txtRunSell2.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_RUN_RATE!Fieldval)
		GUI.frmMassAdd.txtRunTime2.Text("0")	
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlProcess2_Change.End

Program.Sub.ddlProcess3_Change.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sret.Declare
	v.Local.fCost.Declare
	f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess3.Value,v.Local.sSql)
	f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
	
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		gui.frmMassAdd.txtSetupRate3.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_RATE!fieldval)
		gui.frmMassAdd.txtSetupTime3.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_TIME!fieldval)
		gui.frmMassAdd.txtOpCode3.Text(v.DataTable.dtSteps(v.Local.sret).Opcode!Fieldvaltrim)
		gui.frmMassAdd.txtRunSell3.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_RUN_RATE!Fieldval)
		GUI.frmMassAdd.txtRunTime3.Text("0")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlProcess3_Change.End

Program.Sub.ddlProcess4_Change.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sret.Declare
	v.Local.fCost.Declare
	f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess4.Value,v.Local.sSql)
	f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
	
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		gui.frmMassAdd.txtSetupRate4.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_RATE!fieldval)
		gui.frmMassAdd.txtSetupTime4.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_TIME!fieldval)
		gui.frmMassAdd.txtOpCode4.Text(v.DataTable.dtSteps(v.Local.sret).Opcode!Fieldvaltrim)
		gui.frmMassAdd.txtRunSell4.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_RUN_RATE!Fieldval)
		GUI.frmMassAdd.txtRunTime4.Text("0")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlProcess4_Change.End

Program.Sub.ddlProcess5_Change.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sret.Declare
	v.Local.fCost.Declare
	f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.frmMassAdd!ddlProcess5.Value,v.Local.sSql)
	f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
	
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		gui.frmMassAdd.txtSetupRate5.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_RATE!fieldval)
		gui.frmMassAdd.txtSetupTime5.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_TIME!fieldval)
		gui.frmMassAdd.txtOpCode5.Text(v.DataTable.dtSteps(v.Local.sret).Opcode!Fieldvaltrim)
		gui.frmMassAdd.txtRunSell5.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_RUN_RATE!Fieldval)
		GUI.frmMassAdd.txtRunTime5.Text("0")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlProcess5_Change.End

Program.Sub.ddlWorkCenterLaser_Change.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sret.Declare
	v.Local.fCost.Declare
	
	f.Intrinsic.String.Build("WC_DESCRIPTION='{0}'",v.Screen.FormMain!ddlWorkCenterLaser.Value,v.Local.sSql)
	f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,=,"***NORETURN***")
		f.Intrinsic.String.Build("Opcode='{0}'",v.Screen.FormMain!ddlWorkCenterLaser.Value,v.Local.sSql)
		f.Data.DataTable.Select("dtSteps",v.Local.sSql,v.Local.sret)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sret.Trim,=,"***NORETURN***")
		f.Intrinsic.UI.SleepMS(1)
	f.Intrinsic.Control.Else
		gui.FormMain.txtCutBillRate.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_RUN_RATE!FieldVal)
		gui.FormMain.txtCutSetRate.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_RATE!FieldVal)
		gui.FormMain.txtCutSetupTime.Text(v.DataTable.dtSteps(v.Local.sret).DEFAULT_SETUP_TIME!fieldval)
	f.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlWorkCenterLaser_Change.End

Program.Sub.ddlVendQuote_click.Start
F.Intrinsic.Control.Try
	V.Local.sVals.declare
	V.Local.sSupp.declare
	v.Local.sVendNote.Declare
	v.Local.fCost.Declare
	F.Intrinsic.string.split(V.Screen.FormMain!ddlVendQuote.text,"---",V.Local.svals)
	V.Local.ssupp.set(V.Local.svals(0))
	F.Intrinsic.string.rtrim(V.Local.ssupp,V.Local.ssupp)
	
	F.Intrinsic.control.if(V.Local.ssupp.trim,<>,"")
		v.Local.fCost.Set(v.Local.sVals(4))
		f.Intrinsic.Math.Round(v.Local.fCost,2,v.Local.fCost)
		gui.FormMain.txtSheetCost.Text(v.Local.fCost)
		gui.FormMain.txtSheetUM.Text(v.Local.sVals(3))
		f.Intrinsic.String.Concat(v.Local.sVals(0).trim," || ",v.Local.sVals(1).trim," || $",v.Local.fCost," || ",v.Local.sVals(2).trim,v.Local.sVendNote)
		gui.FormMain.txtVendQuoteNote.Text(v.Local.sVendNote)
	F.Intrinsic.control.endif
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.ddlVendQuote_click.End

Program.Sub.GSGCWorkSelection_RowClick.Start
Program.Sub.GSGCWorkSelection_RowClick.End

Program.Sub.gsgcworkselection_rowcellclick.Start
f.Intrinsic.Control.Try
	v.Local.ICURRROW.Declare
	v.Local.ICURRROW.Set(v.Args.rowindex)
	v.Local.sPart.Declare
	v.Local.sRev.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	v.Local.sStep.Declare
	v.Local.sPosition.Declare
	v.Local.sLMO.Declare
	v.Local.ssql.Declare
	Gui.FormMain.GSGCWorkSelection.GetCellValueByColumnName("gvWorkSelection","LMO",V.Args.RowIndex,v.Local.sLMO)

	F.Intrinsic.Control.If(v.Local.sLMO.Trim,=,"O")
		F.Intrinsic.Control.SelectCase(V.Args.column)
			F.Intrinsic.Control.CaseAny("Override","OVERRIDE")
				Gui.FormMain.GSGCWorkSelection.GetCellValueByColumnName("gvWorkSelection","WC",V.Args.RowIndex,v.Local.sStep)
				Gui.FormMain.GSGCWorkSelection.GetCellValueByColumnName("gvWorkSelection","P",V.Args.RowIndex,v.Local.sPosition)
				f.Intrinsic.Control.If(v.Local.sPosition,=,"","or",v.Local.sPosition,=,"0")
					f.Intrinsic.UI.Msgbox("Save before inserting an override")
				f.Intrinsic.Control.Else
					'Clear row and grab data/merge
					f.Data.DataTable.DeleteRow("dtOverride")
					f.Intrinsic.String.Build("SELECT QTY, AMT FROM GAB_6595_OVERRIDE WHERE PART='{0}' AND SEQUENCE='{1}'",v.Local.spart,v.Local.sPosition,v.Local.ssql)
					
					f.Intrinsic.Control.If(v.DataTable.dtOverrideTemp.Exists)
						f.Data.DataTable.Close("dtOverrideTemp")
					f.Intrinsic.Control.EndIf
					f.Data.DataTable.CreateFromSQL("dtOverrideTemp","con",v.Local.ssql)
					f.Data.DataTable.Merge("dtOverrideTemp","dtOverride",false,4)
					f.Data.DataTable.Close("dtOverrideTemp")
					
					GUI.frmOverride.lblOutside.Caption(V.Local.sStep)
					GUI.frmOverride.lblSeq.Caption(v.Local.sPosition)
					gui.frmOverride..Show
				f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndSelect
	f.Intrinsic.Control.Else
		F.Intrinsic.Control.SelectCase(V.Args.column)
			F.Intrinsic.Control.CaseAny("UP","Up")
				f.Intrinsic.Control.If(v.Args.rowindex,<>,0)
					f.Data.DataTable.moverow("dtWorkSelection",v.Local.iCURRROW,v.Local.iCURRROW.--)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.CaseAny("DOWN","Down")
				f.Data.DataTable.moverow("dtWorkSelection",v.Local.iCURRROW,v.Local.iCURRROW.++)
		f.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcworkselection_rowcellclick.End

Program.Sub.GSGCComponents_CellValueChanged.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	v.Local.fQty.Declare
	v.Local.fSetQty.Declare
	v.Local.fUnitCost.Declare
	v.Local.fMarkup.Declare
	v.Local.fExtCost.Declare
	v.Local.fExtSell.Declare
	v.Local.fTemp1.Declare
	v.Local.ftemp2.Declare
	
	'Grab values and do the math
	Gui.FormMain.gsgcComponents.GetCellValueByColumnName("gvMaterials","Qty",V.Args.RowIndex,v.Local.fQty)
	Gui.FormMain.gsgcComponents.GetCellValueByColumnName("gvMaterials","SetQty",V.Args.RowIndex,v.Local.fSetQty)
	Gui.FormMain.gsgcComponents.GetCellValueByColumnName("gvMaterials","Unitcost",V.Args.RowIndex,v.Local.fUnitCost)
	Gui.FormMain.gsgcComponents.GetCellValueByColumnName("gvMaterials","Markup",V.Args.RowIndex,v.Local.fMarkup)
	f.Intrinsic.Math.Mult(v.Local.fQty,v.Local.fUnitCost,v.Local.fTemp1)
	f.Intrinsic.Math.Mult(v.Local.fSetQty,v.Local.fUnitCost,v.Local.ftemp2)
	f.Intrinsic.Math.Add(v.Local.fTemp1,v.Local.ftemp2,v.Local.fExtCost)
	v.Local.fTemp1.Set(0)
	v.Local.ftemp2.Set(0)
	f.Intrinsic.Math.Mult(v.Local.fMarkup,.01,v.Local.fTemp1)
	f.Intrinsic.Math.Mult(v.Local.fExtCost,v.Local.fTemp1,v.Local.ftemp2)
	f.Intrinsic.Control.If(v.Local.fTemp1,>,1)
		v.Local.fExtSell.Set(v.Local.ftemp2)
	f.Intrinsic.Control.Else
		f.Intrinsic.Math.Add(v.Local.ftemp2,v.Local.fExtCost,v.Local.fExtSell)
	f.Intrinsic.Control.EndIf
	
	'Set back to the table
	f.Data.DataTable.SetValue("dtMaterials",v.Args.RowIndex,"ExtCost",v.Local.fExtCost,"ExtSell",v.Local.fExtSell)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GSGCComponents_CellValueChanged.End

Program.Sub.GSGCWorkSelection_CellValueChanged.Start
f.Intrinsic.Control.Try
	
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
'	v.Local.ssql.Declare
'	v.Local.sWCName.Declare
'	v.Local.sRowid.Declare
'	v.Local.sP.Declare
'	v.Local.sColumnid.Declare
'	v.Local.sWCID.Declare
'	v.Local.sRowid.Set(v.Args.RowIndex)
'	v.Local.sColumnid.Set(v.Args.Column) ' Wc WcBase Description, Setup, Process
'	f.Intrinsic.Control.If(v.Local.sColumnid,=,"Wc")
'		gui.FormMain.GSGCWorkSelection.GetCellValueByColumnName("gvWorkSelection",v.Local.sColumnid,v.Local.sRowid,v.Local.sWCID) ' Select data from the datatable
'		'f.Intrinsic.Debug.ShowCallerInfo
'		f.Intrinsic.String.Build("select top 1 WC_NAME from WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWCID,v.Local.ssql)
'		f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sWCName)		
'		f.Intrinsic.Math.Add(v.Local.sRowid,1,v.Local.sP)
'		f.Intrinsic.Control.If(v.Local.sWCName,!=,"")
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"WcBase",v.Local.sWCName)
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"Description","*")
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"Setup",".00")
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"Process",".00")
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"P",v.Local.sP)
'		f.Intrinsic.Control.Else
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"WcBase","")
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"Description","")
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"Setup","")
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"Process","")
'			f.Data.DataTable.SetValue("dtWorkSelection",v.Local.sRowid,"P","")
'		f.Intrinsic.Control.EndIf
'	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GSGCWorkSelection_CellValueChanged.End
Program.Sub.gsgcNestEff_cellvaluechanged.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.CallSub(SaveNest,"ID",v.Screen.frmQRE!TxtBoostID.Text)
f.Intrinsic.Control.Catch
	f.Intrinsic.ui.msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcNestEff_cellvaluechanged.End

Program.Sub.gsgcKitParts_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("Part","PART")
			gui.FormMain..Enabled(false)
			Gui.FormMain.gsgcKitParts.GetCellValueByColumnName("gvKitParts","Part",V.Args.RowIndex,V.Local.sPart)
			'Auto Save current routing if turned on
			f.Intrinsic.Control.If(v.Global.sAutoSave,=,"1")
				f.Intrinsic.Control.CallSub(FormMain_SaveButtonClick)
			f.Intrinsic.Control.EndIf
			'Load the part selected
			v.Global.sFreezeBom.Set(1)
			f.Intrinsic.Control.CallSub(OpenSelectPartAction,"Part",v.Local.spart,"Description","","Copy","")
			gui.FormMain..Enabled(true)
	f.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcKitParts_RowCellClick.End

Program.Sub.gsgcDocControl_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sFile.Declare
	v.Local.sFileName.Declare
	V.Local.sPath.Declare
	
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("File","FILE","OpenFile","OPENFILE")
			Gui.FormMain.gsgcDocControl.GetCellValueByColumnName("gvDoc","FullPath",V.Args.RowIndex,V.Local.sFile)
			F.Intrinsic.task.ShellExec(V.Caller.Handle,"OPEN",v.Local.sFile,"","",5)
		
		F.Intrinsic.Control.CaseAny("Browse","BROWSE")
			F.Intrinsic.UI.ShowOpenFileDialog("","","",V.Local.sFIle)
			f.Intrinsic.File.GetFileNameFromFQN(v.Local.sFile,v.Local.sFileName)
			f.Intrinsic.File.GetPathFromFQN(v.Local.sFile,v.Local.sPath)
			f.Data.DataTable.SetValue("dtDocuments",v.Args.rowindex, "File",v.Local.sFileName,"Path",v.Local.sPath,"FullPath",v.Local.sFile)
			
	f.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcDocControl_RowCellClick.End

Program.Sub.gsgcKitParts_CellValueChanged.Start
f.Intrinsic.Control.Try
	v.Local.fQty.Declare
	v.Local.sSeq.Declare
	v.Local.sPart.Declare
	v.Local.sParent.Declare
	v.Local.sSource.Declare
	v.Local.ssql.Declare
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("Qty","QTY")
			v.Local.fQty.Set(v.Args.Value)
			Gui.FormMain.gsgcKitParts.GetCellValueByColumnName("gvKitParts","Part",V.Args.RowIndex,V.Local.sPart)
			Gui.FormMain.gsgcKitParts.GetCellValueByColumnName("gvKitParts","Parent",V.Args.RowIndex,V.Local.sParent)
			Gui.FormMain.gsgcKitParts.GetCellValueByColumnName("gvKitParts","Seq",V.Args.RowIndex,V.Local.sSeq)
			f.Intrinsic.String.Build("UPDATE BOM_MSTR SET QUANTITY={0} WHERE PART='{1}' AND PARENT='{2}' AND SEQUENCE_BOM='{3}'",v.Local.fQty,v.Local.sPart,v.Local.sParent,v.Local.sSeq,v.Local.ssql)
			f.ODBC.Connection!con.execute(v.Local.ssql)	
			f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
				f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sParent,"Description","N/A","Switch","S","QtyOverride","")
			f.Intrinsic.Control.Else
				f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sParent,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.CaseAny("Source","SOURCE")
			v.Local.sSource.Set(v.Args.Value)
			Gui.FormMain.gsgcKitParts.GetCellValueByColumnName("gvKitParts","Part",V.Args.RowIndex,V.Local.sPart)
			Gui.FormMain.gsgcKitParts.GetCellValueByColumnName("gvKitParts","Parent",V.Args.RowIndex,V.Local.sParent)
			Gui.FormMain.gsgcKitParts.GetCellValueByColumnName("gvKitParts","Seq",V.Args.RowIndex,V.Local.sSeq)
			f.Intrinsic.String.Build("UPDATE BOM_MSTR SET SOURCE='{0}' WHERE PART='{1}' AND PARENT='{2}' AND SEQUENCE_BOM='{3}'",v.Local.sSource.UCase,v.Local.sPart,v.Local.sParent,v.Local.sSeq,v.Local.ssql)
			f.ODBC.Connection!con.execute(v.Local.ssql)	
	F.Intrinsic.Control.EndSelect

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcKitParts_CellValueChanged.End

Program.Sub.gsgcPartsAdd_CellValueChanged.Start
f.Intrinsic.Control.Try
	v.Local.fQty.Declare
	v.Local.sPart.Declare
	v.Local.sRev.Declare
	v.Local.sPartDescription.Declare
	v.Local.sBomFlag.Declare
	v.Local.fExtension.Declare
	v.Local.fSellPriceEA.Declare
	
	'Clear out the master buildup table first
	f.Data.DataTable.DeleteRow("dtPriceBuildupMaster")
	
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("Qty","QTY")
			v.Local.fQty.Set(v.Args.Value)			
			Gui.FormMain.gsgcPartsAdd.GetCellValueByColumnName("gvQuickPriceBuildup","PartNumber",V.Args.RowIndex,V.Local.sPart)
			Gui.FormMain.gsgcPartsAdd.GetCellValueByColumnName("gvQuickPriceBuildup","PartDescription",V.Args.RowIndex,V.Local.sPartDescription)
			Gui.FormMain.gsgcPartsAdd.GetCellValueByColumnName("gvQuickPriceBuildup","BOMKit",V.Args.RowIndex,V.Local.sBomFlag)
			f.Intrinsic.Control.If(v.local.sBomFlag,=,"Y")
				f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description",v.Local.sPartDescription,"Switch","M","QtyOverride",v.Local.fQty,"QuickAdd","Y")
				f.Intrinsic.Math.Mult(v.Local.fQty,v.DataTable.dtPriceBuildupMaster(0).SellPriceEA!fieldval,v.Local.fExtension)
				f.Data.DataTable.SetValue("dtQuickPriceBuildup",v.Args.rowindex,"SellPriceEA",v.DataTable.dtPriceBuildupMaster(0).SellPriceEA!fieldval,"CalcSellPriceEA",v.DataTable.dtPriceBuildupMaster(0).SellPriceEA!fieldval,"Extension",v.Local.fExtension)
			f.Intrinsic.Control.Else
				f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description",v.Local.sPartDescription,"Switch","M","QtyOverride",v.Local.fQty,"QuickAdd","Y")
				f.Intrinsic.Math.Mult(v.Local.fQty,v.DataTable.dtPriceBuildupMaster(0).SellPriceEA!fieldval,v.Local.fExtension)
				f.Data.DataTable.SetValue("dtQuickPriceBuildup",v.Args.rowindex,"SellPriceEA",v.DataTable.dtPriceBuildupMaster(0).SellPriceEA!fieldval,"CalcSellPriceEA",v.DataTable.dtPriceBuildupMaster(0).SellPriceEA!fieldval,"Extension",v.Local.fExtension)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.CaseElse
			Gui.FormMain.gsgcPartsAdd.GetCellValueByColumnName("gvQuickPriceBuildup","Qty",V.Args.RowIndex,V.Local.fQty)
			Gui.FormMain.gsgcPartsAdd.GetCellValueByColumnName("gvQuickPriceBuildup","SellPriceEA",V.Args.RowIndex,V.Local.fSellPriceEA)
			f.Intrinsic.Math.Mult(v.Local.fQty,v.Local.fSellPriceEA,v.Local.fExtension)
			f.Data.DataTable.SetValue("dtQuickPriceBuildup",v.Args.rowindex,"Extension",v.Local.fExtension)
	f.Intrinsic.Control.EndSelect

	'Populate default part info
	f.Intrinsic.Control.If(v.Screen.FormMain!txtPartCode.text,<>,"")
		f.Intrinsic.String.GSSPartString(v.Screen.FormMain!txtPartCode.text,v.Screen.FormMain!txtPartRevCode.text,v.Local.sPart)
		
		f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
			f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		f.Data.DataTable.DeleteRow("dtPriceBuildupPart")
	f.Intrinsic.Control.EndIf
				
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcPartsAdd_CellValueChanged.End

Program.Sub.GSGCFeatures_CellValueChanged.Start
f.Intrinsic.Control.Try
	
	v.Local.sSelectedFeature.Declare
	gui.FormMain.GSGCFeatures.GetCellValueByColumnName("gvFeaturesTable","Feature",v.Args.RowIndex,v.Local.sSelectedFeature)
	
	f.Intrinsic.Control.If(v.Local.sSelectedFeature.Trim,=,"Square")
		f.Intrinsic.UI.SleepMS(1)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Circle")
		f.Intrinsic.Control.CallSub(recalcCircleTime,"MyRow",v.Args.RowIndex)
		f.Intrinsic.UI.SleepMS(1)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Total Cut Length")
		f.Intrinsic.UI.SleepMS(1)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Cut Time")
		f.Intrinsic.UI.SleepMS(1)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Pierce")
		f.Intrinsic.UI.SleepMS(1)
		
	f.Intrinsic.Control.ElseIf(v.Local.sSelectedFeature.Trim,=,"Rectangle")
		f.Intrinsic.Control.CallSub(calculateRectangleTime,"Speed",v.DataTable.dtFeaturesTable(v.Args.RowIndex).Speed!fieldval,"Qty",v.DataTable.dtFeaturesTable(v.Args.RowIndex).Qty!fieldval,"Width",v.DataTable.dtFeaturesTable(v.Args.RowIndex).Dim2!fieldval,"Length",v.DataTable.dtFeaturesTable(v.Args.RowIndex).Dim1!fieldval,"MyRow",v.Args.RowIndex)
		
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GSGCFeatures_CellValueChanged.End

Program.Sub.GSGCFeatures_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sFeatureType.Declare

	'f.Intrinsic.Debug.ShowCallerInfo
	
	'speed and feature never allows edit
	gui.FormMain.GSGCFeatures.GetCellValueByColumnName("gvFeaturesTable","Feature",v.Args.RowIndex,v.Local.sFeatureType) ' Select data from the datatable
'	f.Intrinsic.Control.If(v.Local.sFeatureType,=,"Cut Time")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","ReadOnly", True)
''		Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 1, v.Args.RowIndex, "BackColor", "red")
''		Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 2, v.Args.RowIndex, "BackColor", "red")
''		Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 3, v.Args.RowIndex, "BackColor", "red")
''		Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 4, v.Args.RowIndex, "BackColor", "red")
'	f.Intrinsic.Control.ElseIf(v.Local.sFeatureType,=,"Total Cut Length")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","Caption", "mm")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","Caption", "Qty")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1", "AllowEdit", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","ReadOnly", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty", "AllowEdit", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","ReadOnly", False)
''		Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 1, v.Args.RowIndex, "BackColor", "white")
''		Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 2, v.Args.RowIndex, "BackColor", "red")
''		Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 3, v.Args.RowIndex, "BackColor", "red")
''		Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 4, v.Args.RowIndex, "BackColor", "white")
'	f.Intrinsic.Control.ElseIf(v.Local.sFeatureType,=,"Rectangle")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","Caption", "Len(mm)")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","Caption", "Wid(mm)")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","Caption", "Qty")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1", "AllowEdit", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","ReadOnly", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2", "AllowEdit", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","ReadOnly", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty", "AllowEdit", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","ReadOnly", False)
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 1, v.Args.RowIndex, "BackColor", "white")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 2, v.Args.RowIndex, "BackColor", "white")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 3, v.Args.RowIndex, "BackColor", "red")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 4, v.Args.RowIndex, "BackColor", "white")
'	f.Intrinsic.Control.ElseIf(v.Local.sFeatureType,=,"Square")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","Caption", "Len(mm)")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","Caption", "Qty")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1", "AllowEdit", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","ReadOnly", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty", "AllowEdit", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","ReadOnly", False)
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 1, v.Args.RowIndex, "BackColor", "white")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 2, v.Args.RowIndex, "BackColor", "red")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 3, v.Args.RowIndex, "BackColor", "red")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 4, v.Args.RowIndex, "BackColor", "white")
'	f.Intrinsic.Control.ElseIf(v.Local.sFeatureType,=,"Circle")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","Caption", "Dia(mm)")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","Caption", "Qty")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1", "AllowEdit", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","ReadOnly", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty", "AllowEdit",True )
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","ReadOnly", False)
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 1, v.Args.RowIndex, "BackColor", "white")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 2, v.Args.RowIndex, "BackColor", "red")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 3, v.Args.RowIndex, "BackColor", "red")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 4, v.Args.RowIndex, "BackColor", "white")
'	f.Intrinsic.Control.ElseIf(v.Local.sFeatureType,=,"Pierce")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","Caption", " ")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","Caption", "Pierce")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","Caption", "Qty")
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim1","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2", "AllowEdit", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Dim2","ReadOnly", True)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce", "AllowEdit",True )
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Pierce","ReadOnly", False)
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty", "AllowEdit",True )
'		gui.FormMain.GSGCFeatures.SetColumnProperty("gvFeaturesTable", "Qty","ReadOnly", False)
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 1, v.Args.RowIndex, "BackColor", "red")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 2, v.Args.RowIndex, "BackColor", "red")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 3, v.Args.RowIndex, "BackColor", "white")
'		'Gui.FormMain.GSGCFeatures.SetCellAppearance("gvFeaturesTable", 4, v.Args.RowIndex, "BackColor", "white")
'	f.Intrinsic.Control.EndIf
	'setrowcellappearance
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GSGCFeatures_RowCellClick.End

Program.Sub.gsgcCustomerParts_RowCellClick.Start
f.Intrinsic.Control.Try
	V.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.sPart.Declare
	v.Local.sDesc.Declare
	v.Local.sBOMFlag.Declare
	V.Local.sPL.Declare
	v.Local.sUserField.Declare
	v.Local.sUserField2.Declare
	v.Local.sMatValue.Declare
	v.Local.sThickValue.Declare
	
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("Router","ROUTER")
			gui.FormMain..Enabled(false)
			v.Global.sFreezeBom.Set(0)
			Gui.FormMain.gsgcCustomerParts.GetCellValueByColumnName("gvCustomerParts","Router",V.Args.RowIndex,V.Local.sPart)
			Gui.FormMain.gsgcCustomerParts.GetCellValueByColumnName("gvCustomerParts","Description_Router",V.Args.RowIndex,V.Local.sDesc)
			f.Intrinsic.Control.CallSub(OpenSelectPartAction,"Part",v.Local.spart,"Description",v.Local.sDesc,"Copy","")
			gui.FormMain..Enabled(true)
		F.Intrinsic.Control.CaseAny("QuickAdd","QUICKADD")
			Gui.FormMain.gsgcCustomerParts.GetCellValueByColumnName("gvCustomerParts","Router",V.Args.RowIndex,V.Local.sPart)
			Gui.FormMain.gsgcCustomerParts.GetCellValueByColumnName("gvCustomerParts","Description_Router",V.Args.RowIndex,V.Local.sDesc)
			Gui.FormMain.gsgcCustomerParts.GetCellValueByColumnName("gvCustomerParts","BOMKIT",V.Args.RowIndex,V.Local.sBOMFlag)
			Gui.FormMain.gsgcCustomerParts.GetCellValueByColumnName("gvCustomerParts","PROD_LINE",V.Args.RowIndex,V.Local.sPL)
			Gui.FormMain.gsgcCustomerParts.GetCellValueByColumnName("gvCustomerParts","Material",V.Args.RowIndex,V.Local.sMatValue)

			f.Intrinsic.String.Build("SELECT thickness FROM V_INVENTORY_MST3 WHERE PART='{0}'",v.Local.sMatValue,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sThickValue)
			
			f.Intrinsic.Control.If(v.Global.sMatUser,<>,"")
				f.Intrinsic.String.Concat("User",v.Global.sMatUser,v.Local.sUserField)	
			f.Intrinsic.Control.Else
				v.Local.sUserField.Set("User1")
				v.Local.sMatValue.Set("")
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Control.If(v.Global.sMatThickUser,<>,"")
				f.Intrinsic.String.Concat("User",v.Global.sMatThickUser,v.Local.sUserField2)
			f.Intrinsic.Control.Else
				v.Local.sUserField2.Set("User1")
				v.Local.sThickValue.Set("")
			f.Intrinsic.Control.EndIf
			
			F.Data.DataTable.AddRow("dtQuickPriceBuildup","PartNumber",v.Local.sPart.Trim,"PartDescription",v.Local.sDesc,"PL",v.Local.sPL,"BOMKit",v.Local.sBOMFlag,v.Local.sUserField,v.Local.sMatValue,v.Local.sUserField2,v.Local.sThickValue)
			
	f.Intrinsic.Control.EndSelect		
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)

f.Intrinsic.Control.EndTry
Program.Sub.gsgcCustomerParts_RowCellClick.End

Program.Sub.gsgcInventory_RowCellClick.Start
F.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	v.Local.ssql.Declare
	v.Local.sret.Declare
	
	v.Local.fqty.Declare
	v.Local.fSetQty.Declare
	v.Local.fUnitCost.Declare
	v.Local.fMarkup.Declare
	v.Local.fTemp1.Declare
	v.Local.fTemp2.Declare
	v.Local.fExtCost.Declare
	v.Local.fExtSell.Declare
	
	'Grab values and do the math
	Gui.frmQuickRouter.gsgcInventory.GetCellValueByColumnName("gvINV","RunQty",V.Args.RowIndex,v.Local.fQty)
	Gui.frmQuickRouter.gsgcInventory.GetCellValueByColumnName("gvINV","SetupQty",V.Args.RowIndex,v.Local.fSetQty)
	Gui.frmQuickRouter.gsgcInventory.GetCellValueByColumnName("gvINV","Cost",V.Args.RowIndex,v.Local.fUnitCost)
	v.Local.fMarkup.Set(v.Global.fMatMarkup)
	
	f.Intrinsic.Math.Mult(v.Local.fQty,v.Local.fUnitCost,v.Local.fTemp1)
	f.Intrinsic.Math.Mult(v.Local.fSetQty,v.Local.fUnitCost,v.Local.ftemp2)
	f.Intrinsic.Math.Add(v.Local.fTemp1,v.Local.ftemp2,v.Local.fExtCost)
	v.Local.fTemp1.Set(0)
	v.Local.ftemp2.Set(0)
	f.Intrinsic.Math.Mult(v.Local.fMarkup,.01,v.Local.fTemp1)
	f.Intrinsic.Math.Mult(v.Local.fExtCost,v.Local.fTemp1,v.Local.ftemp2)
	f.Intrinsic.Math.Add(v.Local.ftemp2,v.Local.fExtCost,v.Local.fExtSell)
	
	f.Intrinsic.Control.SelectCase(V.Args.Column)
		f.Intrinsic.Control.Case("Add")
			f.Data.DataTable.AddRow("dtMaterials","ExtCost",v.Local.fExtCost,"ExtSell",v.Local.fExtSell,"Markup",v.Global.fMatMarkup, "Code",v.DataTable.dtINV(v.Args.rowindex).GSSPart!fieldvaltrim,"Descr",v.DataTable.dtINV(v.Args.rowindex).Description!fieldvaltrim,"SetQty",v.DataTable.dtINV(v.Args.rowindex).SetupQty!fieldvaltrim,"Qty",v.DataTable.dtINV(v.Args.rowindex).RunQty!fieldvaltrim,"UnitCost",v.DataTable.dtINV(v.Args.rowindex).Cost!fieldvaltrim,"UM",v.DataTable.dtINV(v.Args.rowindex).UoM!fieldvaltrim,"Notes",v.DataTable.dtINV(v.Args.rowindex).Notes!fieldvaltrim)
			f.Intrinsic.String.Build("SELECT USER1, USER2 FROM GAB_4912_USER_FIELDS WHERE PART='{0}'",v.DataTable.dtINV(v.Args.rowindex).GSSPART!Fieldvaltrim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.String.split(v.Local.sret,"*!*",v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
				f.Data.DataTable.AddRow("dtLaserMaterials","Code",v.DataTable.dtINV(v.Args.rowindex).GSSPart!fieldvaltrim,"Descr",v.DataTable.dtINV(v.Args.RowIndex).Description!fieldvaltrim,"Pierce",v.Local.sret(0),"Speed",v.Local.sret(1))
			f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndSelect
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcInventory_RowCellClick.End

Program.Sub.gsgcLaserMaterials_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.fSpeed.Declare
	v.Local.fPierce.Declare
	Gui.frmLaserCutter.gsgcLaserMaterials.GetCellValueByColumnName("gvLaserMaterials","Pierce",V.Args.RowIndex,v.Local.fPierce)
	Gui.frmLaserCutter.gsgcLaserMaterials.GetCellValueByColumnName("gvLaserMaterials","Speed",V.Args.RowIndex,v.Local.fSpeed)
	gui.frmLaserCutter.txtSpeed.Text(v.Local.fSpeed)
	gui.frmLaserCutter.txtDiamiterMM.Text(v.Local.fPierce)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcLaserMaterials_RowCellClick.End

Program.Sub.gsgcCuttingOpCodes_RowCellClick.Start
f.Intrinsic.Control.Try
	V.Local.fSetupRate.Declare
	v.Local.fSetupTime.Declare
	v.Local.fBillRate.Declare
	v.Local.sOpCode.Declare
	v.Local.sWC.Declare
	v.Local.sWCDesc.Declare
	Gui.frmLaserCutter.gsgcCuttingOpCodes.GetCellValueByColumnName("gvLaserOpCodes","WC",V.Args.RowIndex,v.Local.sWC)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.GetCellValueByColumnName("gvLaserOpCodes","Description",V.Args.RowIndex,v.Local.sWCDesc)
	Gui.frmLaserCutter.gsgcCuttingOpCodes.GetCellValueByColumnName("gvLaserOpCodes","OpCode",V.Args.RowIndex,v.Local.sOpCode)
	gui.frmLaserCutter.gsgcCuttingOpCodes.GetCellValueByColumnName("gvLaserOpCodes","SetupTime",v.Args.RowIndex,v.Local.fSetupTime)
	gui.frmLaserCutter.gsgcCuttingOpCodes.GetCellValueByColumnName("gvLaserOpCodes","SetRate",v.Args.RowIndex,v.Local.fSetupRate)
	gui.frmLaserCutter.gsgcCuttingOpCodes.GetCellValueByColumnName("gvLaserOpCodes","RunRate",v.Args.RowIndex,v.Local.fBillRate)
	gui.frmLaserCutter.txtCutBillRate.Text(v.Local.fBillRate)
	gui.frmLaserCutter.txtCutSetRate.Text(v.Local.fSetupRate)
	gui.frmLaserCutter.txtCutSetupTime.Text(v.Local.fSetupTime)
	gui.frmLaserCutter.txtOpCode.Text(v.Local.sOpCode)
	gui.frmLaserCutter.ddlWorkCenterLaser.Text(v.Local.sWC)
	gui.frmLaserCutter.txtWCDescription.Text(v.Local.sWCDesc)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcCuttingOpCodes_RowCellClick.End

Program.Sub.recalcCircleTime.Start
f.Intrinsic.Control.Try
	v.Local.sQty.Declare
	v.Local.sDiamiter.Declare
	v.Local.iSpeed.Declare
	v.Local.fCalcTime.Declare
	v.Local.fMath.Declare
	v.Local.iRow.Declare
	v.Local.iRow.Set(v.Args.MyRow)
	
	gui.FormMain.GSGCFeatures.GetCellValueByColumnName("gvFeaturesTable","Dim1",v.Local.iRow,v.Local.sDiamiter)
	gui.FormMain.GSGCFeatures.GetCellValueByColumnName("gvFeaturesTable","Speed",v.Local.iRow,v.Local.iSpeed)
	gui.FormMain.GSGCFeatures.GetCellValueByColumnName("gvFeaturesTable","Qty",v.Local.iRow,v.Local.sQty)
	
	f.Intrinsic.Control.If(v.Local.sQty.IsNumeric,=,True, AND, v.Local.sDiamiter.IsNumeric,=,True)
		f.Intrinsic.Math.Mult(v.Local.sDiamiter,"3.1415926",v.Local.fMath)
		f.Intrinsic.Math.Mult(v.Local.fMath,v.Local.sQty,v.Local.fMath) '31.4*4=125.6
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.Math.Div(v.Local.fMath,v.Local.iSpeed,v.Local.fCalctime) 
		f.Intrinsic.Math.Mult(v.Local.fCalctime,"60",v.Local.fCalctime) 
		f.Intrinsic.Math.Round(v.Local.fCalctime,"1",v.Local.fCalctime)
		f.Intrinsic.Math.Round(v.Local.fMath,"2",v.Local.fMath)				
		f.Data.DataTable.SetValue("dtFeaturesTable",v.Local.iRow,"Time",v.Local.fCalcTime)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.recalcCircleTime.End

Program.Sub.optRectangleCalc_Click.Start
f.Intrinsic.Control.Try
	gui.FormMain.optCircleCalc.Value(False)
	
	gui.FormMain.lbl3.Visible(True)
	gui.FormMain.txtCutPieceWidth.Visible(True)
	gui.FormMain.lblLength.Caption("Cut Length")
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.optRectangleCalc_Click.End

Program.Sub.optCircleCalc_Click.Start
f.Intrinsic.Control.Try
	gui.FormMain.optRectangleCalc.Value(False)
	
	gui.FormMain.lbl3.Visible(False)
	gui.FormMain.txtCutPieceWidth.Visible(False)
	gui.FormMain.lbl2.Caption("Radious")

f.Intrinsic.Control.Catch
	'f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.optCircleCalc_Click.End

Program.Sub.trvFileDragDrop.Start
F.Intrinsic.control.try
	v.Local.sFiles.Declare 
	V.Local.sdocpath.Declare
	V.Local.ssql.declare
	V.Local.sret.declare
	V.Local.sFileName.Declare
	v.Local.sDirHold.Declare
	v.Local.sSplit.Declare
	'Need to pull from master file, else put in default directory
	v.Local.sdocpath.Set("")
	V.Local.i.Declare
	v.Local.iPos.Declare
	v.Local.iret.Declare
	v.Local.sURL.Declare
	v.Local.sdxfCheck.Declare
	v.Local.sAllFiles.Declare
	v.Local.sCustomerLines.Declare
	v.Local.sCustomer.Declare
	v.Local.sCustomer.Set(v.Screen.FormMain!txtClientCode.text)
	f.Intrinsic.Control.If(v.Local.sCustomer.Trim,=,"")
		f.Intrinsic.UI.Msgbox("Please select a customer.")
	f.Intrinsic.Control.Else
		F.Intrinsic.String.Split(V.Args.Files,"*!*",V.Local.sFiles)
		F.Intrinsic.Control.For(V.Local.i,0,V.Local.sFiles.UBound,1)
		
			f.Intrinsic.Control.If(v.Local.sdocpath.Trim,=,"")
				f.Intrinsic.File.GetPathFromFQN(v.Local.sFiles(v.Local.i),V.Local.sdocpath)
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.File.GetFileNameFromFQN(v.Local.sFiles(v.Local.i),v.Local.sFileName)
			F.Intrinsic.String.Split(v.Local.sFileName,".",V.Local.sSplit)
			v.Local.iPos.Set(v.Local.sSplit.UBound)
	
			f.Intrinsic.String.Concat(v.Local.sdocpath,"\",v.Local.sFileName,v.Local.sDirHold)
			f.Data.DataTable.AddRow("dtDocuments","File",v.Local.sFileName,"Path",v.Local.sdocpath,"FullPath",v.Local.sDirHold)

		F.Intrinsic.control.next(V.Local.i)
'		
'		f.Intrinsic.Control.If(v.Local.sdxfCheck,=,"Y")
'			F.Intrinsic.UI.Msgbox("DXF file(s) detected, create thumbnails?","DXF file(s) detected, create thumbnails?",4,v.Local.iret)
'			f.Intrinsic.Control.If(v.Local.iret,=,6)
'				'Create a thumbnail document group if it does not exist
'				F.ODBC.Connection!con.executeandreturn("SELECT * FROM ATG_DOC_GRP WHERE GRP_NAME='THUMBNAIL'",v.Local.sret)
'				f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
'					F.ODBC.Connection!con.executeandreturn("SELECT MAX(GRP_ID) FROM ATG_DOC_GRP",v.Local.sret)
'					F.Intrinsic.Math.Add(V.Local.sret,1,V.Local.sret)
'					F.Intrinsic.String.Build("INSERT INTO ATG_DOC_GRP VALUES ({0},'THUMBNAIL','THUMBNAIL')",v.Local.sret,v.Local.ssql)
'					f.ODBC.Connection!con.execute(v.Local.ssql)
'				f.Intrinsic.Control.EndIf
'				
'				f.Intrinsic.Control.CallSub(DXFtoPNG,"AllFiles",v.Local.sAllFiles,"Customers",v.Local.sCustomerLines)
'				
'				'Add Thumbnail to document control
'				gui.FormMain.trvFile.Visible(false)
'				F.Intrinsic.Control.For(V.Local.i,0,V.Local.sFiles.UBound,1)
'					f.Intrinsic.File.GetFileNameFromFQN(v.Local.sFiles(v.Local.i),v.Local.sFileName)
'					F.Intrinsic.String.Split(v.Local.sFileName,".",V.Local.sSplit)
'					v.Local.iPos.Set(v.Local.sSplit.UBound)
'					v.Local.sCustomer.Set(v.Screen.FormMain!txtClientCode.text)
'					f.Intrinsic.Control.If(v.Local.sSplit(v.Local.iPos),=,"dxf", OR ,v.Local.sSplit(v.Local.iPos).UCase,=,"DXF",v.Local.sSplit(v.Local.iPos).UCase,=,"Dxf")
'						f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\DXF_TO_PNG\pngs\",v.Local.sCustomer.Trim,v.Local.sdocpath)
'						f.Intrinsic.String.Replace(v.Local.sFileName,"dxf","png",v.Local.sFileName)
'						f.Intrinsic.String.Replace(v.Local.sFileName,"DXF","png",v.Local.sFileName)
'						f.Intrinsic.String.Replace(v.Local.sFileName,"Dxf","png",v.Local.sFileName)
'						f.Intrinsic.String.Concat(v.Local.sdocpath,"\",v.Local.sFileName,v.Local.sDirHold)
'						v.Local.sURL.Set(v.Local.sDirHold)
'						f.Intrinsic.String.Concat(v.Local.sDirHold,"~","THUMBNAIL",v.Local.sDirHold)
'						gui.formMain.trvFile.AddNode("",4,v.Local.sDirHold,v.Local.sDirHold)
'					f.Intrinsic.Control.EndIf
'					f.Intrinsic.Control.If(v.Local.i,=,0)
'						f.Intrinsic.Control.If(v.Local.i,=,0,"AND",v.Local.sFiles.UBound,=,0)
'							gui.FormMain.GsWebBrowserThumbnail.LoadURL(v.Local.sURL)
'						f.Intrinsic.Control.EndIf
'					f.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.Next(V.Local.i)
'				gui.FormMain.trvFile.Visible(true)
'			f.Intrinsic.Control.EndIf
'		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
F.Intrinsic.control.catch
	gui.FormMain.trvFile.Visible(True)	
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.trvFileDragDrop.End

Program.Sub.trvRouters_NodeClick.Start
f.Intrinsic.Control.Try
	V.Local.sSelect.Declare
	v.Local.sSelect.Set(v.Screen.FormMain!trvKitParts.selectedItemKey)
	v.Local.sPart.Declare
	v.Local.sQty.Declare
	
	f.Intrinsic.String.Split(v.Local.sSelect,"~",v.Local.sSelect)
	v.Local.sPart.Set(v.Local.sSelect(1))
	v.Local.sQty.Set(v.Local.sSelect(0))
	f.Intrinsic.Control.If(v.Local.sSelect.Trim,=,"")
		f.Intrinsic.UI.Msgbox("Part Not Selected")
	f.Intrinsic.Control.else
		v.Global.sFreezeBom.Set(0)
		f.Intrinsic.Control.CallSub(OpenSelectPartAction,"Part",v.Local.spart,"Description","","Copy","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.trvRouters_NodeClick.End

Program.Sub.trvFile_NodeClick.Start
F.Intrinsic.control.try
	v.Local.sFile.Declare
	v.Local.sFile.Set(v.Args.Key)
	v.Local.sRet.Declare
	v.Local.iPos.Declare
	f.Intrinsic.String.Split(v.Local.sFile,"~",v.Local.sRet)
	gui.FormMain.txtFileT.Text(v.Local.sRet(0))
	gui.FormMain.GsWebBrowserShowPDF.LoadURL(v.Local.sRet(0))
	gui.FormMain.GsWebBrowserShowPDF.ZoomFactor("0.5")
	
	v.Local.sFileType.Declare
	v.Local.sSplit.Declare
	v.Local.sPNGReplace.Declare
	v.Local.sPNGFile.Declare
	v.Local.sCustomer.Declare
	v.Local.sCustomer.Set(v.Screen.FormMain!txtClientCode.text)
	
	f.Intrinsic.File.GetFileNameFromFQN(v.Local.sRet(0),v.Local.sFileType)
	F.Intrinsic.String.Split(v.Local.sFileType,".",V.Local.sSplit)

	v.Local.iPos.Set(v.Local.sSplit.UBound)
	f.Intrinsic.Control.If(v.Local.sSplit(v.Local.iPos).Ucase,=,"DXF")
		f.Intrinsic.String.Replace(v.Local.sFileType,"dxf","png",v.Local.sPNGReplace)
		f.Intrinsic.String.Replace(v.Local.sFileType,"DXF","png",v.Local.sPNGReplace)
		f.Intrinsic.String.Replace(v.Local.sFileType,"Dxf","png",v.Local.sPNGReplace)
		F.Intrinsic.String.Concat(V.Caller.PluginsDir,"\DXF_TO_PNG\pngs\",v.Local.sCustomer.Trim,"\",v.Local.sPNGReplace,v.Local.sPNGFile)
		gui.FormMain.GsWebBrowserThumbnail.loadurl(v.Local.sPNGFile)
	f.Intrinsic.Control.Else
		gui.FormMain.GsWebBrowserThumbnail.loadurl("")
	f.Intrinsic.Control.EndIf
F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.trvFile_NodeClick.End

Program.Sub.txtPartCode_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPartName.Declare
	v.Local.sPartName.set(v.Screen.FormMain!txtPartCode.Text)
	f.Intrinsic.String.UCase(v.Local.sPartName,v.Local.sPartName)
	gui.FormMain.txtPartCode.Text(v.Local.sPartName)
	v.Local.sSql.Declare
	v.Local.sRet.Declare
	v.Local.iSwitch.Declare
	v.Local.sDesc.Declare
	V.Local.sCustomer.Declare
	
	f.Intrinsic.Control.If(v.Local.sPartName.Trim,<>,"")
		'gui.FormMain.txtClientPartNumber.Text(v.Local.sPartName.Trim)
		f.Intrinsic.String.Build("SELECT DESCRIPTION_ROUTER, CUSTOMER FROM V_ROUTER_HEADER WHERE ROUTER='{0}'",v.Local.sPartName.Trim,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.sRet)
		f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
			F.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
			v.Global.sFreezeBom.Set(0)
			f.Intrinsic.Control.CallSub("OpenSelectPartAction","Part",v.Local.sPartName,"Description",v.local.sRet(0),"Copy","")
			f.Intrinsic.Control.CallSub(loadCustomerParts,"Customer",v.Local.sRet(1))
		f.Intrinsic.Control.Else
			f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
			v.Local.sDesc.Set(v.Local.sRet(0))
			v.Local.sCustomer.Set(v.Local.sRet(1))
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtPartCode_LostFocus.End

Program.Sub.txtPartCodeCopy_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sNewPartNumber.Declare
	v.Local.sPartName.Declare
	v.Local.sPartName.set(v.Screen.FormMain!txtPartCodeCopy.Text)
	f.Intrinsic.String.UCase(v.Local.sPartName,v.Local.sPartName)
	v.Local.sSql.Declare
	v.Local.sRet.Declare
	v.Local.iSwitch.Declare
	v.Local.sDesc.Declare
	V.Local.sCustomer.Declare
	v.Local.iSwitch.Set(6)
	
	f.Intrinsic.Control.If(v.Local.sPartName.Trim,<>,"")
		gui.FormMain.txtClientPartNumber.Text(v.Local.sPartName.Trim)
		f.Intrinsic.String.Build("SELECT DESCRIPTION_ROUTER,CUSTOMER FROM V_ROUTER_HEADER WHERE ROUTER='{0}'",v.Local.sPartName.Trim,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.sRet)

		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		v.Local.sDesc.Set(v.Local.sRet(0))
		v.Local.sCustomer.Set(v.Local.sRet(1))
		f.Intrinsic.UI.Inputbox("Enter New Part Number","Enter New Part Number",v.Local.sPartName.UCase,v.Local.sNewPartNumber)
		v.Global.sFreezeBom.Set(0)
		f.Intrinsic.Control.CallSub("OpenSelectPartAction","Part",v.Local.sPartName,"Description",v.Local.sDesc.Trim,"Copy",v.Local.sNewPartNumber)
		f.Intrinsic.Control.CallSub(loadCustomerParts,"Customer",v.Local.sCustomer.Trim)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtPartCodeCopy_LostFocus.End

Program.Sub.txtQuantityBrake_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtQuantityBrake_LostFocus.End

Program.Sub.txtPartRevCode_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPartName.Declare
	v.Local.sPartName.set(v.Screen.FormMain!txtPartCode.Text)
	'gui.FormMain.txtClientPartNumber.Text(v.Local.sPartName.Trim)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtPartRevCode_LostFocus.End

Program.Sub.txtMainPerSheet_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtMainPerSheet_LostFocus.End

Program.Sub.txtSheetMinCharge_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtSheetMinCharge_LostFocus.End

Program.Sub.txtSheetCost_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtSheetCost_LostFocus.End

Program.Sub.txtCutSetRate_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtCutSetRate_LostFocus.End

Program.Sub.txtCutBillRate_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtCutBillRate_LostFocus.End

Program.Sub.txtCutSetupTime_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtCutSetupTime_LostFocus.End

Program.Sub.txtSheetMarkup_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	
	f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
		f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtSheetMarkup_LostFocus.End

Program.Sub.txtUserHeader1_LostFocus.Start
f.Intrinsic.Control.Try
	
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.txtUserHeader1_LostFocus.End

Program.Sub.txtUserHeader2_LostFocus.Start
f.Intrinsic.Control.Try

f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.txtUserHeader2_LostFocus.End

Program.Sub.txtUserHeader3_LostFocus.Start
f.Intrinsic.Control.Try

f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.txtUserHeader3_LostFocus.End

Program.Sub.txtUserHeader4_LostFocus.Start
f.Intrinsic.Control.Try

f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.txtUserHeader4_LostFocus.End

Program.Sub.txtUserHeader5_LostFocus.Start
f.Intrinsic.Control.Try

f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.txtUserHeader5_LostFocus.End

Program.Sub.txtProdLength_LostFocus.Start
F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.Case("")
	F.Intrinsic.Control.Caseelse
	F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdWidth.Text)
		F.Intrinsic.Control.Case("")
		F.Intrinsic.control.caseelse
			F.Intrinsic.Control.CallSub(evalcost)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndSelect
Program.Sub.txtProdLength_LostFocus.End

Program.Sub.txtProdWidth_LostFocus.Start
F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.Case("")
	F.Intrinsic.Control.Caseelse
	F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdWidth.Text)
		F.Intrinsic.Control.Case("")
		F.Intrinsic.control.caseelse
			F.Intrinsic.Control.CallSub(evalcost)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndSelect
Program.Sub.txtProdWidth_LostFocus.End

Program.Sub.txtMarkup_LostFocus.Start
F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.Case("")
	F.Intrinsic.Control.Caseelse
	F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdWidth.Text)
		F.Intrinsic.Control.Case("")
		F.Intrinsic.control.caseelse
			F.Intrinsic.Control.CallSub(evalcost)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndSelect
Program.Sub.txtMarkup_LostFocus.End

Program.Sub.FormMain_UserButtonClicked.Start
f.Intrinsic.Control.Try
	v.Local.iSwitch.Declare
	v.Local.sPart.Declare
	v.Local.sPart.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sRev.Declare
	v.Local.sRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPart,v.Local.sRev,v.Local.sPart)
	
	f.Intrinsic.Control.SelectCase(v.Args.Button)
		f.Intrinsic.Control.Case("ClearAll")
			f.Intrinsic.UI.Msgbox("Are you Sure","Are you Sure you want to clear?",4,v.Local.iSwitch)
			f.Intrinsic.Control.If(v.Local.iSwitch,=,6)
				f.Intrinsic.Control.CallSub(clearAll)
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case("Delete")
			f.Intrinsic.UI.Msgbox("Are you Sure","Are you Sure you want to delete this part?",4,v.Local.iSwitch)
			f.Intrinsic.Control.If(v.Local.iSwitch,=,6)
				f.Intrinsic.Control.CallSub(deletePart)
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case("CustInfo")
			V.Local.sParams.Declare
			v.Local.sCustomerCode.Declare
			v.Local.sCustomerCode.set(v.Screen.FormMain!txtClientCode.Text)
			f.Intrinsic.Control.If(v.Local.sCustomerCode,!=,"")
				F.Intrinsic.String.ConcatCallWrapperArgs("O","",v.Local.sCustomerCode,V.Local.sParams)
				F.Global.General.CallWrapperSync("100000",V.Local.sParams)
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case("Calculate")
			
			f.Intrinsic.Control.If(v.Global.sBom,=,"Y")
				f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QuickAdd","","QtyOverride","")
			f.Intrinsic.Control.Else
				f.Intrinsic.Control.CallSub(CalculatePrice,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","","QuickAdd","")
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case("CalculateBOM")
			f.Intrinsic.Control.CallSub(CalcBOM,"Part",v.Local.sPart,"Description","N/A","Switch","S","QtyOverride","")

			
	f.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormMain_UserButtonClicked.End

Program.Sub.FormMain_SaveButtonClick.Start
f.Intrinsic.Control.Try
	gui.FormMain..Enabled(false)
	
	v.Local.sSql.Declare
	v.Local.sret.Declare
	v.Local.i.Declare
	v.Local.j.Declare(long)
	V.Local.iMSeq.Declare
	v.Local.iMSeq.Set(100)
	v.Local.sSpecial.Declare
	v.Local.sAddDesc1.Declare
	v.Local.sAddDesc2.Declare
	v.Local.sAddDesc3.Declare
	
	f.Intrinsic.Control.If(v.Global.sMultiple,<>,"1")
		f.Intrinsic.Control.If(v.Screen.FormMain!chkNoMaterial.Value,=,"1")
			v.Local.sSpecial.Set("NOMATERIAL")
		f.Intrinsic.Control.ElseIf(v.Screen.FormMain!chkCustomerSupply.Value,=,"1")
			v.Local.sSpecial.Set("MATERIALCUST")
		f.Intrinsic.Control.Else
			v.Local.sSpecial.Set("MATERIAL")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		v.Local.sSpecial.Set("NOMATERIAL")
	f.Intrinsic.Control.EndIf
	
	'Check if parts per sheet is filled in
	f.Intrinsic.Control.If(v.Global.sMultiple,<>,"1")	
		F.Intrinsic.Control.If(v.Screen.FormMain!chkNoMaterial.Value,<>,"1")
			f.Intrinsic.Control.If(v.Screen.FormMain!txtMainPerSheet.text,=,"")
				gui.FormMain.txtMainPerSheet.BackColor(Red)
				gui.FormMain..Enabled(true)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'It has passed the check, set to white
	gui.FormMain.txtMainPerSheet.BackColor(White)
	
	'CREATE PART
	v.Local.sPartNumber.Declare
	v.Local.sPartNumber.Set(v.Screen.FormMain!txtPartCode.text)
	v.Local.sPartRev.Declare
	v.Local.sPartRev.Set(v.Screen.FormMain!txtPartRevCode.text)
	f.Intrinsic.String.GSSPartString(v.Local.sPartNumber,v.Local.sPartRev,v.Local.sPartNumber)
	v.Local.sDescr.Declare
	v.Local.sDescr.Set(v.Screen.FormMain!txtPartDescription.text)
	v.Local.sAlt1.Declare
	v.Local.sAlt1.Set(v.Screen.FormMain!txtPartDescription2.text)
	v.Local.sAlt2.Declare
	v.Local.sAlt2.Set(v.Screen.FormMain!txtPartDescription3.text)
	v.Local.sCustID.Declare
	v.Local.sCustID.Set(v.Screen.FormMain!txtClientCode.text)
	V.Local.sPartID.Declare
	v.Local.sPartID.Set(v.Screen.FormMain!txtClientPartNumber.text)
	v.Local.sPL.Declare
	v.Local.sPL.Set(V.Screen.FormMain!txtPartPL.TEXT)
	v.Local.sSource.Declare
	v.Local.sSource.Set("F")
	v.Local.sUM.Declare
	v.Local.sUM.Set("EA")
	v.Local.fPrice.Declare
	v.Local.fPrice.Set(0)
	v.Local.fLength.Declare
	v.Local.fLength.Set(v.Screen.FormMain!txtCutPieceLength.text)
	v.Local.fWidth.Declare
	v.Local.fWidth.Set(v.Screen.FormMain!txtCutPieceWidth.text)
	v.Local.sDateChange.Declare
	v.Local.sTimeChange.Declare
	f.Intrinsic.String.Format(v.Ambient.Date,"YYMMDD",v.Local.sDateChange)
	f.Intrinsic.String.Format(v.Ambient.Now,"HHNNSS00",v.Local.sTimeChange)
	f.Global.Inventory.CreatePart(v.Local.sPartNumber,v.Local.sUM,v.Local.sDescr,"",v.Local.sPL,v.Local.sSource,V.Local.sAlt1,v.Local.sAlt2,v.Local.fPrice,"NOMAINT")
	'Update Part Dimensions
	f.Intrinsic.String.Build("UPDATE INVENTORY_MSTR SET DESCRIPTION='{0}', PRODUCT_LINE='{1}', UM_INVENTORY='{2}', date_last_chg='{3}', time_last_chg='{4}', who_chg_last='{5}' WHERE PART='{6}'",v.Local.sDescr.PSQLFriendly,v.Local.sPL.PSQLFriendly,v.Local.sUM.PSQLFriendly,v.Local.sDateChange,v.Local.sTimeChange,v.Caller.User,v.Local.sPartNumber,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.sSql)
	f.Intrinsic.String.Build("UPDATE INVENTORY_MST2 SET LENGTH='{0}', WIDTH='{1}', DESCRIPTION_2='{2}', DESCRIPTION_3='{3}' WHERE PART='{4}'",v.Local.fLength,v.Local.fWidth,v.Local.sAlt1.PSQLFriendly,v.Local.sAlt2.PSQLFriendly,v.Local.sPartNumber,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.sSql)
	
	'Update part Document Control
	v.Local.iRefID.Declare
	v.Local.iRet.Declare
	v.Local.iRet.Set(v.Screen.FormMain!trvFile.NodeCount)
	f.Intrinsic.Math.Sub(v.Local.iRet,1,v.Local.iRet)
	v.Local.sText.Declare
	v.Local.sSplit.Declare
	v.Local.iPos.Declare
	v.Local.sFileType.Declare
	v.Local.sfullfilepath.Declare
	v.Local.sFileName.Declare
	v.Local.sFilePath.Declare
	v.Local.sDocName.Declare
	v.Local.sDocIDGroup.Declare
	v.Local.sDocDescription.Declare
	
	'Update Fixed Price
	f.Intrinsic.String.Build("SELECT FIXED_PRICE FROM GAB_6595_FIXED_PRICE WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
		f.Intrinsic.String.Build("insert into GAB_6595_FIXED_PRICE (PART,FIXED_PRICE) VALUES ('{0}',{1})",v.Local.sPartNumber.Trim,v.Screen.FormMain!chkFixedPrice.Value,v.Local.ssql)
		f.ODBC.Connection!con.Execute(v.Local.sSql)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("UPDATE GAB_6595_FIXED_PRICE SET FIXED_PRICE={0} WHERE PART='{1}'",v.Screen.FormMain!chkFixedPrice.Value,v.Local.sPartNumber.Trim,v.Local.ssql)
		f.ODBC.Connection!con.Execute(v.Local.sSql)
		
	f.Intrinsic.Control.EndIf
	
	''''''''''''''
	'save & update of document group is not working, start there
	'''''''''''''
	
	'Get REference ID, create one if non-existant
	f.Intrinsic.Control.If(v.DataTable.dtDocuments.RowCount,>,0)
		f.Global.DocumentControl.GetLinkID(v.Local.sPartNumber,30,v.Local.iRefID)
		f.Intrinsic.Control.If(v.Local.irefid,=,-1)
			F.Global.DocumentControl.CreateReference(V.Local.sPartNumber,"00030",V.Local.iRefID)
		f.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.EndIf
	
	'Delete what is there
	v.Local.ssql.Set("DELETE FROM ATG_DOC_ASSOC WHERE LINK_ID='{0}'")
	F.Intrinsic.String.Build(v.Local.ssql,v.Local.irefid,v.Local.ssql)
	f.ODBC.Connection!con.execute(v.Local.ssql)
	
	'Loop through all documents
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtDocuments.RowCount--,1)
		F.Intrinsic.Control.If(V.DataTable.dtDocuments(v.Local.i).RowState,<>,8)		
			v.Local.sDocName.Set(v.DataTable.dtDocuments(v.Local.i).Group!fieldvaltrim)
			v.Local.sFullFilePath.Set(v.DataTable.dtDocuments(v.Local.i).FullPath!fieldvaltrim)
			v.Local.sFilePath.Set(v.DataTable.dtDocuments(v.Local.i).Path!fieldvaltrim)
			v.Local.sFileName.Set(v.DataTable.dtDocuments(v.Local.i).File!fieldvaltrim)
			v.Local.sDocDescription.Set(v.DataTable.dtDocuments(v.Local.i).Descr!fieldvaltrim)
			f.Intrinsic.File.GetFileNameFromFQN(v.Local.sfullfilepath,v.Local.sFileName)
			f.Intrinsic.File.GetPathFromFQN(v.Local.sfullfilepath,v.Local.sFilePath)
			
			'Get file Type
			f.Intrinsic.String.InstrRev(v.Local.sFileName,".",v.Local.iPos)
			f.Intrinsic.String.Mid(v.Local.sFileName,v.Local.iPos.++,v.Local.sFileType)
			F.Intrinsic.String.Split(V.Local.sFileType,"~",v.Local.sFileType)
			
			'Look up document group id
			f.Intrinsic.String.Build("SELECT GRP_ID FROM ATG_DOC_GRP WHERE GRP_NAME='{0}'",v.Local.sDocName.Trim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sDocIDGroup)
			f.Intrinsic.Control.If(v.Local.sDocIDGroup.Trim,=,"0")
				v.Local.sDocIDGroup.set("-1")
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.If(v.Local.sDocIDGroup.Trim,=,"")
				v.Local.sDocIDGroup.set("-1")
			f.Intrinsic.Control.EndIf
	
			'Insert into Document Control
			v.Local.ssql.Set("INSERT INTO ATG_DOC_ASSOC VALUES ('','{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','','','','',0)")
			F.Intrinsic.String.Build(V.Local.SSQL,v.Local.irefid,v.Local.sfiletype(0).PSQLFriendly,v.Local.sFilePath.PSQLFriendly,v.Local.sFileName.PSQLFriendly,V.Local.sDocDescription.PSQLFriendly,v.Ambient.Now.PervasiveDate,v.Caller.User,V.Local.sDocIDGroup,v.Local.ssql)
			f.ODBC.Connection!con.execute(v.Local.ssql)
		F.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Delete comments
	F.Intrinsic.String.Build("DELETE FROM RTR_SEQ_COMMENTS WHERE RTR_NUMBER='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.ssql)
	
	'Powder Coating
	v.Local.sNetPriceResult.Declare
	v.Local.sMinChargeResult.Declare
	v.Local.sPowderColour.Declare
	v.Local.sPowderColour.Set(v.Screen.SS_FORM!ddlColour.Value)
	f.Intrinsic.String.Replace(v.Screen.SS_FORM!lblNetPriceResult.Caption,"$","",v.Local.sNetPriceResult)
	f.Intrinsic.String.Replace(v.Screen.SS_FORM!lblMinChargeResult.Caption,"$","",v.Local.sMinChargeResult)
	'Delete what is there
	v.Local.ssql.Set("DELETE FROM GAB_6595_POWDER WHERE PART='{0}'")
	F.Intrinsic.String.Build(v.Local.ssql,v.Local.sPartNumber.Trim,v.Local.ssql)
	f.ODBC.Connection!con.execute(v.Local.sSql)
	
	'Insert
	f.Intrinsic.String.Build("INSERT INTO GAB_6595_POWDER (PART, COLOUR) VALUES ('{0}','{1}')",V.Local.sPartNumber.Trim,v.Local.sPowderColour.Trim,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.sSql)
	V.Local.sSql.Set("UPDATE GAB_6595_POWDER SET PROD_LENGTH='{0}', PROD_WIDTH='{1}', POWD_THICK='{2}', POWD_PRICE='{3}', POWD_COST='{4}', CHEM_COST='{5}', CALC_PRICE='{6}', PRICE_PER_UNIT='{7}', MARKUP='{8}', GAP='{9}', MAN_POWER='{10}', LABOUR_RATE='{11}', SETUP_COST='{12}', LINE_SPEED='{13}', LABOUR_COST='{14}', NET_PRICE='{15}', MIN_CHARGE='{16}', WAIVE='{17}' where PART='{18}' ")
	F.Intrinsic.String.Build(V.Local.sSql,V.Screen.SS_FORM!txtProdLength.TEXT,V.Screen.SS_FORM!txtProdWidth.TEXT,V.Screen.SS_FORM!txtPowdThick.TEXT,V.Screen.SS_FORM!txtPowdPrice.TEXT,V.Screen.SS_FORM!txtPowdCost.TEXT,V.Screen.SS_FORM!txtChemCost.TEXT,V.Screen.SS_FORM!lblCalcPriceResult.Caption,V.Screen.SS_FORM!txtPricePerUnit.TEXT,V.Screen.SS_FORM!txtMarkup.TEXT,V.Screen.SS_FORM!txtGap.TEXT,V.Screen.SS_FORM!txtMan.TEXT,V.Screen.SS_FORM!txtLabourRate.TEXT,V.Screen.SS_FORM!txtSetupCost.TEXT,V.Screen.SS_FORM!txtLineSpeed.TEXT,V.Screen.SS_FORM!txtLabourCost.TEXT,v.Local.sNetPriceResult,v.Local.sMinChargeResult,V.Screen.SS_FORM!chkWaiveMin.Value,v.Local.sPartNumber.Trim,V.Local.sSql)
	F.ODBC.Connection!con.execute(V.Local.sSql)
	
	'Grab Material
	v.Local.sMaterial.Declare
	v.Local.sMaterial.Set(v.Screen.FormMain!txtMaterialName.text)
	v.Local.sMaterialDesc.Declare
	v.Local.sMaterialDesc.Set(v.Screen.FormMain!txtMaterialDesc.text)
	v.Local.fMaterialCost.Declare
	v.Local.fMaterialCost.Set(v.Screen.FormMain!txtSheetCost.text)
	v.Local.sPartsPartSheet.Declare
	v.Local.fPartsPerSheet.Declare
	V.Local.fPartsPerSheetCalc.Declare
	v.Local.sPartsPartSheet.Set(v.Screen.FormMain!txtMainPerSheet.text)
	f.Intrinsic.Control.If(v.Local.sPartsPartSheet.Trim,=,"")
		v.Local.fPartsPerSHeet.Set(0)
	f.Intrinsic.Control.Else
		v.Local.fPartsPerSheet.Set(v.Screen.FormMain!txtMainPerSheet.text)
	f.Intrinsic.Control.EndIf
	v.Local.sPartStepUM.Declare
	F.Intrinsic.Control.If(V.Global.sSquares,<>,"1")
		f.Intrinsic.Control.If(v.Local.fPartsPerSheet,<>,0)
			f.Intrinsic.Math.Div(1,v.Local.fPartsPerSheet,v.Local.fPartsPerSheetCalc)
		f.Intrinsic.Control.EndIf
		V.Local.sPartStepUM.Set("EA")
	F.Intrinsic.Control.Else
		V.Local.fPartsPerSheetCalc.Set(V.Local.fPartsPerSheet)
		V.Local.sPartStepUM.Set("M2")
	F.Intrinsic.Control.EndIf
	v.Local.sMinCharge.Declare
	v.Local.sMinCharge.Set(v.Screen.FormMain!txtSheetMinCharge.text)
	v.Local.sVendQuoteNote.Declare
	v.Local.sVendQuoteNote.Set(v.Screen.FormMain!txtVendQuoteNote.text)
	v.Local.sMarkup.Declare
	v.Local.fMarkup.Declare
	v.Local.sMarkup.Set(v.Screen.FormMain!txtSheetMarkup.text)
	f.Intrinsic.Control.If(v.Local.sMarkup.Trim,=,"")
		v.Local.fMarkup.Set(0)
	f.Intrinsic.Control.Else
		v.Local.fMarkup.Set(v.Screen.FormMain!txtSheetMarkup.text)
	f.Intrinsic.Control.EndIf
	v.Local.sPartStep.Declare
	v.Local.sPartStepDescr.Declare
	v.Local.fPartStepCost.Declare
	v.Local.sPartStepOpCode.Declare
	v.Local.fPartStepQty.Declare
	v.Local.fPartStepSetupQty.Declare
	
	v.Local.fQty1.Declare
	v.Local.fQty2.Declare
	v.Local.fQty3.Declare
	v.local.fQty4.Declare
	v.local.fQty5.Declare
	v.local.fQty6.Declare
	v.local.fQty7.Declare
	v.local.fQty8.Declare
	v.local.fQty9.Declare
	v.local.fQty10.Declare
	v.Local.iPlusOne.Declare
	v.Local.sQtybreak.Declare
	v.Local.sVal.Declare
	v.Local.bVal.Declare
	
	f.Intrinsic.String.Split(v.Screen.FormMain!txtQuantityBrake.text,",",v.Local.sQtyBreak)
	f.Intrinsic.Control.For(v.Local.i,0,9,1)
		f.Intrinsic.Math.Add(v.Local.i,1,v.Local.iPlusOne)
		f.Intrinsic.String.Concat("fQty",v.Local.iPlusOne,v.Local.sVal)
		f.Intrinsic.Control.If(v.Local.sQtybreak(v.Local.i).trim,=,"","or",v.Local.sQtybreak(v.Local.i).trim,=,"OOB")
			v.Local.[v.Local.sVal].Set(0)
		f.Intrinsic.Control.Else
			f.Intrinsic.Math.IsNumeric(v.Local.[v.Local.sVal],v.Local.bVal)
			f.Intrinsic.Control.If(v.Local.bVal)
				v.Local.[v.Local.sVal].Set(v.Local.sQtybreak(v.Local.i))
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Start with the comment, line 1:
	V.Local.sRTRText.Declare
	V.local.sRTRText.Set(V.Screen.FormMain!TXTRTRSEQCOMMENT.Text)
	'f.Data.DataTable.AddRow("6021","ExtraDesc1",v.Local.sAddDesc1,"ExtraDesc2",v.Local.sAddDesc2,"ExtraDesc3",v.Local.sAddDesc3,"CustID",v.Screen.Form!txtCustomer.Text,"RouterNum",v.Local.sBomPart,"Seq","1","RouterDesc",V.Local.sDesc.PSQLFriendly,"PartStepDesc","Comments:","LineType","C","UM","HR","PL","MF","Qty1",1)
	f.Data.DataTable.AddRow("6021","CustPartNum",v.Local.sPartID,"RouterNum",v.Local.sPartNumber,"Seq","1","SortCode",v.Local.sSpecial.UCase,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID, "PartStepDesc","WO INSTRUCTIONS:","LineType","C","CustID",v.Local.sCustID,"RateUC",v.Local.fMaterialCost,"UM","EA","PL",V.Screen.FormMain!txtPartPL.TEXT,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
	
	f.Intrinsic.String.Concat("",v.Local.sRTRText,v.Local.sRTRText)
	F.Intrinsic.String.RTrim(V.Local.sRTRText,V.Local.sRTRText)
	f.Intrinsic.String.Build("SELECT * FROM RTR_SEQ_COMMENTS WHERE RTR_NUMBER='{0}' and RTR_SEQ='000001'",v.Local.sPartNumber.Trim,v.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
		F.Intrinsic.String.Build("Insert into RTR_SEQ_COMMENTS (RTR_NUMBER,RTR_SEQ,TEXT) VALUES('{0}','000001','{1}')",V.Local.sPartNumber.PSQLFriendly,V.Local.sRTRText.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	f.Intrinsic.Control.Else
		F.Intrinsic.String.Build("update RTR_SEQ_COMMENTS set text='{0}' where RTR_NUMBER='{1}' AND RTR_SEQ='000001'",V.Local.sRTRText.PSQLFriendly,V.Local.sPartNumber.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	f.Intrinsic.Control.EndIf
	
	
	f.Intrinsic.Control.Try
		F.Intrinsic.Control.If(V.Local.sSpecial.Trim,<>,"NOMATERIAL")
			f.Data.DataTable.AddRow("6021","CustPartNum",v.Local.sPartID,"RouterNum",v.Local.sPartNumber,"Seq","100","SortCode",v.Local.sSpecial.UCase,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID, "PartStepDesc",v.Local.sMaterialDesc,"LineType","M","PartNum",v.Local.sMaterial,"RunTimeMatlQty",v.Local.fPartsPerSheetCalc,"CustID",v.Local.sCustID,"RateUC",v.Local.fMaterialCost,"UM",v.Local.sPartStepUM,"PL",V.Screen.FormMain!txtPartPL.TEXT,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
		F.Intrinsic.Control.EndIf
		f.Intrinsic.String.Build("DELETE FROM GAB_6595_MEMO_MAT WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
		f.ODBC.Connection!con.execute(v.Local.sSql)
		f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
			f.Intrinsic.String.Build("INSERT INTO GAB_6595_MEMO_MAT VALUES ('{0}',{1},{2},'{3}','{4}','{5}',0)",V.Local.sPartNumber.Trim,v.Local.fPartsPerSheet,v.Local.fMarkup,v.Local.sMinCharge,v.Local.sSpecial,v.Local.sVendQuoteNote.PSQLFriendly,v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.sSql)
		f.Intrinsic.Control.EndIf
			
	f.Intrinsic.Control.Catch
		f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.EndTry
	
	'Next is components
	v.Local.sComp.Declare
	v.Local.sCompDescr.Declare
	v.Local.sCompUM.Declare
	v.Local.sCompQty.Declare
	v.Local.sCompSetupQty.Declare
	v.Local.sCompCost.Declare
	v.Local.sCompExtraNote.Declare
	v.Local.sCompSeq.Declare
	v.Local.sCompOmit.Declare
	v.Local.sCompSortCode.Declare
	v.Local.sCompMarkup.Declare
	
	
	f.Intrinsic.Control.Try
		f.Intrinsic.String.Build("DELETE FROM GAB_6595_MEMO_COMP WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
		f.ODBC.Connection!con.execute(v.Local.sSql)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtMaterials.RowCount--,1)
			
			v.Local.sComp.Set(v.DataTable.dtMaterials(v.Local.i).Code!fieldvaltrim)
			v.Local.sCompDescr.Set(v.DataTable.dtMaterials(v.Local.i).Descr!fieldvaltrim)
			v.Local.sCompUM.Set(v.DataTable.dtMaterials(v.Local.i).UM!Fieldvaltrim)
			v.Local.sCompQty.Set(v.DataTable.dtMaterials(v.local.i).Qty!fieldval)
			v.Local.sCompSetupQty.Set(v.DataTable.dtMaterials(v.local.i).SetQty!fieldval)
			v.Local.sCompCost.Set(v.DataTable.dtMaterials(v.Local.i).UnitCost!fieldval)
			v.local.sCompExtraNote.Set(v.DataTable.dtMaterials(v.Local.i).Notes!fieldvaltrim)
			v.Local.sCompOmit.Set(v.DataTable.dtMaterials(v.Local.i).Omit!fieldvaltrim)
			v.Local.sCompSortCode.Set(v.DataTable.dtMaterials(v.Local.i).SortCode!fieldvaltrim)
			v.Local.sCompMarkup.Set(v.DataTable.dtMaterials(v.Local.i).Markup!fieldval)
			f.Intrinsic.Control.If(v.Local.sCompMarkup.Trim,=,"")
				v.Local.sCompMarkup.Set(0)
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Math.Add(v.Local.iMSeq,1,v.local.iMSeq)
			f.Intrinsic.String.LPad(v.Local.iMSeq,"0",6,v.Local.sCompSeq)
			f.Intrinsic.String.Build("INSERT INTO GAB_6595_MEMO_COMP VALUES ('{0}',{1},{2},'{3}',{4},0,'','','','')",v.Local.sPartNumber.Trim,v.Local.sCompMarkup,V.Local.i,v.local.sComp.Trim,V.Local.sCompSeq.Trim,v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.ssql)
			
			f.Data.DataTable.AddRow("6021","CustPartNum",v.Local.sPartID,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.sCompSeq,"SortCode",V.Local.sCompSortCode.UCase,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID, "PartStepDesc",v.Local.sCompDescr.PSQLFriendly,"LineType","M","PartNum",v.Local.sComp,"SetupQty",v.Local.sCompSetupQty,"RunTimeMatlQty",v.Local.sCompQty,"CustID",v.Local.sCustID,"RateUC",v.Local.sCompCost,"UM",v.Local.sCompUM,"PL",V.Screen.FormMain!txtPartPL.TEXT,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
			f.Intrinsic.String.Build("UPDATE ROUTER_LINE SET OMIT_FROM_WO='{0}' WHERE ROUTER='{1}' AND LINE_ROUTER='{2}'",V.Local.sCompOmit,v.Local.sPartNumber,v.Local.sCompSeq,v.Local.sSql)
			f.Intrinsic.String.Concat(v.Global.sOmitSql,v.Local.sSql,";",v.Global.sOmitSql)
			
			'Insert the comments
			F.Intrinsic.String.Build("INSERT INTO RTR_SEQ_COMMENTS VALUES ('{0}','{1}','{2}')",v.Local.sPartNumber,v.Local.sCompSeq,v.local.sCompExtraNote.PSQLFriendly,v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.sSql)
					
		f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.Catch
		f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.EndTry
	
	'Declare labour variables
	V.Local.iSeq.Declare
	v.Local.iSeq.Set(500)
	v.Local.sSeq.Declare
	V.Local.sTag.Declare
	v.Local.sWCBase.Declare
	v.Local.sWC.Declare
	v.Local.fWCRate.Declare
	v.Local.sExtraNotes.Declare
	v.Local.sLineType.Declare
	v.Local.sOmit.Declare
	v.Local.fSetup.Declare
	v.Local.fRun.Declare
	v.Local.fLeadTime.Declare
	v.Local.fsetupRate.Declare
	v.Local.fProcess.Declare
	v.Local.fProcessRate.Declare
	v.Local.bSubContract.Declare
	v.Local.iSubContract.Declare
	V.Local.fLaserBill.Declare
	v.Local.fLaserSetRate.Declare
	v.Local.fLaserSetTime.Declare
	v.Local.fLaserFloatTime.Declare
	
	'Save all Labour
	'Laser
	f.Intrinsic.Control.Try
		F.Intrinsic.Control.If(V.Local.sSpecial.Trim,<>,"NOMATERIAL")
			v.Local.sWC.Set(V.Screen.FormMain!ddlWorkCenterLaser.Value)
			f.Intrinsic.String.Build("SELECT WC_NAME FROM WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC.Trim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.sWCBase)
			f.Intrinsic.String.Build("SELECT STANDARD_COST FROM WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC.Trim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.fWCRate)
			f.Intrinsic.String.Build("SELECT FLOAT FROM WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC.Trim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.fLaserFloatTime)
			f.Data.DataTable.Compute("dtFeaturesTable","SUM(Time)","",v.Local.fRun)
			'Check if part exists in Memo table, delete if exists
			f.Intrinsic.String.build("DELETE FROM GAB_6595_MEMO_CUT WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.sSql)
			'start here
			F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtFeaturesTable.RowCount--,1)
				f.Intrinsic.Control.If(v.DataTable.dtFeaturesTable(v.Local.i).RowState,<>,8)
					f.Intrinsic.Control.If(v.Screen.FormMain!txtCutBillRate.text,=,"")
						v.Local.fLaserBill.Set(0)
					f.Intrinsic.Control.Else
						v.Local.fLaserBill.Set(v.Screen.FormMain!txtCutBillRate.text)
					f.Intrinsic.Control.EndIf
					
					f.Intrinsic.Control.If(v.Screen.FormMain!txtCutSetRate.text,=,"")
						v.Local.fLaserSetRate.Set(0)
					f.Intrinsic.Control.Else
						v.Local.fLaserSetRate.Set(v.Screen.FormMain!txtCutSetRate.text)
					f.Intrinsic.Control.EndIf
					
					f.Intrinsic.Control.If(v.Screen.FormMain!txtCutSetupTime.text,=,"")
						v.Local.fLaserSetTime.Set(0)
					f.Intrinsic.Control.Else
						v.Local.fLaserSetTime.Set(v.Screen.FormMain!txtCutSetupTime.text)
					f.Intrinsic.Control.EndIf
					
					
					f.Intrinsic.String.Build("INSERT INTO GAB_6595_MEMO_CUT VALUES ('{0}',{1},'{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}',0)",v.Local.sPartNumber.Trim,v.Local.fLaserBill,v.Local.fLaserSetRate,v.DataTable.dtFeaturesTable(v.Local.i).Speed!fieldval,v.DataTable.dtFeaturesTable(v.Local.i).Feature!fieldvaltrim,V.DataTable.dtFeaturesTable(v.Local.i).Pierce!fieldvaltrim,V.DataTable.dtFeaturesTable(v.Local.i).QTY!fieldval,V.DataTable.dtFeaturesTable(v.Local.i).Time!fieldval,V.DataTable.dtFeaturesTable(V.Local.i).Dim1!FIELDVAL,V.DataTable.dtFeaturesTable(v.Local.i).Dim2!fieldval,V.DataTable.dtFeaturesTable(v.Local.i).Length!fieldval,v.Local.fLaserSetTime,V.Local.sSql)
					f.ODBC.Connection!con.execute(v.Local.ssql)
				f.Intrinsic.Control.EndIf 
			F.Intrinsic.Control.Next(V.Local.i)
			'Divide the time and ready for upload
			f.Intrinsic.Control.If(v.Local.fRun,<>,0)
				f.Intrinsic.Math.Div(v.Local.fRun,60,v.Local.frun)
				f.Intrinsic.Math.Div(v.Local.fRun,60,v.Local.frun)
				f.Data.DataTable.AddRow("6021","PostFloat",V.Local.fLaserFloatTime,"CustPartNum",v.Local.sPartID,"RouterNum",v.Local.sPartNumber,"Seq",v.DataTable.dtConfig(1).Seq!FIELDVAL,"SortCode",v.DataTable.dtConfig(1).Tag!FIELDVALTRIM,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"WC",v.Local.sWC,"PartStepDesc",v.Local.sWCBase,"LineType","L","RunTimeMatlQty",v.Local.fRun,"CustID",v.Local.sCustID,"RateUC",v.Local.fWCRate,"UM","HR","PL",V.Screen.FormMain!txtPartPL.Text,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
			f.Intrinsic.Control.EndIf
			
			
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Catch
		f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.EndTry
	
	'All Other Workcentres
	
	'Check if part exists in Memo table, delete if exists
	f.Intrinsic.Control.Try
		F.Intrinsic.String.Build("SELECT * FROM GAB_6595_STEPS WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
			f.Intrinsic.String.build("DELETE FROM GAB_6595_STEPS WHERE PART='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.sSql)
		f.Intrinsic.Control.EndIf
		'loop through the records
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtWorkSelection.RowCount--,1)
			f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).RowState,<>,8)
			
				f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).Setup!fieldvaltrim,<>,"")
					v.Local.fsetup.Set(v.DataTable.dtWorkSelection(v.Local.i).Setup!fieldval)
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).SetupRate!fieldvaltrim,<>,"")
					v.Local.fsetuprate.Set(v.DataTable.dtWorkSelection(v.Local.i).SetupRate!fieldval)
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).Process!fieldvaltrim,<>,"")
					v.Local.fProcess.Set(v.DataTable.dtWorkSelection(v.Local.i).Process!fieldval)
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).ProcessRate!fieldvaltrim,<>,"")
					v.Local.fProcessRate.Set(v.DataTable.dtWorkSelection(v.Local.i).ProcessRate!fieldval)
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).S!fieldvaltrim,=,"True")
					v.Local.iSubContract.Set(1)
				f.Intrinsic.Control.Else
					v.Local.iSubContract.Set(0)
				f.Intrinsic.Control.EndIf
				
				v.Local.sWC.Set(v.DataTable.dtWorkSelection(v.Local.i).WC!FIELDVALTRIM)
				v.Local.sWCBase.Set(v.DataTable.dtWorkSelection(v.Local.i).WCBase!FIELDVALTRIM)
				v.Local.sExtraNotes.Set(v.DataTable.dtWorkSelection(v.Local.i).ExtraDesc!FIELDVALTRIM)
				v.Local.fSetup.Set(v.DataTable.dtWorkSelection(v.Local.i).Setup!FIELDVAL)
				v.Local.sOmit.Set(v.DataTable.dtWorkSelection(v.Local.i).Omit!FIELDVAL)
				f.Intrinsic.Control.If(v.Local.fSetup,<>,0)
					f.Intrinsic.Math.Div(v.Local.fSetup,60,v.Local.fSetup)
				f.Intrinsic.Control.EndIf
				v.Local.fRun.Set(v.DataTable.dtWorkSelection(v.Local.i).Process!FIELDVAL)
				v.Local.fLeadTime.Set(v.DataTable.dtWorkSelection(v.Local.i).L!Fieldval)
				f.Intrinsic.String.Build("SELECT STANDARD_COST FROM WORKCENTERS WHERE MACHINE='{0}'",v.Local.sWC.Trim,v.Local.ssql)
				f.ODBC.Connection!con.executeandreturn(v.Local.sSql,v.Local.fWCRate)
				
				f.Intrinsic.Control.If(v.DataTable.dtWorkSelection(v.Local.i).LMO!fieldvaltrim,=,"O")
					v.Local.sLineType.Set("O")
					f.Intrinsic.Math.add(V.Local.iSeq,100,v.Local.iSeq)
					f.Data.DataTable.AddRow("6021","CustPartNum",v.Local.sPartID,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.iSeq,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"PartNum",v.Local.sWC,"PartStepDesc",v.Local.sWCBase,"LineType",v.Local.sLineType,"SetupQty",v.Local.fSetup,"RunTimeMatlQty",v.Local.fRun,"CustID",v.Local.sCustID,"RateUC",v.DataTable.dtWorkSelection(v.Local.i).CostRate!fieldval,"UM",v.DataTable.dtWorkSelection(v.Local.i).UM!fieldvaltrim,"LeadTime",v.DataTable.dtWorkSelection(v.Local.i).L!fieldval,"OperationCodeVend",v.DataTable.dtWorkSelection(v.Local.i).Vend!fieldvaltrim,"PL",v.Screen.FormMain!txtPartPL.text,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
					f.Intrinsic.String.LPad(v.Local.iSeq,"0",6,v.Local.sSeq)
					F.Data.DataTable.SetValue("dtWorkSelection",v.Local.i,"P",V.Local.sSeq)
					f.Intrinsic.String.Build("UPDATE ROUTER_LINE SET OMIT_FROM_WO='{0}' WHERE ROUTER='{1}' AND LINE_ROUTER='{2}'",V.Local.sOmit,v.Local.sPartNumber,v.Local.sSeq,v.Local.sSql)
					f.Intrinsic.String.Concat(v.Global.sOmitSql,v.Local.sSql,";",v.Global.sOmitSql)
				f.Intrinsic.Control.Else
					v.Local.sLineType.Set("L")
					f.Intrinsic.Control.If(V.DataTable.dtWorkSelection(v.Local.i).T!fieldval,=,"M")
						F.Intrinsic.Control.If(V.Local.fRun,<>,0)
							F.Intrinsic.Math.Div(V.Local.fRun,60,V.Local.fRun)
						F.Intrinsic.Control.EndIf
					f.Intrinsic.Control.ElseIf(v.DataTable.dtWorkSelection(v.Local.i).T!fieldval,=,"S")
						F.Intrinsic.Control.If(V.Local.fRun,<>,0)
							F.Intrinsic.Math.Div(V.Local.fRun,60,V.Local.fRun)
							F.Intrinsic.Math.Div(V.Local.fRun,60,V.Local.fRun)
						F.Intrinsic.Control.EndIf
					f.Intrinsic.Control.EndIf
					
					'Check sequence number
					F.Intrinsic.String.UCase(V.Local.sWCBase,V.Local.sWCBase)
					
					f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtConfig.RowCount--,1)
						v.Local.sTag.Set(v.DataTable.dtConfig(v.Local.j).Tag!fieldvaltrim)
						f.Intrinsic.String.UCase(v.Local.sTag,v.Local.sTag)
						f.Intrinsic.Control.If(v.Local.sWCBase.Trim,=,v.Local.sTag.Trim)
							f.Intrinsic.String.LPad(v.DataTable.dtConfig(v.Local.j).Seq!fieldval,"0",6,v.Local.sSeq)
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.Next(v.Local.j)
					
					
					'Programming AND any other tags
					f.Intrinsic.Control.If(v.Local.sSeq.Trim,<>,"")
						f.Data.DataTable.AddRow("6021","PostFloat",v.DataTable.dtWorkSelection(v.Local.i).PostFloat!fieldval, "CustPartNum",v.Local.sPartID,"OperationCodeVend",v.DataTable.dtWorkSelection(v.Local.i).Vend!fieldvaltrim,"RouterNum",v.Local.sPartNumber,"Seq",V.Local.sSeq,"SortCode",v.DataTable.dtConfig(0).Tag!FIELDVALTRIM,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"WC",v.Local.sWC,"PartStepDesc",v.Local.sWCBase,"LineType",v.Local.sLineType,"SetupQty",v.Local.fSetup,"RunTimeMatlQty",v.Local.fRun,"CustID",v.Local.sCustID,"RateUC",v.Local.fWCRate,"UM","HR","LeadTime",v.Local.fLeadTime,"PL",v.Screen.FormMain!txtPartPL.text,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
						F.Data.DataTable.SetValue("dtWorkSelection",v.Local.i,"P",v.Local.sSeq)	
						
						f.Intrinsic.String.Build("UPDATE ROUTER_LINE SET OMIT_FROM_WO='{0}' WHERE ROUTER='{1}' AND LINE_ROUTER='{2}'",V.Local.sOmit,v.Local.sPartNumber,v.Local.sSeq,v.Local.sSql)
						f.Intrinsic.String.Concat(v.Global.sOmitSql,v.Local.sSql,";",v.Global.sOmitSql)
					F.Intrinsic.Control.Else
						f.Intrinsic.Math.add(V.Local.iSeq,100,v.Local.iSeq)
						f.Data.DataTable.AddRow("6021","PostFloat",v.DataTable.dtWorkSelection(v.Local.i).PostFloat!fieldval, "CustPartNum",v.Local.sPartID,"OperationCodeVend",v.DataTable.dtWorkSelection(v.Local.i).Vend!fieldvaltrim,"RouterNum",v.Local.sPartNumber,"Seq",v.Local.iSeq,"RouterDesc",v.Local.sDescr,"Custid",v.Local.sCustID,"WC",v.Local.sWC,"PartStepDesc",v.Local.sWCBase,"LineType",v.Local.sLineType,"SetupQty",v.Local.fSetup,"RunTimeMatlQty",v.Local.fRun,"CustID",v.Local.sCustID,"RateUC",v.Local.fWCRate,"UM","HR","LeadTime",v.Local.fLeadTime,"PL",v.Screen.FormMain!txtPartPL.text,"Qty1",v.Local.fQty1,"Qty2",v.Local.fQty2,"Qty3",v.Local.fQty3,"Qty4",v.Local.fQty4,"Qty5",v.Local.fqty5,"Qty6",v.Local.fqty6,"Qty7",v.Local.fqty7,"Qty8",v.Local.fqty8,"Qty9",v.Local.fqty9,"Qty10",v.Local.fqty10)
						f.Intrinsic.String.LPad(v.Local.iSeq,"0",6,v.Local.sSeq)
						F.Data.DataTable.SetValue("dtWorkSelection",v.Local.i,"P",V.Local.sSeq)
						f.Intrinsic.String.Build("UPDATE ROUTER_LINE SET OMIT_FROM_WO='{0}' WHERE ROUTER='{1}' AND LINE_ROUTER='{2}'",V.Local.sOmit,v.Local.sPartNumber,v.Local.sSeq,v.Local.sSql)
						f.Intrinsic.String.Concat(v.Global.sOmitSql,v.Local.sSql,";",v.Global.sOmitSql)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			
				'Insert the comments
				F.Intrinsic.String.Build("INSERT INTO RTR_SEQ_COMMENTS VALUES ('{0}','{1}','{2}')",v.Local.sPartNumber,v.Local.sSeq,v.local.sExtraNotes.PSQLFriendly,v.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.sSql)
				
				'Whether it is an L or an O, insert into the steps table
				v.Local.fProcess.Set(v.DataTable.dtWorkSelection(v.Local.i).Process!FIELDVAL)
				f.Intrinsic.String.Build("INSERT INTO GAB_6595_STEPS (PART, WC, SETUP, SETUP_RATE, PROCESS, PROCESS_RATE, UM, TIME_UNIT, P, SUBCONTRACT, VENDOR, LMO, OPERATION, DURATION) VALUES ('{0}','{1}',{2},{3},{4},{5},'{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')",v.Local.sPartNumber.Trim,V.DataTable.dtWorkSelection(v.Local.i).WC!Fieldvaltrim,v.DataTable.dtWorkSelection(v.Local.i).Setup!FIELDVAL,v.Local.fsetupRate,v.Local.fProcess,v.Local.fProcessRate,V.DataTable.dtWorkSelection(v.Local.i).UM!fieldval,V.DataTable.dtWorkSelection(v.Local.i).T!fieldval,V.DataTable.dtWorkSelection(v.Local.i).P!fieldval,v.Local.iSubContract,V.DataTable.dtWorkSelection(v.Local.i).Vend!fieldvaltrim,V.DataTable.dtWorkSelection(v.Local.i).LMO!fieldval,V.DataTable.dtWorkSelection(v.Local.i).Operation!fieldvaltrim,V.DataTable.dtWorkSelection(v.Local.i).Duration!fieldvaltrim,V.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.ssql)
				
				v.Local.sSeq.Set("")
				
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.Catch
		f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.EndTry
	
	'Upload into GSS
	
	F.Intrinsic.String.Build("DELETE FROM ROUTER_HEADER WHERE ROUTER='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.ssql)
	
	F.Intrinsic.String.Build("DELETE FROM ROUTER_XREF WHERE ROUTER='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.ssql)
	
	F.Intrinsic.String.Build("DELETE FROM ROUTER_SUPP_HDR WHERE RTR_NUM='{0}'",v.Local.sPartNumber.Trim,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.ssql)
	
	f.Intrinsic.Control.CallSub(6021Sync)
	
	v.Local.sdate.Declare
	f.Intrinsic.String.Format(v.Ambient.Date,"YYMMDD",v.Local.sdate)
	f.Intrinsic.String.Build("UPDATE ROUTER_HEADER SET DATE_LAST_ACCESSED='{0}' WHERE ROUTER='{1}'",v.Local.sdate,v.Local.sPartNumber,v.Local.sSql)
	f.ODBC.Connection!con.execute(v.Local.sSql)
	
	f.Intrinsic.String.Split(v.Global.sOmitSql,";",v.Global.sOmitSql)
	f.Intrinsic.Control.For(v.Local.i,0,v.Global.sOmitSql.UBound,1)
		F.Intrinsic.Control.If(v.Global.sOmitSql(v.Local.i).TRIM,<>,"")
			f.ODBC.Connection!con.execute(v.Global.sOmitSql(v.Local.i))
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	v.Global.sOmitSql.Set("")
	
	f.Intrinsic.Control.CallSub(loadCustomerParts,"Customer",v.Screen.FormMain!txtClientCode.text)
	
	gui.FormMain..Enabled(True)
	gui.FormMain..SetFocus(1)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormMain_SaveButtonClick.End

Program.Sub.FormMain_UnLoad.Start
f.Intrinsic.Control.CallSub(Serialize)
F.ODBC.Connection!CON.Close
F.Intrinsic.Control.End
Program.Sub.FormMain_UnLoad.End

Program.Sub.FormQuote_UnLoad.Start
gui.FormQuote..Visible(false)
Program.Sub.FormQuote_UnLoad.End

Program.Sub.FormCCSetup_Unload.Start
f.Intrinsic.Control.Try

	gui.FormCCSetUp..Visible(False)
	gui.FormMain.cmdGenerateNewPartCode.Enabled(true)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormCCSetup_Unload.End

Program.Sub.FormUpdatePartsText_UnLoad.Start
f.Intrinsic.Control.Try
	gui.FormUpdatePartsText..Visible(False)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormUpdatePartsText_UnLoad.End

Program.Sub.frmCreateKit_Unload.Start
f.Intrinsic.Control.Try
	gui.frmCreateKit..Visible(False)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.frmCreateKit_Unload.End

Program.Sub.frmOverride_UnLoad.Start
gui.frmOverride..Visible(false)
Program.Sub.frmOverride_UnLoad.End

Program.Sub.frmMassAdd_UnLoad.Start
gui.frmMassAdd..Visible(false)
Program.Sub.frmMassAdd_UnLoad.End

Program.Sub.frmQuickRouter_UnLoad.Start
gui.frmQuickRouter..Visible(false)
Program.Sub.frmQuickRouter_UnLoad.End

Program.Sub.frmLaserCutter_UnLoad.Start
gui.frmLaserCutter..Visible(false)
Program.Sub.frmLaserCutter_UnLoad.End

Program.Sub.SS_FORM_UnLoad.Start
gui.SS_FORM..Visible(false)
Program.Sub.SS_FORM_UnLoad.End

Program.Sub.frmNestingEff_UnLoad.Start
gui.frmNestEff..Visible(false)
Program.Sub.frmNestingEff_UnLoad.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$gsandoval$}$20230913130338187$}$pxyipsmdqasyAY7lJ5+YqAibKN4I37/YudkzCwm6ngQXKjffkywEkik7m7XxFvcH4HRe/Giu0qOHH9KOAwT2SA==
Program.Sub.Comments.End